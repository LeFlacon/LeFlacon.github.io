<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>ural 1593 Square Country. Version 2（n最少能表示成几个完全平方数的和）</title>
      <link href="/2018/10/10/ural%201593%20Square%20Country.%20Version%202%EF%BC%88n%E6%9C%80%E5%B0%91%E8%83%BD%E8%A1%A8%E7%A4%BA%E6%88%90%E5%87%A0%E4%B8%AA%E5%AE%8C%E5%85%A8%E5%B9%B3%E6%96%B9%E6%95%B0%E7%9A%84%E5%92%8C%EF%BC%89/"/>
      <url>/2018/10/10/ural%201593%20Square%20Country.%20Version%202%EF%BC%88n%E6%9C%80%E5%B0%91%E8%83%BD%E8%A1%A8%E7%A4%BA%E6%88%90%E5%87%A0%E4%B8%AA%E5%AE%8C%E5%85%A8%E5%B9%B3%E6%96%B9%E6%95%B0%E7%9A%84%E5%92%8C%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.timus.ru/problem.aspx?space=1&amp;num=1593" rel="external nofollow noopener noreferrer" target="_blank">http://acm.timus.ru/problem.aspx?space=1&amp;num=1593</a></p><p>Time limit: 1.0 second<br>Memory limit: 64 MB</p><p>There live square people in a square country. Everything in this country is square also. Thus, the Square Parliament has passed a law about a land. According to the law each citizen of the country has a right to buy land. A land is sold in squares, surely. Moreover, a length of a square side must be a positive integer amount of meters. Buying a square of land with a side a one pays a2 quadrics (a local currency) and gets a square certificate of a landowner.<br>One citizen of the country has decided to invest all of his N quadrics into the land. He can, surely, do it, buying square pieces 1 × 1 meters. At the same time the citizen has requested to minimize an amount of pieces he buys: “It will be easier for me to pay taxes,” — he has said. He has bought the land successfully.<br>Your task is to find out a number of certificates he has gotten.</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The only line contains a positive integer N ≤ 1015 , that is a number of quadrics that the citizen has invested.</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>The only line contains a number of certificates that he has gotten.</p><h3 id="Sample"><a href="#Sample" class="headerlink" title="Sample"></a>Sample</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">input</span><br><span class="line"><span class="number">344</span></span><br><span class="line">output</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给一个数n，n&lt;=1e15，求n最少能表示成几个完全平方数的和</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>这个题的基础版：<a href="https://leflacon.github.io/2018/10/10/ural%201073%20Square%20Country/">ural 1073 Square Country</a></p><p>还是用到<strong>四平方和定理</strong>：“每个正整数均可表示为4个整数的平方和”</p><p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fw38vey5zlj30ma0580t3.jpg" alt=""></p><p>直接暴力判断1，2，3的情况，其余输出4，但是这题n太大了，毫无意外的t掉了，所以要来点定理优化</p><ul><li><p><code>n≠4^a*(8m+7)</code>是n可以用三个平方数表示的一个充分必要条件</p></li><li><p>正整数n能表示为两平方数之和的充要条件，是在它的标准分解式中，形如4k+3的素因数的幂指数是偶数</p></li><li><p>形如 4k+3 的整数有形如 4k+3 的素因子</p></li></ul><p>先判断1，然后除去n的所有因子2得m，此时如果m%4!=3，也就是说“4k+3的素因数的幂指数是奇数”的情况不存在，那么可以继续判断答案为2的可能，如果m=1那么符合定理要求答案为2，其余情况就要暴力找有没有可能是两个数的平方和，当然这里暴力也是要优化一下的，枚举的范围在<code>[sqrt(n-sqrt(n)*sqrt(n)),sqrt(n)]</code></p><p>判断3，4时用到上面第一个定理，因为是充要条件，所以直接判断，不是3就是4，直接干掉快的不行 </p><p>最后跑了312ms</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;algorithm&gt;</span></span><br><span class="line"><span class="comment">#include &lt;cstdio&gt;</span></span><br><span class="line"><span class="comment">#include &lt;cstring&gt;</span></span><br><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include &lt;cmath&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line"><span class="comment">#define LL long long </span></span><br><span class="line">int main()&#123;</span><br><span class="line">    LL n,m,sum,tmp1,tmp2;</span><br><span class="line">    scanf(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">    <span class="attribute">tmp1</span>=sqrt(n);</span><br><span class="line">    <span class="keyword">if</span>(tmp1*<span class="attribute">tmp1</span>==n)&#123;</span><br><span class="line">        puts(<span class="string">"1"</span>);</span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">m</span>=n;</span><br><span class="line">    <span class="keyword">while</span>(!(m&amp;1))m/=2;</span><br><span class="line">    <span class="keyword">if</span>(m%4!=3)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="attribute">m</span>==1)&#123;</span><br><span class="line">            puts(<span class="string">"2"</span>);</span><br><span class="line">            return 0;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="attribute">m</span>=n;</span><br><span class="line">        <span class="attribute">sum</span>=n;</span><br><span class="line">        <span class="attribute">tmp1</span>=sqrt(m);</span><br><span class="line">        <span class="attribute">m</span>=m-tmp1*tmp1;</span><br><span class="line">        <span class="attribute">tmp2</span>=sqrt(m);</span><br><span class="line">        <span class="keyword">for</span>(LL <span class="attribute">i</span>=tmp1;i&gt;=tmp2;i--)&#123;</span><br><span class="line">            <span class="attribute">m</span>=sum;</span><br><span class="line">            <span class="attribute">m</span>=m-i*i;</span><br><span class="line">            <span class="attribute">tmp2</span>=sqrt(m);</span><br><span class="line">            <span class="keyword">if</span>(tmp2*tmp2+i*<span class="attribute">i</span>==sum)&#123;</span><br><span class="line">                puts(<span class="string">"2"</span>);</span><br><span class="line">                return 0;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">m</span>=n;</span><br><span class="line">    <span class="keyword">while</span>(m%<span class="attribute">4</span>==0)m/=4;</span><br><span class="line">    <span class="keyword">if</span>(m%8!=7)&#123;</span><br><span class="line">        puts(<span class="string">"3"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> puts(<span class="string">"4"</span>);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 四平方和定理 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ural 1073 Square Country（四平方和定理，完全背包）</title>
      <link href="/2018/10/10/ural%201073%20Square%20Country/"/>
      <url>/2018/10/10/ural%201073%20Square%20Country/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.timus.ru/problem.aspx?space=1&amp;num=1073" rel="external nofollow noopener noreferrer" target="_blank">http://acm.timus.ru/problem.aspx?space=1&amp;num=1073</a></p><p>Time limit: 1.0 second<br>Memory limit: 64 MB</p><p>There live square people in a square country. Everything in this country is square also. Thus, the Square Parliament has passed a law about a land. According to the law each citizen of the country has a right to buy land. A land is sold in squares, surely. Moreover, a length of a square side must be a positive integer amount of meters. Buying a square of land with a side a one pays a2 quadrics (a local currency) and gets a square certificate of a landowner.<br>One citizen of the country has decided to invest all of his N quadrics into the land. He can, surely, do it, buying square pieces 1 × 1 meters. At the same time the citizen has requested to minimize an amount of pieces he buys: “It will be easier for me to pay taxes,” — he has said. He has bought the land successfully.<br>Your task is to find out a number of certificates he has gotten.   </p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The only line contains a positive integer N ≤ 60 000 , that is a number of quadrics that the citizen has invested.</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>The only line contains a number of certificates that he has gotten.</p><h3 id="Sample"><a href="#Sample" class="headerlink" title="Sample"></a>Sample</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">input</span><br><span class="line"><span class="number">344</span></span><br><span class="line">output</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给一个数n，n&lt;=60000，求n最少能表示成几个完全平方数的和</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>因为这个题n不大，所以有两种方法，而进阶版的题n是1e15，背包的话状态就开不下了，需要用数学性质解决 -&gt; <a href="https://leflacon.github.io/2018/10/10/ural%201593%20Square%20Country.%20Version%202%EF%BC%88n%E6%9C%80%E5%B0%91%E8%83%BD%E8%A1%A8%E7%A4%BA%E6%88%90%E5%87%A0%E4%B8%AA%E5%AE%8C%E5%85%A8%E5%B9%B3%E6%96%B9%E6%95%B0%E7%9A%84%E5%92%8C%EF%BC%89/">1593. Square Country. Version 2</a></p><p>一种是当成<strong>完全背包</strong>做，dp[j]代表j最少能表示成几个完全平方数的和，从1-√n枚举i，状态转移方程为<code>dp[j]=min(dp[j],dp[j-i*i]+1)</code></p><p>第二种方法是当成一个数论题做，用到<strong>四平方和定理</strong>：“每个正整数均可表示为4个整数的平方和”</p><p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fw38vey5zlj30ma0580t3.jpg" alt=""></p><p>所以直接暴力判断1，2，3的情况，其余输出4即可，不过写的时候要注意，如果当前找到了3的一组答案，不能直接输出，因为后续可能有2的答案，之前没考虑这个就wa了一发</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">60005</span>;</span><br><span class="line"><span class="keyword">int</span> dp[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="built_in">memset</span>(dp,INF,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">    dp[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i*i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i*i;j&lt;=n;j++)</span><br><span class="line">            dp[j]=min(dp[j],dp[j-i*i]+<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dp[n]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,flag=<span class="number">0</span>,tmp1,tmp2;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="built_in">sqrt</span>(n);i&gt;<span class="number">0</span>;i--)&#123;</span><br><span class="line">        tmp1=n-i*i;</span><br><span class="line">        <span class="keyword">if</span>(tmp1==<span class="number">0</span>)&#123;</span><br><span class="line">            flag=<span class="number">1</span>;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"1"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="built_in">sqrt</span>(tmp1);j&gt;<span class="number">0</span>;j--)&#123;</span><br><span class="line">                tmp2=tmp1-j*j;</span><br><span class="line">                <span class="keyword">if</span>(tmp2==<span class="number">0</span>)&#123;</span><br><span class="line">                    flag=<span class="number">1</span>;</span><br><span class="line">                    <span class="built_in">puts</span>(<span class="string">"2"</span>);</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">int</span> k=<span class="built_in">sqrt</span>(tmp2);</span><br><span class="line">                    <span class="keyword">if</span>(k*k==tmp2)&#123;</span><br><span class="line">                        flag=<span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!flag)<span class="built_in">puts</span>(<span class="string">"4"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"3"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dp </tag>
            
            <tag> 背包 </tag>
            
            <tag> 四平方和定理 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 3864 D_num（Pollard Rho大因数分解）</title>
      <link href="/2018/10/09/hdu%203864%20D_num%EF%BC%88Pollard%20Rho%E5%A4%A7%E5%9B%A0%E6%95%B0%E5%88%86%E8%A7%A3%EF%BC%89/"/>
      <url>/2018/10/09/hdu%203864%20D_num%EF%BC%88Pollard%20Rho%E5%A4%A7%E5%9B%A0%E6%95%B0%E5%88%86%E8%A7%A3%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)</p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>Oregon Maple was waiting for Bob When Bob go back home. Oregon Maple asks Bob a problem that as a Positive number N, if there are only four Positive number M makes Gcd(N, M) == M then we called N is a D_num. now, Oregon Maple has some Positive numbers, and if a Positive number N is a D_num , he want to know the four numbers M. But Bob have something to do, so can you help Oregon Maple?<br>Gcd is Greatest common divisor.</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>Some cases (case &lt; 100);<br>Each line have a numeral N（1&lt;=N&lt;10^18）</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each N, if N is a D_NUM, then output the four M (if M &gt; 1) which makes Gcd(N, M) = M. output must be Small to large, else output <code>“is not a D_num”</code>.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">9</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">6</span></span><br><span class="line"><span class="number">2</span> <span class="number">5</span> <span class="number">10</span></span><br><span class="line">is not a D_num</span><br></pre></td></tr></table></figure><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给一个数n，n范围1e18，如果n有四个因数，输出除1以外的三个因数</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p><a href="https://leflacon.github.io/2018/10/09/%E5%A4%A7%E5%9B%A0%E6%95%B0%E5%88%86%E8%A7%A3%20--%20Pollard%20Rho%E7%AE%97%E6%B3%95/">大因数分解 – Pollard Rho算法</a></p><p>分解完判断因数，只有两种情况可能有四个因数，一种是1,a,b,a*b，还有一种是1,a,a^2,a^3</p><p>t了无数发。。因为之前的板子快速幂里面的乘法还是直接乘，然后改成快速乘之后78ms过了。。太可怕了</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="built_in">vector</span>&lt;LL&gt;v,ans;</span><br><span class="line"><span class="function">LL <span class="title">mul</span><span class="params">(LL a,LL b,LL p)</span></span>&#123;<span class="comment">//快速乘，防爆LL</span></span><br><span class="line">    a%=p;</span><br><span class="line">    LL res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)res=(res+a)%p;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">        a=(a&lt;&lt;<span class="number">1</span>)%p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">qpow</span><span class="params">(LL a,LL b,LL p)</span></span>&#123;<span class="comment">//快速幂</span></span><br><span class="line">    a%=p;b%=p;</span><br><span class="line">    LL ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)&#123;</span><br><span class="line">            ans=mul(ans,a,p);</span><br><span class="line">        &#125;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">        a=mul(a,a,p);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">gcd</span><span class="params">(LL a,LL b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b==<span class="number">0</span>?a:gcd(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Miller_Rabin</span><span class="params">(LL n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">2</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;<span class="number">2</span>||!(n&amp;<span class="number">1</span>))<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">int</span> cishu=<span class="number">20</span>,ji=<span class="number">0</span>;</span><br><span class="line">    LL m=n<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!(m&amp;<span class="number">1</span>))&#123;</span><br><span class="line">        ji++;</span><br><span class="line">        m&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    srand(<span class="number">100</span>);</span><br><span class="line">    <span class="keyword">while</span>(cishu--)&#123;</span><br><span class="line">        LL a=rand()%(n<span class="number">-1</span>)+<span class="number">1</span>;</span><br><span class="line">        LL x=qpow(a,m,n),tmp=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;ji;i++)&#123;</span><br><span class="line">            tmp=mul(x,x,n);</span><br><span class="line">            <span class="keyword">if</span>(tmp==<span class="number">1</span>&amp;&amp;x!=<span class="number">1</span>&amp;&amp;x!=n<span class="number">-1</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            x=tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(tmp!=<span class="number">1</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">Pollard_Rho</span><span class="params">(LL n,<span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">    LL i=<span class="number">1</span>,k=<span class="number">2</span>,x,y;</span><br><span class="line">    x=rand()%(n<span class="number">-1</span>)+<span class="number">1</span>;y=x;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        i++;</span><br><span class="line">        x=(mul(x,x,n)+c)%n;</span><br><span class="line">        <span class="keyword">if</span>(y==x)<span class="keyword">return</span> n;</span><br><span class="line">        LL d=gcd((y-x+n)%n,n);</span><br><span class="line">        <span class="keyword">if</span>(d!=<span class="number">1</span>&amp;&amp;d!=n)<span class="keyword">return</span> d;     </span><br><span class="line">        <span class="keyword">if</span>(i==k)&#123;</span><br><span class="line">            y=x;</span><br><span class="line">            k&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">find</span><span class="params">(LL n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>)<span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(Miller_Rabin(n))&#123;</span><br><span class="line">        v.push_back(n);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    LL p=n;</span><br><span class="line">    <span class="keyword">while</span>(p&gt;=n)p=Pollard_Rho(p,rand()%(n<span class="number">-1</span>)+<span class="number">1</span>);</span><br><span class="line">    find(p);</span><br><span class="line">    find(n/p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    LL n;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n)!=EOF)&#123;</span><br><span class="line">        v.clear();ans.clear();</span><br><span class="line">        find(n);</span><br><span class="line">        sort(v.begin(),v.end());</span><br><span class="line">        <span class="keyword">if</span>(v.size()==<span class="number">2</span>&amp;&amp;v[<span class="number">0</span>]!=v[<span class="number">1</span>])</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld %lld %lld\n"</span>,v[<span class="number">0</span>],v[<span class="number">1</span>],v[<span class="number">0</span>]*v[<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(v.size()==<span class="number">3</span>&amp;&amp;v[<span class="number">0</span>]==v[<span class="number">1</span>]&amp;&amp;v[<span class="number">1</span>]==v[<span class="number">2</span>])&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld %lld %lld\n"</span>,v[<span class="number">0</span>],v[<span class="number">0</span>]*v[<span class="number">0</span>],v[<span class="number">0</span>]*v[<span class="number">0</span>]*v[<span class="number">0</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"is not a D_num\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pollard_Rho算法 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>大因数分解 -- Pollard Rho算法</title>
      <link href="/2018/10/09/%E5%A4%A7%E5%9B%A0%E6%95%B0%E5%88%86%E8%A7%A3%20--%20Pollard%20Rho%E7%AE%97%E6%B3%95/"/>
      <url>/2018/10/09/%E5%A4%A7%E5%9B%A0%E6%95%B0%E5%88%86%E8%A7%A3%20--%20Pollard%20Rho%E7%AE%97%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>研究了一篇论文，讲的很好，由浅入深，大致记录一下</p><h2 id="试除法"><a href="#试除法" class="headerlink" title="试除法"></a>试除法</h2><p>首先如果要对一个数进行因数分解，最直接的做法就是「试除法」</p><p>假设N是一个能被分解为<code>p*q</code>的数，就暴力的从i=2（i++）开始判断能否整除n，当然由于一半是偶数，所以可以优化先判断2，然后从3开始（i+=2）继续判断</p><p>这种方法可以改的更加暴力，不从i=2开始，直接给一个随机数i然后判断i能否整除n，那么对于<code>n=p*q</code>来说，找出其因数的概率是2/(n-1)，相当小啊，这不是我们要的</p><p>所以接下来要开一个叫 <strong>「Birthday Trick」（生日悖论）</strong> 的挂</p><h2 id="生日悖论"><a href="#生日悖论" class="headerlink" title="生日悖论"></a>生日悖论</h2><p>生日悖论问题：</p><p>如果一个房间里有23个或23个以上的人，那么至少有两个人的生日相同的概率要大于50%。这就意味着在一个典型的标准小学班级(30人)中，存在两人生日相同的可能性更高。对于60或者更多的人，这种概率要大于99%。</p><p><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fw0sqwkn3oj30mc06yjre.jpg" alt=""></p><p><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fw0sr901jxj30md05pmxi.jpg" alt=""></p><p>那么举个取随机数的例子，在[1,1000]中随机取一个数，取得42这个数的概率是1/1000，那么现在修改一下这个问题，在[1,1000]中随机取两个数i,j(i!=j)，i-j=42的概率是多少，如下：479/249750，差不多是1/500，快了一半</p><p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fw0qiiukabj30b208e3yi.jpg" alt=""></p><p>那么大胆假设，如果在[1,1000]中随机取k个数，x1,x2…xk，满足xi-xj=42的概率是多少呢（关于这段论文里的代码我没咋搞明白就懒得试了，mark一下再说吧，先直接丢结果）<br><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fw0sj4txd0j30g6086glh.jpg" alt=""></p><p>然后回到之前的试除法，对于<code>n=p*q</code>来说，取一个[1,n]的随机数，直接得到p或q的概率是很小的，但是取k个数，xi-xj整除n的概率就会随着k的增大而增大，上面这种情况当k=√n时，概率已经上升到50%以上</p><h2 id="用gcd优化"><a href="#用gcd优化" class="headerlink" title="用gcd优化"></a>用gcd优化</h2><p>对于一个10位整数来说，需要选取k=10^5个随机数（原因大概就是√n的时候的精确度已经差不多了），然而，这并没有优化，因为我们要做k^2=10^10次比较，所以这时候又出现了一个更妙的想法</p><p>选取k个数x1,x2…xk，询问是否存在<code>gcd(xi-xj,n)&gt;1</code>，举个例子，如果问有多少个数能整除n，答案只有两个，p和q，如果问有多少个数使得<code>gcd(x,n)&gt;1</code>，答案便很多了p,2p,3p…(q-1)p,q,2q,3q…(p-1)q，也就是说共有p+q-2个数</p><p>所以思路就是在[2,n-1]中随机选k个数，x1,x2…xk，判读是否存在gcd(xi-xj,n)&gt;1，若存在，则gcd(xi-xj,n)是n的一个因子，即之前举例的p或q</p><h2 id="伪随机数："><a href="#伪随机数：" class="headerlink" title="伪随机数："></a>伪随机数：</h2><p>生成10^5个随机数要用到伪随机数的神奇函数<code>f(i)=(x^2+a)mod n</code></p><p>可以自己指定a，也可以用rand()生成，f1=2（别的也行）</p><p>对于大多数数字，这个函数都是完全ok的，但是对于某些特殊数字，会陷入循环0.0，也就是传说中的f环，然后就找不到因子了，比如x1=2，a=1，n=8051就会出现f环，所以需要探测环的出现</p><p>一种方法用一个vis数组记录当前产生的所有数，但是如果n变大，内存就炸了</p><p>所以又要开挂了，<strong>Floyd周期检测策略</strong>，Floyd好厉害啊ʕ •ᴥ•ʔ</p><h2 id="探测f环（Floyd周期检测策略）："><a href="#探测f环（Floyd周期检测策略）：" class="headerlink" title="探测f环（Floyd周期检测策略）："></a>探测f环（Floyd周期检测策略）：</h2><p>假设我们在一个很长很长的圆形轨道上行走，我们如何知道我们已经走完了一圈呢？机智的方法是让A和B，从同一起点开始往前走，B的速度是A的速度的两倍，那么当B第一次赶上A时(套圈)，B就已经走了至少一圈了</p><p>所以如果有环，重新给个种子a就ok了</p><h2 id="Pollard’s-Rho-算法-："><a href="#Pollard’s-Rho-算法-：" class="headerlink" title="Pollard’s Rho 算法 ："></a>Pollard’s Rho 算法 ：</h2><p>以上都结合起来，就差不多是Pollard’s Rho 算法了</p><p>复杂度o(玄学n^(1/4))，不想看复杂度证明了╮(￣▽￣””)╭</p><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="built_in">vector</span>&lt;LL&gt;v;</span><br><span class="line"><span class="function">LL <span class="title">mul</span><span class="params">(LL a,LL b,LL p)</span></span>&#123;<span class="comment">//快速乘，防爆LL</span></span><br><span class="line">    a%=p;</span><br><span class="line">    LL res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)res=(res+a)%p;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">        a=(a&lt;&lt;<span class="number">1</span>)%p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">qpow</span><span class="params">(LL a,LL b,LL p)</span></span>&#123;<span class="comment">//快速幂</span></span><br><span class="line">    a%=p;b%=p;</span><br><span class="line">    LL ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)&#123;</span><br><span class="line">            ans=mul(ans,a,p);</span><br><span class="line">        &#125;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">        a=mul(a,a,p);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">gcd</span><span class="params">(LL a,LL b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b==<span class="number">0</span>?a:gcd(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Miller_Rabin</span><span class="params">(LL n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">2</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;<span class="number">2</span>||!(n&amp;<span class="number">1</span>))<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">int</span> cishu=<span class="number">20</span>,ji=<span class="number">0</span>;</span><br><span class="line">    LL m=n<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!(m&amp;<span class="number">1</span>))&#123;</span><br><span class="line">        ji++;</span><br><span class="line">        m&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    srand(<span class="number">100</span>);</span><br><span class="line">    <span class="keyword">while</span>(cishu--)&#123;</span><br><span class="line">        LL a=rand()%(n<span class="number">-1</span>)+<span class="number">1</span>;</span><br><span class="line">        LL x=qpow(a,m,n),tmp=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;ji;i++)&#123;</span><br><span class="line">            tmp=mul(x,x,n);</span><br><span class="line">            <span class="keyword">if</span>(tmp==<span class="number">1</span>&amp;&amp;x!=<span class="number">1</span>&amp;&amp;x!=n<span class="number">-1</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            x=tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(tmp!=<span class="number">1</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">Pollard_Rho</span><span class="params">(LL n,<span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">    LL i=<span class="number">1</span>,k=<span class="number">2</span>,x,y;</span><br><span class="line">    x=rand()%(n<span class="number">-1</span>)+<span class="number">1</span>;y=x;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        i++;</span><br><span class="line">        x=(mul(x,x,n)+c)%n;</span><br><span class="line">        <span class="keyword">if</span>(y==x)<span class="keyword">return</span> n;</span><br><span class="line">        LL d=gcd((y-x+n)%n,n);</span><br><span class="line">        <span class="keyword">if</span>(d!=<span class="number">1</span>&amp;&amp;d!=n)<span class="keyword">return</span> d;     </span><br><span class="line">        <span class="keyword">if</span>(i==k)&#123;</span><br><span class="line">            y=x;</span><br><span class="line">            k&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">find</span><span class="params">(LL n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>)<span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(Miller_Rabin(n))&#123;</span><br><span class="line">        v.push_back(n);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    LL p=n;</span><br><span class="line">    <span class="keyword">while</span>(p&gt;=n)p=Pollard_Rho(p,rand()%(n<span class="number">-1</span>)+<span class="number">1</span>);</span><br><span class="line">    find(p);</span><br><span class="line">    find(n/p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    LL n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    find(n);</span><br><span class="line">    sort(v.begin(),v.end());</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v.size();i++)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;v[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>终于搞定了睡觉去～<code>\(≧▽≦)/</code>明天去搞两个题耍耍，最后附上那篇论文的链接 -&gt;  <a href="http://files.cnblogs.com/files/Doggu/Pollard-rho%E7%AE%97%E6%B3%95%E8%AF%A6%E8%A7%A3.pdf" rel="external nofollow noopener noreferrer" target="_blank">A Quick Tutorial on Pollard’s Rho Algorithm </a></p>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gcd </tag>
            
            <tag> Pollard_Rho算法 </tag>
            
            <tag> 生日悖论 </tag>
            
            <tag> Floyd周期检测 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>busuanzi计数功能失效及解决办法</title>
      <link href="/2018/10/08/busuanzi%E8%AE%A1%E6%95%B0%E5%8A%9F%E8%83%BD%E5%A4%B1%E6%95%88%E5%8F%8A%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
      <url>/2018/10/08/busuanzi%E8%AE%A1%E6%95%B0%E5%8A%9F%E8%83%BD%E5%A4%B1%E6%95%88%E5%8F%8A%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>上课前水一篇博客</p><p>这两天发现博客的计数区不计数了，如图：</p><p><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fw0rt6nxjsj30ep03b3ye.jpg" alt=""></p><p>然后上了一下<a href="http://busuanzi.ibruce.info/" rel="external nofollow noopener noreferrer" target="_blank">busuanzi的官网</a>，发现是js文件转移了</p><p><img src="https://ws4.sinaimg.cn/large/006tNbRwly1fw0rtsd0n1j30h701rdfo.jpg" alt=""></p><p>所以在foot.swig里改一下以前的开头即可</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">改为</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1094 和为k的连续区间（前缀和，map）</title>
      <link href="/2018/10/07/51nod%201094%20%E5%92%8C%E4%B8%BAk%E7%9A%84%E8%BF%9E%E7%BB%AD%E5%8C%BA%E9%97%B4%EF%BC%88%E5%89%8D%E7%BC%80%E5%92%8C%EF%BC%8Cmap%EF%BC%89/"/>
      <url>/2018/10/07/51nod%201094%20%E5%92%8C%E4%B8%BAk%E7%9A%84%E8%BF%9E%E7%BB%AD%E5%8C%BA%E9%97%B4%EF%BC%88%E5%89%8D%E7%BC%80%E5%92%8C%EF%BC%8Cmap%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 10 难度：2级算法题</p><p>一整数数列a1, a2, … , an（有正有负），以及另一个整数k，求一个区间[i, j]，(1 &lt;= i &lt;= j &lt;= n)，使得a[i] + … + a[j] = k。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：2个数N,K。N为数列的长度。K为需要求的和。(2 &lt;= N &lt;= 10000，-10^9 &lt;= K &lt;= 10^9)<br>第2 - N + 1行：A<a href="-10^9 &lt;= A[i] &lt;= 10^9">i</a>。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>如果没有这样的序列输出No Solution。<br>输出2个数i, j，分别是区间的起始和结束位置。如果存在多个，输出i最小的。如果i相等，输出j最小的。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">6 </span><span class="number">10</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">1 </span><span class="number">4</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>前缀和 o(n^2)暴力竟然过了，看了讨论区还可以再用map优化一下，优化后的代码也放下面了，62ms-&gt;15ms(・ω・)ノ</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><p>o(n^2)</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1e4</span>+<span class="number">5</span>;</span><br><span class="line">LL a[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,flag=<span class="number">0</span>;</span><br><span class="line">    LL k,c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%lld"</span>,&amp;n,&amp;k);</span><br><span class="line">    a[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;c);</span><br><span class="line">        a[i]=a[i<span class="number">-1</span>]+c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(flag)<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">            <span class="keyword">if</span>(a[j]-a[i]==k)&#123;</span><br><span class="line">                flag=<span class="number">1</span>;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,i+<span class="number">1</span>,j);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!flag)<span class="built_in">printf</span>(<span class="string">"No Solution"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1e4</span>+<span class="number">5</span>;</span><br><span class="line">LL a[N];</span><br><span class="line"><span class="built_in">map</span>&lt;LL,LL&gt;m;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,flag=<span class="number">0</span>;</span><br><span class="line">    LL k,c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%lld"</span>,&amp;n,&amp;k);</span><br><span class="line">    a[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;c);</span><br><span class="line">        a[i]=a[i<span class="number">-1</span>]+c;</span><br><span class="line">        m[a[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(flag)<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span>(m[a[i]+k])&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">                <span class="keyword">if</span>(a[j]-a[i]==k)&#123;</span><br><span class="line">                    flag=<span class="number">1</span>;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,i+<span class="number">1</span>,j);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!flag)<span class="built_in">printf</span>(<span class="string">"No Solution"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 杂 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前缀和 </tag>
            
            <tag> stl </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1095 Anigram单词（map）</title>
      <link href="/2018/10/07/51nod%201095%20Anigram%E5%8D%95%E8%AF%8D%EF%BC%88map%EF%BC%89/"/>
      <url>/2018/10/07/51nod%201095%20Anigram%E5%8D%95%E8%AF%8D%EF%BC%88map%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 10 难度：2级算法题 </p><p>一个单词a如果通过交换单词中字母的顺序可以得到另外的单词b，那么定义b是a的Anigram，例如单词army和mary互为Anigram。另：相同的2个单词不算Anigram。现在给定一个字典，输入Q个单词，从给出的字典中找出这些单词的Anigram。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：1个数N，表示字典中单词的数量。(1 &lt;= N &lt;= 10000)<br>第2 - N + 1行，字典中的单词，单词长度 &lt;= 10。<br>第N + 2行：查询的数量Q。(1 &lt;= Q &lt;= 10000)<br>第N + 3 - N + Q - 2行：用作查询的单词，单词长度 &lt;= 10。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>共Q行，输出Anigram的数量，如果没有输出0。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="keyword">add</span><span class="bash"></span></span><br><span class="line"><span class="bash">dad</span></span><br><span class="line"><span class="bash">bad</span></span><br><span class="line"><span class="bash">cad</span></span><br><span class="line"><span class="bash">did</span></span><br><span class="line"><span class="bash">3</span></span><br><span class="line"><span class="bash">add</span></span><br><span class="line"><span class="bash">cac</span></span><br><span class="line"><span class="bash">dda</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>stl好厉害啊</p><p>用两个map，一个记录某字符串个数，一个记录某字符串排序后的串的个数，对于某串来说，能变成的串的个数就是上述两数相减</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">map</span>&lt;<span class="built_in">string</span>,<span class="keyword">int</span>&gt;m1,m2;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,q,len;</span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">11</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">        len=<span class="built_in">strlen</span>(s);</span><br><span class="line">        m1[s]++;</span><br><span class="line">        sort(s,s+len);</span><br><span class="line">        m2[s]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;q);</span><br><span class="line">    <span class="keyword">int</span> t1,t2;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;q;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">        len=<span class="built_in">strlen</span>(s);</span><br><span class="line">        t1=m1[s];</span><br><span class="line">        sort(s,s+len);</span><br><span class="line">        t2=m2[s];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,t2-t1);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 杂 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stl </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1126 1119 机器人走方格 V2</title>
      <link href="/2018/10/07/51nod%201126%201119%20%E6%9C%BA%E5%99%A8%E4%BA%BA%E8%B5%B0%E6%96%B9%E6%A0%BC%20V2/"/>
      <url>/2018/10/07/51nod%201126%201119%20%E6%9C%BA%E5%99%A8%E4%BA%BA%E8%B5%B0%E6%96%B9%E6%A0%BC%20V2/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 10 难度：2级算法题 </p><p><code>M * N</code>的方格，一个机器人从左上走到右下，只能向右或向下走。有多少种不同的走法？由于方法数量可能很大，只需要输出Mod 10^9 + 7的结果。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行，2个数M,N，中间用空格隔开。（2 &lt;= m,n &lt;= 1000000)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出走法的数量 Mod 10^9 + 7。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">2 </span><span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>c(m+n-2,m-1)</p><p>用费马小定理求组合数的板子交了一发200ms+(#ﾟДﾟ)</p><p>写了个扩展欧几里得的板子交还是200ms+…</p><p>然后看了下榜里的板子，研究了一下人家的15ms，发现是我求组合数那个函数跑得慢，之前写的那个循环m次每次都求了逆元再相乘，其实可以直接先相乘得到分母，最后求一次逆元即可，改了一下，现在两个都是15ms了(￣▽￣)</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">LL </span>C(<span class="keyword">LL </span>n,<span class="keyword">LL </span>m)&#123;</span><br><span class="line">    if(m&gt;n)return <span class="number">0</span><span class="comment">;</span></span><br><span class="line">    <span class="keyword">LL </span>ans=<span class="number">1</span><span class="comment">;</span></span><br><span class="line">    for(int i=<span class="number">1</span><span class="comment">;i&lt;=m;i++)&#123;</span></span><br><span class="line">        <span class="keyword">LL </span>a=(n+i-m)%p<span class="comment">;</span></span><br><span class="line">        <span class="keyword">LL </span><span class="keyword">b=i%p;</span></span><br><span class="line"><span class="keyword"> </span>       ans=ans*(a*qpow(<span class="keyword">b,p-2)%p)%p;</span></span><br><span class="line"><span class="keyword"> </span>   &#125;</span><br><span class="line">    return ans<span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> p=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="function">LL <span class="title">qpow</span><span class="params">(LL a,LL b)</span></span>&#123;</span><br><span class="line">    LL ans=<span class="number">1</span>;</span><br><span class="line">    a%=p;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)&#123;</span><br><span class="line">            ans=ans*a%p;</span><br><span class="line">            b--;</span><br><span class="line">        &#125;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">        a=a*a%p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">C</span><span class="params">(LL n,LL m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(m&gt;n)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    LL ans,a=<span class="number">1</span>,b=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        a=(a*(n+i-m)%p)%p;</span><br><span class="line">        b=(b*i%p)%p;</span><br><span class="line">    &#125;</span><br><span class="line">    ans=(a*qpow(b,p<span class="number">-2</span>)%p)%p;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    LL m,n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;m,&amp;n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,C(m+n<span class="number">-2</span>,m<span class="number">-1</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> p=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ex_gcd</span><span class="params">(LL a,LL b,LL &amp;d,LL &amp;x,LL &amp;y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">0</span>)&#123;</span><br><span class="line">        x=<span class="number">1</span>;y=<span class="number">0</span>;d=a;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ex_gcd(b,a%b,d,y,x);</span><br><span class="line">    y-=x*(a/b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">inv</span><span class="params">(LL a)</span></span>&#123;</span><br><span class="line">    LL x,y,d;</span><br><span class="line">    ex_gcd(a,p,d,x,y);</span><br><span class="line">    <span class="keyword">if</span>(d!=<span class="number">1</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> (x%p+p)%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">C</span><span class="params">(LL n,LL m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(m&gt;n)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    LL ans,a=<span class="number">1</span>,b=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        a=(a*(n+i-m)%p)%p;</span><br><span class="line">        b=(b*i%p)%p;</span><br><span class="line">    &#125;</span><br><span class="line">    ans=(a*inv(b)%p)%p;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    LL m,n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;m,&amp;n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,C(m+n<span class="number">-2</span>,m<span class="number">-1</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逆元 </tag>
            
            <tag> 组合数 </tag>
            
            <tag> 扩展欧几里得 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1126 求递推序列的第N项（找循环结，矩阵快速幂）</title>
      <link href="/2018/10/06/51nod%201126%20%E6%B1%82%E9%80%92%E6%8E%A8%E5%BA%8F%E5%88%97%E7%9A%84%E7%AC%ACN%E9%A1%B9%EF%BC%88%E6%89%BE%E5%BE%AA%E7%8E%AF%E7%BB%93%EF%BC%8C%E7%9F%A9%E9%98%B5%E5%BF%AB%E9%80%9F%E5%B9%82%EF%BC%89/"/>
      <url>/2018/10/06/51nod%201126%20%E6%B1%82%E9%80%92%E6%8E%A8%E5%BA%8F%E5%88%97%E7%9A%84%E7%AC%ACN%E9%A1%B9%EF%BC%88%E6%89%BE%E5%BE%AA%E7%8E%AF%E7%BB%93%EF%BC%8C%E7%9F%A9%E9%98%B5%E5%BF%AB%E9%80%9F%E5%B9%82%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 10 难度：2级算法题</p><p>有一个序列是这样定义的：f(1) = 1, f(2) = 1, <code>f(n) = (A * f(n - 1) + B * f(n - 2))</code> mod 7.<br>给出A，B和N，求f(n)的值。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>输入3个数：A,B,N。数字之间用空格分割。(-10000 &lt;= A, B &lt;= 10000, 1 &lt;= N &lt;= 10^9)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出f(n)的值。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">3 </span>-<span class="number">1</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>和这个题差不多 -&gt; <a href="https://leflacon.github.io/2018/09/13/Best%20Solver/">Best Solver – ACM-ICPC 2015 Shenyang（推公式，广义斐波那契）</a></p><p><strong>找循环结</strong>，因为模7所以按理说很快就能找到然后return的，但是下面这种写法又t又wa<br><img src="https://ws1.sinaimg.cn/large/006tNbRwgy1fvyhu2vhmyj30a6026mwz.jpg" alt=""></p><p>存在以下三个问题：</p><p>1.负数取模的问题</p><p>改成<code>f[i]=((a*f[i-1]%7+b*f[i-2])%7+7)%7;</code></p><p>2.刚好是循环结倍数的特殊情况</p><p>当n%x=0，n+=x</p><p>3.循环条件问题</p><p>改成这样才行<code>for(int i=3;i&lt;N;i++)</code>，不然会t。。一开始不知道为啥，打表了这组数据<code>2322 -6048 525119718</code>，发现第三项开始是546231546231……，好特殊啊，自己半路循环了起来0.0</p><p>都改完之后那组数据还是re，<code>2322 -6048 525119718</code>，把<code>return i-2</code>改成了break，在最后return，然后就。。ac了。。ac了。。ac了。。(╯°□°）╯︵ ┻━┻ 嗯共计交了21发，下次再写循环结0.0我一定不要wa了</p><p>还有一个方法是<strong>矩阵快速幂</strong>，构造如下矩阵然后套板子，代码也放下面了</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">( <span class="name">F</span>(<span class="name">n</span>)  ) = ( <span class="name">a</span> b )*( <span class="name">F</span>(<span class="name">n-1</span>) )</span><br><span class="line">  F(<span class="name">n-1</span>)      <span class="number">1</span> <span class="number">0</span>     F(<span class="name">n-2</span>)</span><br></pre></td></tr></table></figure><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">2333</span>; </span><br><span class="line"><span class="keyword">int</span> f[N],a,b,n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getnum</span><span class="params">()</span></span>&#123;</span><br><span class="line">    f[<span class="number">0</span>]=<span class="number">1</span>;f[<span class="number">1</span>]=<span class="number">1</span>;f[<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">3</span>;i&lt;N;i++)&#123;</span><br><span class="line">        f[i]=((a*f[i<span class="number">-1</span>]%<span class="number">7</span>+b*f[i<span class="number">-2</span>])%<span class="number">7</span>+<span class="number">7</span>)%<span class="number">7</span>;</span><br><span class="line">        <span class="keyword">if</span>(f[i]==<span class="number">1</span>&amp;&amp;f[i<span class="number">-1</span>]==<span class="number">1</span>)<span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> i<span class="number">-2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> x=getnum();</span><br><span class="line">    n%=x;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">0</span>)n+=x;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,f[n]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> vector&lt;<span class="keyword">int</span>&gt;row;</span><br><span class="line"><span class="keyword">typedef</span> vector&lt;row&gt;mat;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> p=<span class="number">7</span>;</span><br><span class="line">mat mul(mat a,mat b)&#123;</span><br><span class="line">    mat c(a.<span class="built_in">size</span>(),row(b[<span class="number">0</span>].<span class="built_in">size</span>()));</span><br><span class="line">    <span class="built_in">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="built_in">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;b[<span class="number">0</span>].<span class="built_in">size</span>();j++)&#123;</span><br><span class="line">            <span class="built_in">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;b.<span class="built_in">size</span>();k++)</span><br><span class="line">                c[i][j]=(c[i][j]+a[i][k]*b[k][j])%p;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line">mat qpow(mat a,<span class="keyword">int</span> x)&#123;</span><br><span class="line">    mat b(a.<span class="built_in">size</span>(),row(a.<span class="built_in">size</span>()));</span><br><span class="line">    <span class="built_in">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a.<span class="built_in">size</span>();i++)b[i][i]=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">while</span>(x&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">if</span>(x&amp;<span class="number">1</span>)b=mul(b,a);</span><br><span class="line">        a=mul(a,a);</span><br><span class="line">        x&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> main()&#123;</span><br><span class="line">    <span class="keyword">int</span> n,aa,bb;</span><br><span class="line">    scanf(<span class="string">"%d%d%d"</span>,&amp;aa,&amp;bb,&amp;n);</span><br><span class="line">    <span class="built_in">while</span>(aa&lt;<span class="number">0</span>)aa+=p;</span><br><span class="line">    <span class="built_in">while</span>(bb&lt;<span class="number">0</span>)bb+=p;</span><br><span class="line">    mat a(<span class="number">2</span>,row(<span class="number">2</span>)),b(<span class="number">2</span>,row(<span class="number">1</span>)),c(<span class="number">2</span>,row(<span class="number">1</span>));</span><br><span class="line">    a[<span class="number">0</span>][<span class="number">0</span>]=aa;a[<span class="number">0</span>][<span class="number">1</span>]=bb;a[<span class="number">1</span>][<span class="number">0</span>]=<span class="number">1</span>;a[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">    b[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;b[<span class="number">1</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">if</span>(n&gt;=<span class="number">3</span>)&#123;</span><br><span class="line">        a=qpow(a,n<span class="number">-2</span>);</span><br><span class="line">        c=mul(a,b);</span><br><span class="line">        printf(<span class="string">"%d\n"</span>,c[<span class="number">0</span>][<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">else</span>&#123;</span><br><span class="line">        printf(<span class="string">"1\n"</span>);</span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="built_in">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 矩阵快速幂 </tag>
            
            <tag> 斐波那契 </tag>
            
            <tag> 循环结 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1133 不重叠的线段（贪心）</title>
      <link href="/2018/10/06/%2051nod%201133%20%E4%B8%8D%E9%87%8D%E5%8F%A0%E7%9A%84%E7%BA%BF%E6%AE%B5%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%89/"/>
      <url>/2018/10/06/%2051nod%201133%20%E4%B8%8D%E9%87%8D%E5%8F%A0%E7%9A%84%E7%BA%BF%E6%AE%B5%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 10 难度：2级算法题</p><p>X轴上有N条线段，每条线段有1个起点S和终点E。最多能够选出多少条互不重叠的线段。（注：起点或终点重叠，不算重叠）。<br>例如：[1 5][2 3][3 6]，可以选[2 3][3 6]，这2条线段互不重叠。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：1个数N，线段的数量(2 &lt;= N &lt;= 10000)<br>第2 - N + 1行：每行2个数，线段的起点和终点(-10^9 &lt;= S,E &lt;= 10^9)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出最多可以选择的线段数量。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">5</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">6</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>n条线段最大没有交点的线段数</p><p>贪心，按照线段右端点排序，然后遍历判断</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">10005</span>; </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r;</span><br><span class="line">&#125;a[N*<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(struct node x,struct node y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.r&lt;y.r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a[i].l,&amp;a[i].r);</span><br><span class="line">    sort(a,a+n,cmp);</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">1</span>,tmp=a[<span class="number">0</span>].r;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i].l&gt;=tmp)&#123;</span><br><span class="line">            ans++;</span><br><span class="line">            tmp=a[i].r;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 贪心 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1138 连续整数的和</title>
      <link href="/2018/10/05/51nod%201138%20%E8%BF%9E%E7%BB%AD%E6%95%B4%E6%95%B0%E7%9A%84%E5%92%8C/"/>
      <url>/2018/10/05/51nod%201138%20%E8%BF%9E%E7%BB%AD%E6%95%B4%E6%95%B0%E7%9A%84%E5%92%8C/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 10 难度：2级算法题</p><p>给出一个正整数N，将N写为若干个连续数字和的形式(长度 &gt;= 2)。例如N = 15，可以写为1 + 2 + 3 + 4 + 5，也可以写为4 + 5 + 6，或7 + 8。如果不能写为若干个连续整数的和，则输出No Solution。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>输入1个数N(3 &lt;= N &lt;= 10^9)。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出连续整数中的第1个数，如果有多个按照递增序排列，如果不能分解为若干个连续整数的和，则输出No Solution。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">15</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">7</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>先等差数列求和公式一下</p><p><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fvxntyi4ftj308601tq2q.jpg" alt=""></p><p>要求的是首项a1</p><p><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fvxoeb41bxj304o01r0si.jpg" alt=""></p><p>从<code>sqrt(2*sum)</code>开始枚举n即可，遇到整数a1就输出</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum,flag=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;sum);</span><br><span class="line">    <span class="keyword">int</span> m=(<span class="keyword">int</span>)<span class="built_in">sqrt</span>(<span class="number">2</span>*sum);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=m;i&gt;=<span class="number">2</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>((<span class="number">2</span>*sum+i-i*i)%(<span class="number">2</span>*i)==<span class="number">0</span>&amp;&amp;(<span class="number">2</span>*sum+i-i*i)&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            flag=<span class="number">1</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,(<span class="number">2</span>*sum+i-i*i)/(<span class="number">2</span>*i));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!flag)<span class="built_in">puts</span>(<span class="string">"No Solution"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推公式 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1266 蚂蚁（贪心）</title>
      <link href="/2018/10/05/51nod%201266%20%E8%9A%82%E8%9A%81%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%89/"/>
      <url>/2018/10/05/51nod%201266%20%E8%9A%82%E8%9A%81%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>题目来源： Poj</p><p>基准时间限制：1 秒 空间限制：131072 KB 分值: 20 难度：2级算法题</p><p>n只蚂蚁以每秒1cm的速度在长为Lcm的竿子上爬行。当蚂蚁爬到竿子的端点时就会掉落。由于竿子太细，两只蚂蚁相遇时，它们不能交错通过，只能各自反向爬回去。对于每只蚂蚁，我们知道它距离竿子左端的距离xi，但不知道它当前的朝向。请计算各种情况当中，所有蚂蚁落下竿子所需的最短时间和最长时间。</p><p>例如：竿子长10cm，3只蚂蚁位置为2 6 7，最短需要4秒(左、右、右)，最长需要8秒（右、右、右）。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：2个整数N和L，N为蚂蚁的数量，L为杆子的长度(1 &lt;= L &lt;= 10^9, 1 &lt;= N &lt;= 50000)<br>第2 - N + 1行：每行一个整数A[i]，表示蚂蚁的位置(0 &lt; A[i] &lt; L)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出2个数，中间用空格分隔，分别表示最短时间和最长时间。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">10</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">7</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">4 </span><span class="number">8</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>水题，最短时间就是分两边下，最长时间就是所有蚂蚁同向下</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">50005</span>; </span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="keyword">int</span> main()&#123;</span><br><span class="line">    <span class="keyword">int</span> n,l,minn,maxx,z;</span><br><span class="line">    <span class="keyword">int</span> zl,zr,ans1,ans2;</span><br><span class="line">    scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;l);</span><br><span class="line">    minn=l;maxx=<span class="number">0</span>;z=l/<span class="number">2</span>;zl=zr=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        scanf(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        minn=<span class="built_in">min</span>(minn,a[i]);</span><br><span class="line">        maxx=<span class="built_in">max</span>(maxx,a[i]);</span><br><span class="line">        <span class="built_in">if</span>(a[i]&gt;=z)zr=<span class="built_in">max</span>(zr,l-a[i]);</span><br><span class="line">        <span class="built_in">else</span> zl=<span class="built_in">max</span>(zl,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    ans1=<span class="built_in">max</span>(zl,zr);</span><br><span class="line">    ans2=<span class="built_in">max</span>(l-minn,maxx);</span><br><span class="line">    printf(<span class="string">"%d %d\n"</span>,ans1,ans2);</span><br><span class="line">    <span class="built_in">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 贪心 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1278 相离的圆（贪心）</title>
      <link href="/2018/10/05/51nod%201278%20%E7%9B%B8%E7%A6%BB%E7%9A%84%E5%9C%86%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%89/"/>
      <url>/2018/10/05/51nod%201278%20%E7%9B%B8%E7%A6%BB%E7%9A%84%E5%9C%86%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 10 难度：2级算法题</p><p>平面上有N个圆，他们的圆心都在X轴上，给出所有圆的圆心和半径，求有多少对圆是相离的。</p><p>例如：4个圆分别位于1, 2, 3, 4的位置，半径分别为1, 1, 2, 1，那么{1, 2}, {1, 3} {2, 3} {2, 4} {3, 4}这5对都有交点，只有{1, 4}是相离的。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：一个数N，表示圆的数量(1 &lt;= N &lt;= 50000)<br>第2 - N + 1行：每行2个数P, R中间用空格分隔，P表示圆心的位置，R表示圆的半径(1 &lt;= P, R &lt;= 10^9)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出共有多少对相离的圆。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>把圆相离转化一下问题就变成了给n条线段[l,r]，求没有交点的线段个数</p><p>可以和这个题联系起来 -&gt; <a href="https://leflacon.github.io/2018/10/05/51nod%201428%20%E6%B4%BB%E5%8A%A8%E5%AE%89%E6%8E%92%E9%97%AE%E9%A2%98%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%89/">n条线段最多重叠个数</a></p><p>里面提供的这种记录入点出点再排序的思路在这个题上同样适用</p><p>要注意的是上面那个题在端点重合时是出点排入点前，而这个题相切的圆不算向离，所以入点排出点前，先少一个能相离的圆再结算前面的圆</p><p>令num=圆的个数，排序后遍历，遇到入点说明少一个能相离的圆num–，遇到出点ans+=num，妙啊妙啊</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">50005</span>; </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> t,v;</span><br><span class="line">&#125;a[N*<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(struct node x,struct node y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x.v!=y.v)<span class="keyword">return</span> x.v&lt;y.v;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> x.t&lt;y.t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,p,r;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;p,&amp;r);</span><br><span class="line">        a[i].v=p-r;a[i+n].v=p+r;</span><br><span class="line">        a[i].t=<span class="number">0</span>;a[i+n].t=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a,a+<span class="number">2</span>*n,cmp);</span><br><span class="line">    <span class="keyword">int</span> num=n,ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>*n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i].t==<span class="number">0</span>)num--;</span><br><span class="line">        <span class="keyword">else</span> ans+=num;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 贪心 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1279 扔盘子（stack）</title>
      <link href="/2018/10/05/51nod%201279%20%E6%89%94%E7%9B%98%E5%AD%90%EF%BC%88stack%EF%BC%89/"/>
      <url>/2018/10/05/51nod%201279%20%E6%89%94%E7%9B%98%E5%AD%90%EF%BC%88stack%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>题目来源： Codility</p><p>基准时间限制：1 秒 空间限制：131072 KB 分值: 10 难度：2级算法题</p><p>有一口井，井的高度为N，每隔1个单位它的宽度有变化。现在从井口往下面扔圆盘，如果圆盘的宽度大于井在某个高度的宽度，则圆盘被卡住（恰好等于的话会下去）。<br>盘子有几种命运：1、掉到井底。2、被卡住。3、落到别的盘子上方。<br>盘子的高度也是单位高度。给定井的宽度和每个盘子的宽度，求最终落到井内的盘子数量。  </p><p>如图井和盘子信息如下：<br>井：5 6 4 3 6 2 3<br>盘子：2 3 5 2 4</p><p>最终有4个盘子落在井内。</p><p>本题由 @javaman 翻译。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：2个数N, M中间用空格分隔，N为井的深度，M为盘子的数量(1 &lt;= N, M &lt;= 50000)。<br>第2 - N + 1行，每行1个数，对应井的宽度Wi(1 &lt;= Wi &lt;= 10^9)。<br>第N + 2 - N + M + 1行，每行1个数，对应盘子的宽度Di(1 &lt;= Di &lt;= 10^9)  </p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出最终落到井内的盘子数量。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">7</span> <span class="number">5</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>正常思路是对每一个盘子从上往下遍历井，这样复杂度是o(n^2)过不了，然后想一下怎么优化</p><p>考虑到一个盘子，如果能过宽的层下面的窄层，那么上面那个宽层肯定能过，所以从上往下的时候决定它能不能过的其实是一个宽度递减的序列，所以先预处理一下井，改为递减，存入栈中，比如样例<code>5 6 4 3 6 2 3</code>处理后就是<code>5 5 4 3 3 2 2</code>，然后逆向思考，从最下面的那个宽度开始遍历，复杂度o(n)，优美～</p><p>一种是单调栈的写法125ms，还有一种不利用stl直接在输入的时候更新写法</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">50005</span>;</span><br><span class="line"><span class="keyword">int</span> w[N],d[N];</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt;s;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,ans=<span class="number">0</span>,tmp=INF;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;w[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;d[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(w[i]&lt;=tmp)tmp=w[i];</span><br><span class="line">        s.push(tmp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> cur=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!s.empty()&amp;&amp;cur&lt;m)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s.top()&lt;d[cur])&#123;</span><br><span class="line">            s.pop();</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ans++;</span><br><span class="line">        s.pop();</span><br><span class="line">        cur++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">50005</span>;</span><br><span class="line"><span class="keyword">int</span> w[N],d;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,ans=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;w[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;w[i]);</span><br><span class="line">        w[i]=min(w[i],w[i<span class="number">-1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ji=n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;d);</span><br><span class="line">        <span class="keyword">while</span>(w[ji]&lt;d&amp;&amp;ji&gt;=<span class="number">0</span>)ji--;</span><br><span class="line">        <span class="keyword">if</span>(ji&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            ans++;</span><br><span class="line">            ji--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 贪心 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 贪心 </tag>
            
            <tag> stl </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1417 天堂里的游戏（博弈）</title>
      <link href="/2018/10/05/51nod%201417%20%E5%A4%A9%E5%A0%82%E9%87%8C%E7%9A%84%E6%B8%B8%E6%88%8F%EF%BC%88%E5%8D%9A%E5%BC%88%EF%BC%89/"/>
      <url>/2018/10/05/51nod%201417%20%E5%A4%A9%E5%A0%82%E9%87%8C%E7%9A%84%E6%B8%B8%E6%88%8F%EF%BC%88%E5%8D%9A%E5%BC%88%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 10 难度：2级算法题</p><p>……此处省略一堆没啥用的题面</p><p>让我们各自亮出硬币的一面，或正或反。如果我们都是正面，那么我给你A元，如果我们都是反面，我给你B元（A + B为偶数）。剩下的情况你给我（A + B） / 2元就可以了</p><p>Noder知道这个游戏他多半要输，可他并不在乎，他只想让自己输的慢一点。</p><p>那么你来帮美女计算一下，她选择出正面的概率应该是多少（以最简分数形式输出）？</p><p>关于样例的解释：</p><p>美女采取了(3/8,5/8)这个方案，不论Noder采用什么方案，都是不能改变局面的。如果全部出正面，每次的期望收益是 (3+3+3-2-2-2-2-2)/8=-1/8元；如果全部出反面，每次的期望收益也是(-2-2-2+1+1+1+1+1)/8=-1/8元。而任何策略无非只是上面两种策略的线性组合，所以期望还是-1/8元。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：一个数T，表示后面用作输入测试的数的数量（1 &lt;= T &lt;= 20)。<br>第2 - T + 1行：每行2个数A, B中间用空格分隔。(1 &lt;= A, B &lt;= 10^9，且A + B为偶数)。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出共T行，对应美女选择正面的概率，以最简分数形式输出，具体请参看输出样例。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span>/<span class="number">8</span></span><br><span class="line"><span class="number">5</span>/<span class="number">8</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>样例解释暗示的很清楚了，取最优策略时，对方无论出正面还是反面期望都一样</p><p>假设美女出正面概率为x/y，那么若对方全出正面，期望为<code>(x*a-(y-x)*(a+b)/2)/y</code>，若对方全出反面，期望为<code>((y-x)*b-x*(a+b)/2)/y</code></p><p><code>(x*a-(y-x)*(a+b)/2)/y=((y-x)*b-x*(a+b)/2)/y</code>，解得<code>x/y=(a+3b)/(4a+4b)</code>，gcd一下即得答案，注意要开LL</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="function">LL <span class="title">gcd</span><span class="params">(LL a,LL b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b==<span class="number">0</span>?a:gcd(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    LL a,b,x,y,tmp;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;a,&amp;b);</span><br><span class="line">        x=a+<span class="number">3</span>*b;y=<span class="number">4</span>*(a+b);</span><br><span class="line">        tmp=gcd(x,y);</span><br><span class="line">        x/=tmp;y/=tmp;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld/%lld\n"</span>,x,y);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 博弈论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推公式 </tag>
            
            <tag> 博弈论 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1428 活动安排问题（贪心）</title>
      <link href="/2018/10/05/51nod%201428%20%E6%B4%BB%E5%8A%A8%E5%AE%89%E6%8E%92%E9%97%AE%E9%A2%98%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%89/"/>
      <url>/2018/10/05/51nod%201428%20%E6%B4%BB%E5%8A%A8%E5%AE%89%E6%8E%92%E9%97%AE%E9%A2%98%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 10 难度：2级算法题</p><p>有若干个活动，第i个开始时间和结束时间是[Si,fi)，同一个教室安排的活动之间不能交叠，求要安排所有活动，最少需要几个教室？ </p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第一行一个正整数n (n &lt;= 10000)代表活动的个数。<br>第二行到第(n + 1)行包含n个开始时间和结束时间。<br>开始时间严格小于结束时间，并且时间都是非负整数，小于1000000000</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>一行包含一个整数表示最少教室的个数。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">4</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">9</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>就是问最多重叠区间有几个，一开始没想到什么特优美的做法，就去翻了下评论区，下面这个做法蛮妙的</p><p><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fvwlkpp6cxj30oz04q0t0.jpg" alt=""></p><p>注意端点重合是不算的，所以cmp函数位置相同的还要对入点出点排下序，出点在前</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">10005</span>; </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> t,v;</span><br><span class="line">&#125;a[N*<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(struct node x,struct node y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x.v!=y.v)<span class="keyword">return</span> x.v&lt;y.v;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> x.t&gt;y.t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a[i].v,&amp;a[i+n].v);</span><br><span class="line">        a[i].t=<span class="number">0</span>;a[i+n].t=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a,a+<span class="number">2</span>*n,cmp);</span><br><span class="line">    <span class="keyword">int</span> num=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>*n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i].t==<span class="number">0</span>)num++;</span><br><span class="line">        <span class="keyword">else</span> num--;</span><br><span class="line">        ans=max(ans,num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 贪心 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1432 独木舟（贪心）</title>
      <link href="/2018/10/04/51nod%201432%20%E7%8B%AC%E6%9C%A8%E8%88%9F%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%89/"/>
      <url>/2018/10/04/51nod%201432%20%E7%8B%AC%E6%9C%A8%E8%88%9F%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 10 难度：2级算法题</p><p>n个人，已知每个人体重。独木舟承重固定，每只独木舟最多坐两个人，可以坐一个人或者两个人。显然要求总重量不超过独木舟承重，假设每个人体重也不超过独木舟承重，问最少需要几只独木舟？</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第一行包含两个正整数n (0&lt;n&lt;=10000)和m (0&lt;m&lt;=2000000000)，表示人数和独木舟的承重。<br>接下来n行，每行一个正整数，表示每个人的体重。体重不超过1000000000，并且每个人的体重不超过m。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>一行一个整数表示最少需要的独木舟数。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">6</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>最多只能坐两个人，先排个序再贪心即可，如果当前最重的加最轻的能上一条船就上，不能上就重的自己先走，然后找下一个重的人</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">10005</span>;</span><br><span class="line">LL a[N],m;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%lld"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)<span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">    sort(a,a+n);</span><br><span class="line">    <span class="keyword">int</span> cur=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=cur;i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i==cur)&#123;</span><br><span class="line">            ans++;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a[i]+a[cur]&lt;=m)&#123;</span><br><span class="line">            ans++;</span><br><span class="line">            cur++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> ans++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 贪心 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>C. Stretching Streamers（NAIPC 2017）（记忆化dp）</title>
      <link href="/2018/10/04/C.%20Stretching%20Streamers%EF%BC%88NAIPC%202017%EF%BC%89%EF%BC%88%E8%AE%B0%E5%BF%86%E5%8C%96dp%EF%BC%89/"/>
      <url>/2018/10/04/C.%20Stretching%20Streamers%EF%BC%88NAIPC%202017%EF%BC%89%EF%BC%88%E8%AE%B0%E5%BF%86%E5%8C%96dp%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fvw6zkweu6j30o70bujrw.jpg" alt=""></p><p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fvw707hqloj30gn0c1mxk.jpg" alt=""></p><p><img src="https://ws4.sinaimg.cn/large/006tNbRwly1fvw70kwu39j30n70c9dgc.jpg" alt=""></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">input</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">30</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">45</span></span><br><span class="line">output</span><br><span class="line"><span class="number">1</span></span><br><span class="line">input</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">30</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">45</span></span><br><span class="line">output</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>n个点有次序的围成一圈，每个点有一个权值a[i]，只有gcd&gt;1的两个数之间才能连线，每个点都要被连到且任意线之间不交叉，求方法数</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>先n^2跑一遍建个图，表明i，j间能否相连</p><p>然后dp(i,j,c)，c表示ij是否相连，考虑某两个点i,j <code>(i&lt;j)</code></p><p>如果ij已经相连，那么i和j-1相连或者j和i+1相连或者不连都是可行的，方案数要先加上dp(i,j-1,0)+dp(i,j-1,1)+dp(i+1,j,0)+dp(i+1,j,1)，(先把这四个处理掉，因为后面相乘没它们什么事)，其余情况是在[i+1,j-2]中找个点m，i连不连m都行，m+1连不连j也都行，两种方法数相乘</p><p>如果ij不相连，那么必须有一个m和i相连，（如果i不连m的话往后dp就再没有人和i相连了），然后m连不连j都行继续讨论下去，两种方法数相乘</p><p>return的时候记忆化一下，注意一下边界判断和dp顺序，别的好像没啥了</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> p=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">305</span>;</span><br><span class="line"><span class="keyword">int</span> a[N],n,ans[N][N][<span class="number">2</span>];</span><br><span class="line"><span class="keyword">bool</span> g[N][N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b==<span class="number">0</span>?a:gcd(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">dp</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j,<span class="keyword">int</span> c)</span></span>&#123;   </span><br><span class="line">    <span class="keyword">if</span>(ans[i][j][c]!=<span class="number">-1</span>)<span class="keyword">return</span> ans[i][j][c]; </span><br><span class="line">    <span class="keyword">if</span>(i&gt;j)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(i==j)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(c==<span class="number">1</span>&amp;&amp;!g[i][j])<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(j-i==<span class="number">1</span>&amp;&amp;c==<span class="number">1</span>)<span class="keyword">return</span> g[i][j]?<span class="number">1</span>:<span class="number">0</span>;<span class="comment">//加边缘</span></span><br><span class="line">    <span class="keyword">if</span>(j-i==<span class="number">1</span>&amp;&amp;c==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;      </span><br><span class="line">    LL res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(c)&#123;<span class="comment">//连了ij</span></span><br><span class="line">        res=(res+dp(i,j<span class="number">-1</span>,<span class="number">0</span>)+dp(i,j<span class="number">-1</span>,<span class="number">1</span>)+dp(i+<span class="number">1</span>,j,<span class="number">0</span>)+dp(i+<span class="number">1</span>,j,<span class="number">1</span>))%p;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> m=j<span class="number">-2</span>;m&gt;=i+<span class="number">1</span>;m--)&#123;</span><br><span class="line">            LL l=dp(i,m,<span class="number">0</span>)+dp(i,m,<span class="number">1</span>),r=dp(m+<span class="number">1</span>,j,<span class="number">0</span>)+dp(m+<span class="number">1</span>,j,<span class="number">1</span>);</span><br><span class="line">            res=(res+l*r)%p;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;<span class="comment">//没连ij</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> m=j<span class="number">-1</span>;m&gt;=i+<span class="number">1</span>;m--)&#123;</span><br><span class="line">            LL l=dp(i,m,<span class="number">1</span>),r=(dp(m,j,<span class="number">0</span>)+dp(m,j,<span class="number">1</span>))%p;</span><br><span class="line">            res=(res+l*r)%p;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans[i][j][c]=res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;n;j++)</span><br><span class="line">            <span class="keyword">if</span>(gcd(a[i],a[j])&gt;<span class="number">1</span>)g[i][j]=g[j][i]=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">else</span> g[i][j]=g[j][i]=<span class="literal">false</span>;</span><br><span class="line">    <span class="built_in">memset</span>(ans,<span class="number">-1</span>,<span class="keyword">sizeof</span>(ans));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(dp(<span class="number">0</span>,n<span class="number">-1</span>,<span class="number">0</span>)+dp(<span class="number">0</span>,n<span class="number">-1</span>,<span class="number">1</span>))%p);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> dp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dp </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CF 327 C. Magic Five（等比数列求和）</title>
      <link href="/2018/10/04/CF%20327%20C.%20Magic%20Five%EF%BC%88%E7%AD%89%E6%AF%94%E6%95%B0%E5%88%97%E6%B1%82%E5%92%8C%EF%BC%89/"/>
      <url>/2018/10/04/CF%20327%20C.%20Magic%20Five%EF%BC%88%E7%AD%89%E6%AF%94%E6%95%B0%E5%88%97%E6%B1%82%E5%92%8C%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>There is a long plate s containing n digits. Iahub wants to delete some digits (possibly none, but he is not allowed to delete all the digits) to form his “magic number” on the plate, a number that is divisible by 5. Note that, the resulting number may contain leading zeros.</p><p>Now Iahub wants to count the number of ways he can obtain magic number, modulo 1000000007 (109 + 7). Two ways are different, if the set of deleted positions in s differs.</p><p>Look at the input part of the statement, s is given in a special form.</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>In the first line you’re given a string a (1 ≤ |a| ≤ 105), containing digits only. In the second line you’re given an integer k (1 ≤ k ≤ 109). The plate s is formed by concatenating k copies of a together. That is n = |a|·k.</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>Print a single integer — the required number of ways modulo 1000000007 (109 + 7).</p><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">input</span><br><span class="line"><span class="number">1256</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">output</span><br><span class="line"><span class="number">4</span></span><br><span class="line">input</span><br><span class="line"><span class="number">13990</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line">output</span><br><span class="line"><span class="number">528</span></span><br><span class="line">input</span><br><span class="line"><span class="number">555</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line">output</span><br><span class="line"><span class="number">63</span></span><br></pre></td></tr></table></figure><h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><p>In the first case, there are four possible ways to make a number that is divisible by 5: 5, 15, 25 and 125.</p><p>In the second case, remember to concatenate the copies of a. The actual plate is 1399013990.</p><p>In the third case, except deleting all digits, any choice will do. Therefore there are 26 - 1 = 63 possible ways to delete digits.</p><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给一个字符串a，循环k次，得到数字n</p><p>删去其中部分数字，使得到的数字是5的倍数，求方法数</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>首先结尾是0或5的数字能被5整除，若a[i]=0或5，那么以a[i]结尾的数共有2^(i-1)个</p><p>那么k=1的答案很好求，问题在于数字n是a循环k次，而k很大，冷静一下推个公式玩玩</p><p>若a[i]=0或5,因为<code>a[i+len],a[i+len*2]……a[i+len*(k-1)]</code>都等于a[i]，所以他们的个数等比数列求和为：</p><p><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fvvk1psywhj30d901vjr7.jpg" alt=""></p><p>大数取模分子逆元一下，就乘以pow(2^len-1,p-2)</p><p>最后，啥玩意儿啊精度问题也太可怕了吧。。wa5了好多发，最后ans三个乘一起再取模是使不得的(#ﾟДﾟ) 必须得前两个先取模，不然就爆LL了</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> p=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="built_in">string</span> a;</span><br><span class="line"><span class="keyword">int</span> k,len;</span><br><span class="line">LL ans=<span class="number">0</span>;</span><br><span class="line"><span class="function">LL <span class="title">qpow</span><span class="params">(LL a,LL b)</span></span>&#123;</span><br><span class="line">    LL ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)&#123;</span><br><span class="line">            ans=(ans*a)%p;</span><br><span class="line">            b--;</span><br><span class="line">        &#125;</span><br><span class="line">        b/=<span class="number">2</span>;</span><br><span class="line">        a=a*a%p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123; </span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;k);</span><br><span class="line">    len=a.length();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]==<span class="string">'0'</span>||a[i]==<span class="string">'5'</span>)</span><br><span class="line">            ans=(ans+qpow(<span class="number">2</span>,i))%p;</span><br><span class="line">    &#125;</span><br><span class="line">    LL fm=qpow(<span class="number">2</span>,len),fz=qpow(fm,k);</span><br><span class="line">    fm=(fm<span class="number">-1</span>+p)%p;fz=(fz<span class="number">-1</span>+p)%p;</span><br><span class="line">    ans=((ans*fz)%p*qpow(fm,p<span class="number">-2</span>))%p;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推公式 </tag>
            
            <tag> 逆元 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1561 The more, The Better（树型dp，依赖背包）</title>
      <link href="/2018/10/04/hdu%201561%20The%20more,%20The%20Better%EF%BC%88%E6%A0%91%E5%9E%8Bdp%EF%BC%8C%E4%BE%9D%E8%B5%96%E8%83%8C%E5%8C%85%EF%BC%89/"/>
      <url>/2018/10/04/hdu%201561%20The%20more,%20The%20Better%EF%BC%88%E6%A0%91%E5%9E%8Bdp%EF%BC%8C%E4%BE%9D%E8%B5%96%E8%83%8C%E5%8C%85%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>Time Limit: 6000/2000 MS (Java/Others)    Memory Limit: 32768/32768 K (Java/Others)</p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>ACboy很喜欢玩一种战略游戏，在一个地图上，有N座城堡，每座城堡都有一定的宝物，在每次游戏中ACboy允许攻克M个城堡并获得里面的宝物。但由于地理位置原因，有些城堡不能直接攻克，要攻克这些城堡必须先攻克其他某一个特定的城堡。你能帮ACboy算出要获得尽量多的宝物应该攻克哪M个城堡吗？</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>每个测试实例首先包括2个整数，N,M.(1 &lt;= M &lt;= N &lt;= 200);在接下来的N行里，每行包括2个整数，a,b. 在第 i 行，a 代表要攻克第 i 个城堡必须先攻克第 a 个城堡，如果 a = 0 则代表可以直接攻克第 i 个城堡。b 代表第 i 个城堡的宝物数量, b &gt;= 0。当N = 0, M = 0输入结束。 </p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>对于每个测试实例，输出一个整数，代表ACboy攻克M个城堡所获得的最多宝物的数量。</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">7 </span><span class="number">4</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">4</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">7 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">7 </span><span class="number">6</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">13</span></span><br></pre></td></tr></table></figure><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给n个点，要求选m个且权值最大，如果某点被选择则某点父亲也要被选择</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>m++，加一个0号点，森林变成树，森林的根都是0号点的儿子</p><p><code>dp[i][j]</code>表示选取i点及子树的点，共j个的最大权值，然后在有儿子的节点上01背包<code>dp[x][j]=max(dp[x][j],dp[x][j-k]+dp[son][k])</code></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">205</span>;</span><br><span class="line"><span class="keyword">int</span> dp[N][N],n,m,a,b;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;g[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;g[x].size();i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> son=g[x][i];</span><br><span class="line">        <span class="keyword">if</span>(g[son].size())dfs(son);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=m;j&gt;<span class="number">1</span>;j--)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;j;k++)</span><br><span class="line">                dp[x][j]=max(dp[x][j],dp[x][j-k]+dp[son][k]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123; </span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF&amp;&amp;(n&amp;&amp;m))&#123;</span><br><span class="line">        <span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)g[i].clear();</span><br><span class="line">        m++;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br><span class="line">            g[a].push_back(i);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)dp[i][j]=b;</span><br><span class="line">        &#125;</span><br><span class="line">        dfs(<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dp[<span class="number">0</span>][m]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> dp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dp </tag>
            
            <tag> 背包 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1413 权势二进制（CF 538 B. Quasi Binary）</title>
      <link href="/2018/10/03/51nod%201413%20%E6%9D%83%E5%8A%BF%E4%BA%8C%E8%BF%9B%E5%88%B6%EF%BC%88CF%20538%20B.%20Quasi%20Binary%EF%BC%89/"/>
      <url>/2018/10/03/51nod%201413%20%E6%9D%83%E5%8A%BF%E4%BA%8C%E8%BF%9B%E5%88%B6%EF%BC%88CF%20538%20B.%20Quasi%20Binary%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>题目来源： CodeForces<a href="http://codeforces.com/problemset/problem/538/B" rel="external nofollow noopener noreferrer" target="_blank">http://codeforces.com/problemset/problem/538/B</a></p><p>基准时间限制：1 秒 空间限制：131072 KB 分值: 10 难度：2级算法题</p><p>一个十进制整数被叫做权势二进制，当他的十进制表示的时候只由0或1组成。例如0，1，101，110011都是权势二进制而2，12，900不是。</p><p>当给定一个n的时候，计算一下最少要多少个权势二进制相加才能得到n。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>单组测试数据。<br>第一行给出一个整数n (1&lt;=n&lt;=1,000,000)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出答案占一行。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">9</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">9</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>这个题放二级里有点太水了。。</p><p>就是取所有位中出现的最大的那个数字</p><p>然后写了一下cf原题，原题里还有一个要求是要输出这些权值二进制。。写的一点都不优美的代码也放下面了0.0</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123; </span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">1</span>,len=s.length();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)ans=max(ans,s[i]-<span class="string">'0'</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> w)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(w==<span class="number">1</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(w==<span class="number">2</span>)<span class="keyword">return</span> <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(w==<span class="number">3</span>)<span class="keyword">return</span> <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(w==<span class="number">4</span>)<span class="keyword">return</span> <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(w==<span class="number">5</span>)<span class="keyword">return</span> <span class="number">10000</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(w==<span class="number">6</span>)<span class="keyword">return</span> <span class="number">100000</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1000000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123; </span><br><span class="line">    <span class="keyword">int</span> n,wei,tmp,ans[<span class="number">11</span>],ji=<span class="number">0</span>,res; </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n); </span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        wei=<span class="number">0</span>;tmp=n;res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(tmp)&#123;</span><br><span class="line">            tmp/=<span class="number">10</span>;wei++;</span><br><span class="line">        &#125;</span><br><span class="line">        tmp=n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=wei;i&gt;<span class="number">0</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(tmp/f(i))&#123;</span><br><span class="line">                tmp-=f(i);res+=f(i);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(tmp/f(i))tmp%=f(i);</span><br><span class="line">        &#125;</span><br><span class="line">        n-=res;</span><br><span class="line">        ans[ji++]=res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ji);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;ji<span class="number">-1</span>;i++)<span class="built_in">printf</span>(<span class="string">"%d "</span>,ans[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans[ji<span class="number">-1</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 贪心 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1433 0和5（CF 352 A. Jeff and Digits）</title>
      <link href="/2018/10/03/51nod%201433%200%E5%92%8C5%EF%BC%88%E8%83%BD%E8%A2%AB9%E6%95%B4%E9%99%A4%E7%9A%84%E6%95%B0%EF%BC%89/"/>
      <url>/2018/10/03/51nod%201433%200%E5%92%8C5%EF%BC%88%E8%83%BD%E8%A2%AB9%E6%95%B4%E9%99%A4%E7%9A%84%E6%95%B0%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>题目来源： CodeForces<a href="http://codeforces.com/problemset/problem/352/A" rel="external nofollow noopener noreferrer" target="_blank">http://codeforces.com/problemset/problem/352/A</a></p><p>基准时间限制：1 秒 空间限制：131072 KB 分值: 10 难度：2级算法题</p><p>小K手中有n张牌，每张牌上有一个一位数的数，这个字数不是0就是5。小K从这些牌在抽出任意张（不能抽0张），排成一行这样就组成了一个数。使得这个数尽可能大，而且可以被90整除。</p><p>注意：</p><p>1.这个数没有前导0，</p><p>2.小K不需要使用所有的牌。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>每个测试数据输入共2行。<br>第一行给出一个n，表示n张牌。(1&lt;=n&lt;=1000)<br>第二行给出n个整数a[0],a[1],a[2],…,a[n-1] ，a[i]是0或5 ，表示牌上的数字。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>共一行，表示由所给牌组成的可以被90整除的最大的数，如果没有答案则输出”-1”（没有引号）</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">0</span> <span class="number">5</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>水题。。然而wa了十几发。。原地爆炸。。</p><p>各项和相加是9的倍数的数才能被9整除</p><blockquote><p>证明：</p><p>先假设一个三位数abc能被9整除，即有<code>100*a+10*b+c=9k</code>，移项得：<code>a+b+c=9k-99a-9b=9(k-11a-b)</code>，即各项和能被9整除</p><p>再假设一个n位数ab……yz，有<code>10……0*a+……+10y+z=9k</code>，<code>a+b+……+z=9k-99……9a-……-9y</code>，各项和能被9整除</p></blockquote><p>所以要被90整除的话，必须有一个0在末尾，num5的个数贪心的取能取到的最大的9的倍数</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> n,num5=<span class="number">0</span>,x,num0;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">        <span class="keyword">if</span>(x==<span class="number">5</span>)num5++;</span><br><span class="line">    &#125;</span><br><span class="line">    num0=n-num5;</span><br><span class="line">    <span class="keyword">if</span>(num0==<span class="number">0</span>)<span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(num5&lt;<span class="number">9</span>)<span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line">    <span class="keyword">else</span>&#123;       </span><br><span class="line">        num5=(<span class="keyword">int</span>)(num5/<span class="number">9</span>)*<span class="number">9</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num5;i++)<span class="built_in">printf</span>(<span class="string">"5"</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num0;i++)<span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1629 B君的圆锥（推公式，三分）</title>
      <link href="/2018/10/03/51nod%201629%20B%E5%90%9B%E7%9A%84%E5%9C%86%E9%94%A5%EF%BC%88%E6%8E%A8%E5%85%AC%E5%BC%8F%EF%BC%8C%E4%B8%89%E5%88%86%EF%BC%89/"/>
      <url>/2018/10/03/51nod%201629%20B%E5%90%9B%E7%9A%84%E5%9C%86%E9%94%A5%EF%BC%88%E6%8E%A8%E5%85%AC%E5%BC%8F%EF%BC%8C%E4%B8%89%E5%88%86%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 10 难度：2级算法题 </p><p>B君要用一个表面积为S的圆锥将白山云包起来。</p><p>B君希望包住的白山云体积尽量大，B君想知道体积最大可以是多少。</p><p>注意圆锥的表面积包括底面和侧面。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>一行一个整数，表示表面积S。(1 &lt;= S &lt;= 10^9)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>一行一个实数，表示体积。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">8</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1<span class="selector-class">.504506</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>懒得打公式了。。直接写吧</p><p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fvv4o6o2ccj31kw16ogtx.jpg" alt=""></p><p>这是个上凸函数，所以还有一种方法是三分，因为没有写过三分的题所以虽然上面那种推公式的方法很方便，不过还是去写了三分法（我记得之前有个三分的题没补来着(#ﾟДﾟ)然而忘了什么题了）</p><p>初始三分的时候，要注意保证半径的合法性<code>l=0,r=sqrt(s/(2*pai))</code>，也就是极限情况h=∞或h=0</p><p>两种方法跑的都很快快</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pai M_PI</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> s,rr;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf"</span>,&amp;s);</span><br><span class="line">    rr=s/(<span class="number">4</span>*pai);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lf\n"</span>,(<span class="keyword">double</span>)<span class="built_in">sqrt</span>(rr*s*s<span class="number">-2</span>*pai*s*rr*rr)/<span class="number">3</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pai M_PI</span></span><br><span class="line"><span class="keyword">double</span> s;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">v</span><span class="params">(<span class="keyword">double</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">double</span>)<span class="built_in">sqrt</span>(r*r*s*s<span class="number">-2</span>*pai*s*r*r*r*r)/<span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;    </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf"</span>,&amp;s);</span><br><span class="line">    <span class="keyword">double</span> l=<span class="number">0</span>,r=<span class="built_in">sqrt</span>(s/(<span class="number">2</span>*pai)),m,rm;</span><br><span class="line">    <span class="keyword">while</span>(r-l&gt;eps)&#123;</span><br><span class="line">        m=(l+r)/<span class="number">2.0</span>;rm=(m+r)/<span class="number">2.0</span>;</span><br><span class="line">        <span class="keyword">if</span>(v(m)&gt;=v(rm))r=rm;</span><br><span class="line">        <span class="keyword">else</span> l=m;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lf\n"</span>,v(l));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 计算几何 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推公式 </tag>
            
            <tag> 三分 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1489 蜥蜴和地下室（CF 6 D. Lizards and Basements 2）</title>
      <link href="/2018/10/03/51nod%201489%20%E8%9C%A5%E8%9C%B4%E5%92%8C%E5%9C%B0%E4%B8%8B%E5%AE%A4%EF%BC%88dfs%EF%BC%89/"/>
      <url>/2018/10/03/51nod%201489%20%E8%9C%A5%E8%9C%B4%E5%92%8C%E5%9C%B0%E4%B8%8B%E5%AE%A4%EF%BC%88dfs%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>题目来源： CodeForces<a href="http://codeforces.com/contest/6/problem/D" rel="external nofollow noopener noreferrer" target="_blank">http://codeforces.com/contest/6/problem/D</a></p><p>基准时间限制：1 秒 空间限制：131072 KB 分值: 10 难度：2级算法题</p><p>哈利喜欢玩角色扮演的电脑游戏《蜥蜴和地下室》。此时，他正在扮演一个魔术师。在最后一关，他必须和一排的弓箭手战斗。他唯一能消灭他们的办法是一个火球咒语。如果哈利用他的火球咒语攻击第i个弓箭手（他们从左到右标记），这个弓箭手会失去a点生命值。同时，这个咒语使与第i个弓箭手左右相邻的弓箭手（如果存在）分别失去b(1 ≤ b &lt; a ≤ 10)点生命值。</p><p>因为两个端点的弓箭手（即标记为1和n的弓箭手）与你相隔较远，所以火球不能直接攻击他们。但是哈利能用他的火球攻击其他任何弓箭手。</p><p>每个弓箭手的生命值都已知。当一个弓箭手的生命值小于0时，这个弓箭手会死亡。请求出哈利杀死所有的敌人所需使用的最少的火球数。</p><p>如果弓箭手已经死亡，哈利仍旧可以将他的火球扔向这个弓箭手。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第一行包含3个整数 n, a, b (3 ≤ n ≤ 10; 1 ≤ b &lt; a ≤ 10)，第二行包含n个整数——h1，h2，…，hn (1 ≤ hi ≤ 15)， hi 是第i个弓箭手所拥有的生命力。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>以一行输出t——所需要的最少的火球数。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">2</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">2</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>因为不能直接打1和n，所以开头先通过打2和n-1来打爆1和n，然后剩下的[2,n-1]dfs，dfs(cur,num)表示直接打第cur个，那么对于cur-1来说只能用b打爆，而对于cur来说可以用a打爆，也可以通过打cur+1来用b打爆，枚举[x,y]次数即可</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;algorithm&gt;</span></span><br><span class="line"><span class="comment">#include &lt;cstdio&gt;</span></span><br><span class="line"><span class="comment">#include &lt;cstring&gt;</span></span><br><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include &lt;cmath&gt;</span></span><br><span class="line"><span class="comment">#include &lt;vector&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line"><span class="comment">#define INF 0x3f3f3f3f</span></span><br><span class="line">int n,a,b,h[15],res;</span><br><span class="line">void dfs(int cur,int num)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="attribute">cur</span>==n)&#123;</span><br><span class="line">        <span class="attribute">res</span>=min(res,num);</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(h[cur-1]&lt;0)dfs(cur+1,num);</span><br><span class="line">    int <span class="attribute">x</span>=h[cur-1]/b+1,<span class="attribute">y</span>=h[cur]/a+1;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;0)<span class="attribute">x</span>=0;</span><br><span class="line">    <span class="keyword">for</span>(int <span class="attribute">i</span>=x;i&lt;=y;i++)&#123;</span><br><span class="line">        h[cur-1]<span class="attribute">-</span>=i*b;h[cur]<span class="attribute">-</span>=i*a;h[cur+1]<span class="attribute">-</span>=i*b;</span><br><span class="line">        dfs(cur+1,num+i);</span><br><span class="line">        h[cur-1]+=i<span class="number">*b</span>;h[cur]+=i<span class="number">*a</span>;h[cur+1]+=i<span class="number">*b</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">    scanf(<span class="string">"%d%d%d"</span>,&amp;n,&amp;a,&amp;b);</span><br><span class="line">    <span class="keyword">for</span>(int <span class="attribute">i</span>=1;i&lt;=n;i++)scanf("%d",&amp;h[i]);</span><br><span class="line">    int num,<span class="attribute">ans</span>=0;</span><br><span class="line">    <span class="attribute">res</span>=INF; </span><br><span class="line">    <span class="attribute">num</span>=h[1]/b+1;ans+=num;</span><br><span class="line">    h[1]<span class="attribute">-</span>=num*b;h[2]<span class="attribute">-</span>=num*a;h[3]<span class="attribute">-</span>=num*b;</span><br><span class="line">    <span class="keyword">if</span>(h[n]&gt;=0)&#123;</span><br><span class="line">        <span class="attribute">num</span>=h[n]/b+1;ans+=num;</span><br><span class="line">        h[n]<span class="attribute">-</span>=num*b;h[n-1]<span class="attribute">-</span>=num*a;</span><br><span class="line">        h[n-2]<span class="attribute">-</span>=num*b;</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(2,0);</span><br><span class="line">    printf(<span class="string">"%d\n"</span>,res+ans);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 搜索 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dfs </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 5983 Pocket Cube（模拟）</title>
      <link href="/2018/10/03/B.%20Pocket%20Cube%EF%BC%88%E6%A8%A1%E6%8B%9F%EF%BC%89/"/>
      <url>/2018/10/03/B.%20Pocket%20Cube%EF%BC%88%E6%A8%A1%E6%8B%9F%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/65536 K (Java/Others)</p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>The Pocket Cube, also known as the Mini Cube or the Ice Cube, is the <code>2 × 2 × 2</code> equivalence of a Rubik’s Cube.</p><p>The cube consists of 8 pieces, all corners.<br>Each piece is labeled by a three dimensional coordinate (h, k, l) where h, k, l ∈ {0, 1}. Each of the six faces owns four small faces filled with a positive integer.</p><p>For each step, you can choose a certain face and turn the face ninety degrees clockwise or counterclockwise.</p><p>You should judge that if one can restore the pocket cube in one step. We say a pocket cube has been restored if each face owns four same integers.</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The first line of input contains one integer N(N ≤ 30) which is the number of test cases.<br>For each test case, the first line describes the top face of the pocket cube, which is the common 2 × 2 face of pieces<br>labelled by (0, 0, 1),(0, 1, 1),(1, 0, 1),(1, 1, 1). Four integers are given corresponding to the above pieces.<br>The second line describes the front face, the common face of (1, 0, 1),(1, 1, 1),(1, 0, 0),(1, 1, 0). Four integers are<br>given corresponding to the above pieces.<br>The third line describes the bottom face, the common face of (1, 0, 0),(1, 1, 0),(0, 0, 0),(0, 1, 0). Four integers are<br>given corresponding to the above pieces.<br>The fourth line describes the back face, the common face of (0, 0, 0),(0, 1, 0),(0, 0, 1),(0, 1, 1). Four integers are<br>given corresponding to the above pieces.<br>The fifth line describes the left face, the common face of (0, 0, 0),(0, 0, 1),(1, 0, 0),(1, 0, 1). Four integers are given<br>corresponding to the above pieces.<br>The six line describes the right face, the common face of (0, 1, 1),(0, 1, 0),(1, 1, 1),(1, 1, 0). Four integers are given<br>corresponding to the above pieces.<br>In other words, each test case contains 24 integers a, b, c to x. You can flat the surface to get the surface development<br>as follows.</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">+ - + - + - + - + - + - +</span><br><span class="line">|<span class="string"> q </span>|<span class="string"> r </span>|<span class="string"> a </span>|<span class="string"> b </span>|<span class="string"> u </span>|<span class="string"> v </span>|</span><br><span class="line">+ - + - + - + - + - + - +</span><br><span class="line">|<span class="string"> s </span>|<span class="string"> t </span>|<span class="string"> c </span>|<span class="string"> d </span>|<span class="string"> w </span>|<span class="string"> x </span>|</span><br><span class="line">+ - + - + - + - + - + - +</span><br><span class="line">        |<span class="string"> e </span>|<span class="string"> f </span>|</span><br><span class="line">        + - + - +</span><br><span class="line">        |<span class="string"> g </span>|<span class="string"> h </span>|</span><br><span class="line">        + - + - +</span><br><span class="line">        |<span class="string"> i </span>|<span class="string"> j </span>|</span><br><span class="line">        + - + - +</span><br><span class="line">        |<span class="string"> k </span>|<span class="string"> l </span>|</span><br><span class="line">        + - + - +</span><br><span class="line">        |<span class="string"> m </span>|<span class="string"> n </span>|</span><br><span class="line">        + - + - +</span><br><span class="line">        |<span class="string"> o </span>|<span class="string"> p </span>|</span><br><span class="line">        + - + - +</span><br></pre></td></tr></table></figure><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each test case, output YES if can be restored in one step, otherwise output NO.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">1</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">2</span> <span class="number">2</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">3</span> <span class="number">3</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">4</span> <span class="number">4</span> <span class="number">4</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">5</span> <span class="number">5</span> <span class="number">5</span></span><br><span class="line"><span class="symbol">6 </span><span class="number">6</span> <span class="number">6</span> <span class="number">6</span></span><br><span class="line"><span class="symbol">6 </span><span class="number">6</span> <span class="number">6</span> <span class="number">6</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">1</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">2</span> <span class="number">2</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">3</span> <span class="number">3</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">5</span> <span class="number">5</span> <span class="number">5</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">4</span> <span class="number">4</span> <span class="number">4</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">4</span> <span class="number">1</span> <span class="number">4</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">1</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">2</span> <span class="number">3</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">3</span> <span class="number">4</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">5</span> <span class="number">5</span> <span class="number">5</span></span><br><span class="line"><span class="symbol">6 </span><span class="number">6</span> <span class="number">6</span> <span class="number">6</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span> <span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">4</span> <span class="number">2</span> <span class="number">4</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">1</span> <span class="number">3</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">2</span> <span class="number">4</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">5</span> <span class="number">5</span> <span class="number">5</span></span><br><span class="line"><span class="symbol">6 </span><span class="number">6</span> <span class="number">6</span> <span class="number">6</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">YES</span></span><br><span class="line"><span class="literal">YES</span></span><br><span class="line"><span class="literal">YES</span></span><br><span class="line"><span class="literal">NO</span></span><br></pre></td></tr></table></figure><h3 id="Source"><a href="#Source" class="headerlink" title="Source"></a>Source</h3><p>2016ACM/ICPC亚洲区青岛站-重现赛（感谢中国石油大学）</p><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给一个二阶魔方，问能否一部还原</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>六个面六种转法，顺时针一次或逆时针一次（即顺时针三次），暴力模拟，特判不用转的情况</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;cstdio&gt;</span><br><span class="line">#include &lt;cstring&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;cmath&gt;</span><br><span class="line">#include &lt;<span class="type">vector</span>&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int a[<span class="number">7</span>][<span class="number">5</span>],b[<span class="number">7</span>][<span class="number">5</span>];</span><br><span class="line">bool ok()&#123;</span><br><span class="line">    int flag=<span class="number">1</span>;</span><br><span class="line">    for(int i=<span class="number">1</span>;i&lt;=<span class="number">6</span>;i++)&#123;</span><br><span class="line">        int tmp=b[i][<span class="number">1</span>];</span><br><span class="line">        if(!flag)break;</span><br><span class="line">        for(int j=<span class="number">2</span>;j&lt;=<span class="number">4</span>;j++)&#123;</span><br><span class="line">            if(b[i][j]!=tmp)&#123;</span><br><span class="line">                flag=<span class="number">0</span>;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return flag;</span><br><span class="line">&#125;</span><br><span class="line">void zhuan(int m)&#123;</span><br><span class="line">    int t1,t2;</span><br><span class="line">    if(m==<span class="number">1</span>)&#123;</span><br><span class="line">        t1=b[<span class="number">2</span>][<span class="number">1</span>];t2=b[<span class="number">2</span>][<span class="number">2</span>];</span><br><span class="line">        b[<span class="number">2</span>][<span class="number">1</span>]=b[<span class="number">5</span>][<span class="number">2</span>];b[<span class="number">2</span>][<span class="number">2</span>]=b[<span class="number">5</span>][<span class="number">4</span>];</span><br><span class="line">        b[<span class="number">5</span>][<span class="number">2</span>]=b[<span class="number">4</span>][<span class="number">4</span>];b[<span class="number">5</span>][<span class="number">4</span>]=b[<span class="number">4</span>][<span class="number">3</span>];</span><br><span class="line">        b[<span class="number">4</span>][<span class="number">4</span>]=b[<span class="number">6</span>][<span class="number">3</span>];b[<span class="number">4</span>][<span class="number">3</span>]=b[<span class="number">6</span>][<span class="number">1</span>];</span><br><span class="line">        b[<span class="number">6</span>][<span class="number">3</span>]=t1;b[<span class="number">6</span>][<span class="number">1</span>]=t2;</span><br><span class="line">    &#125;</span><br><span class="line">    else if(m==<span class="number">2</span>)&#123;</span><br><span class="line">        t1=b[<span class="number">1</span>][<span class="number">3</span>];t2=b[<span class="number">1</span>][<span class="number">4</span>];</span><br><span class="line">        b[<span class="number">1</span>][<span class="number">3</span>]=b[<span class="number">6</span>][<span class="number">3</span>];b[<span class="number">1</span>][<span class="number">4</span>]=b[<span class="number">6</span>][<span class="number">4</span>];</span><br><span class="line">        b[<span class="number">6</span>][<span class="number">3</span>]=b[<span class="number">3</span>][<span class="number">2</span>];b[<span class="number">6</span>][<span class="number">4</span>]=b[<span class="number">3</span>][<span class="number">1</span>];</span><br><span class="line">        b[<span class="number">3</span>][<span class="number">2</span>]=b[<span class="number">5</span>][<span class="number">3</span>];b[<span class="number">3</span>][<span class="number">1</span>]=b[<span class="number">5</span>][<span class="number">4</span>];</span><br><span class="line">        b[<span class="number">5</span>][<span class="number">3</span>]=t1;b[<span class="number">5</span>][<span class="number">4</span>]=t2;</span><br><span class="line">    &#125;</span><br><span class="line">    else if(m==<span class="number">3</span>)&#123;</span><br><span class="line">        t1=b[<span class="number">2</span>][<span class="number">3</span>];t2=b[<span class="number">2</span>][<span class="number">4</span>];</span><br><span class="line">        b[<span class="number">2</span>][<span class="number">3</span>]=b[<span class="number">6</span>][<span class="number">4</span>];b[<span class="number">2</span>][<span class="number">4</span>]=b[<span class="number">6</span>][<span class="number">2</span>];</span><br><span class="line">        b[<span class="number">6</span>][<span class="number">4</span>]=b[<span class="number">4</span>][<span class="number">2</span>];b[<span class="number">6</span>][<span class="number">2</span>]=b[<span class="number">4</span>][<span class="number">1</span>];</span><br><span class="line">        b[<span class="number">4</span>][<span class="number">2</span>]=b[<span class="number">5</span>][<span class="number">1</span>];b[<span class="number">4</span>][<span class="number">1</span>]=b[<span class="number">5</span>][<span class="number">3</span>];</span><br><span class="line">        b[<span class="number">5</span>][<span class="number">1</span>]=t1;b[<span class="number">5</span>][<span class="number">3</span>]=t2;</span><br><span class="line">    &#125;</span><br><span class="line">    else if(m==<span class="number">4</span>)&#123;</span><br><span class="line">        t1=b[<span class="number">1</span>][<span class="number">2</span>];t2=b[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">        b[<span class="number">1</span>][<span class="number">2</span>]=b[<span class="number">6</span>][<span class="number">2</span>];b[<span class="number">1</span>][<span class="number">1</span>]=b[<span class="number">6</span>][<span class="number">1</span>];</span><br><span class="line">        b[<span class="number">6</span>][<span class="number">2</span>]=b[<span class="number">3</span>][<span class="number">3</span>];b[<span class="number">6</span>][<span class="number">1</span>]=b[<span class="number">3</span>][<span class="number">4</span>];</span><br><span class="line">        b[<span class="number">3</span>][<span class="number">3</span>]=b[<span class="number">5</span>][<span class="number">2</span>];b[<span class="number">3</span>][<span class="number">4</span>]=b[<span class="number">5</span>][<span class="number">1</span>];</span><br><span class="line">        b[<span class="number">5</span>][<span class="number">2</span>]=t1;b[<span class="number">5</span>][<span class="number">1</span>]=t2;</span><br><span class="line">    &#125;</span><br><span class="line">    else if(m==<span class="number">5</span>)&#123;</span><br><span class="line">        t1=b[<span class="number">1</span>][<span class="number">1</span>];t2=b[<span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">        b[<span class="number">1</span>][<span class="number">1</span>]=b[<span class="number">4</span>][<span class="number">1</span>];b[<span class="number">1</span>][<span class="number">3</span>]=b[<span class="number">4</span>][<span class="number">3</span>];</span><br><span class="line">        b[<span class="number">4</span>][<span class="number">1</span>]=b[<span class="number">3</span>][<span class="number">1</span>];b[<span class="number">4</span>][<span class="number">3</span>]=b[<span class="number">3</span>][<span class="number">3</span>];</span><br><span class="line">        b[<span class="number">3</span>][<span class="number">1</span>]=b[<span class="number">2</span>][<span class="number">1</span>];b[<span class="number">3</span>][<span class="number">3</span>]=b[<span class="number">2</span>][<span class="number">3</span>];</span><br><span class="line">        b[<span class="number">2</span>][<span class="number">1</span>]=t1;b[<span class="number">2</span>][<span class="number">3</span>]=t2;</span><br><span class="line">    &#125;</span><br><span class="line">    else if(m==<span class="number">6</span>)&#123;</span><br><span class="line">        t1=b[<span class="number">1</span>][<span class="number">4</span>];t2=b[<span class="number">1</span>][<span class="number">2</span>];</span><br><span class="line">        b[<span class="number">1</span>][<span class="number">4</span>]=b[<span class="number">2</span>][<span class="number">4</span>];b[<span class="number">1</span>][<span class="number">2</span>]=b[<span class="number">2</span>][<span class="number">2</span>];</span><br><span class="line">        b[<span class="number">2</span>][<span class="number">4</span>]=b[<span class="number">3</span>][<span class="number">4</span>];b[<span class="number">2</span>][<span class="number">2</span>]=b[<span class="number">3</span>][<span class="number">2</span>];</span><br><span class="line">        b[<span class="number">3</span>][<span class="number">4</span>]=b[<span class="number">4</span>][<span class="number">4</span>];b[<span class="number">3</span>][<span class="number">2</span>]=b[<span class="number">4</span>][<span class="number">2</span>];</span><br><span class="line">        b[<span class="number">4</span>][<span class="number">4</span>]=t1;b[<span class="number">4</span>][<span class="number">2</span>]=t2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">    int t,flag;</span><br><span class="line">    scanf(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    while(t--)&#123;</span><br><span class="line">        flag=<span class="number">0</span>;</span><br><span class="line">        for(int i=<span class="number">1</span>;i&lt;=<span class="number">6</span>;i++)&#123;</span><br><span class="line">            for(int j=<span class="number">1</span>;j&lt;=<span class="number">4</span>;j++)</span><br><span class="line">                scanf(<span class="string">"%d"</span>,&amp;a[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">        for(int j=<span class="number">1</span>;j&lt;=<span class="number">6</span>;j++)</span><br><span class="line">                for(int k=<span class="number">1</span>;k&lt;=<span class="number">4</span>;k++)</span><br><span class="line">                    b[j][k]=a[j][k];</span><br><span class="line">        if(ok())&#123;</span><br><span class="line">            puts(<span class="string">"YES"</span>);</span><br><span class="line">            continue;</span><br><span class="line">        &#125;</span><br><span class="line">        for(int i=<span class="number">1</span>;i&lt;=<span class="number">6</span>;i++)&#123;</span><br><span class="line">            for(int j=<span class="number">1</span>;j&lt;=<span class="number">6</span>;j++)</span><br><span class="line">                for(int k=<span class="number">1</span>;k&lt;=<span class="number">4</span>;k++)</span><br><span class="line">                    b[j][k]=a[j][k];</span><br><span class="line">            zhuan(i);</span><br><span class="line">            if(ok())&#123;</span><br><span class="line">                flag=<span class="number">1</span>;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">            zhuan(i);zhuan(i);</span><br><span class="line">            if(ok())&#123;</span><br><span class="line">                flag=<span class="number">1</span>;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if(flag)puts(<span class="string">"YES"</span>);</span><br><span class="line">        else puts(<span class="string">"NO"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    return <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 模拟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1521 一维战舰（CF 567 D. One-Dimensional Battle Ships）</title>
      <link href="/2018/10/02/51nod%201521%20%E4%B8%80%E7%BB%B4%E6%88%98%E8%88%B0/"/>
      <url>/2018/10/02/51nod%201521%20%E4%B8%80%E7%BB%B4%E6%88%98%E8%88%B0/</url>
      <content type="html"><![CDATA[<p>题目来源： CodeForces<a href="http://codeforces.com/contest/567/problem/D" rel="external nofollow noopener noreferrer" target="_blank">http://codeforces.com/contest/567/problem/D</a></p><p>基准时间限制：1 秒 空间限制：131072 KB 分值: 10 难度：2级算法题 </p><p>爱丽丝和鲍博喜欢玩一维战舰的游戏。他们在一行有n个方格的纸上玩这个游戏（也就是1×n的表格）。</p><p>在游戏开始的时候，爱丽丝放k个战舰在这个表格中，并不把具体位置告诉鲍博。每一只战舰的形状是 1×a 的长方形（也就是说，战舰会占据a个连续的方格）。这些战舰不能相互重叠，也不能相接触。</p><p>然后鲍博会做一系列的点名。当他点到某个格子的时候，爱丽丝会告诉他那个格子是否被某只战舰占据。如果是，就说hit，否则就说miss。</p><p>但是这儿有一个问题！爱丽丝喜欢撒谎。他每次都会告诉鲍博miss。</p><p>请你帮助鲍博证明爱丽丝撒谎了，请找出哪一步之后爱丽丝肯定撒谎了。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>单组测试数据。<br>第一行有三个整数n,k和a(1≤n,k,a≤2*10^5)，表示表格的大小，战舰的数目，还有战舰的大小。输入的n,k,a保证是能够在1×n的表格中放入k只大小为a的战舰，并且他们之间不重叠也不接触。<br>第二行是一个整数m(1≤m≤n)，表示鲍博的点名次数。<br>第三行有m个不同的整数x1,x2,…,xm，xi是鲍博第i次点名的格子编号。格子从左到右按照1到n编号。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出一个整数，表示最早一次能够证明爱丽丝一定撒谎的点名编号。如果不能证明，输出-1。点名的编号依次从1到m编号。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">样例<span class="number">1</span></span><br><span class="line"><span class="number">11</span> <span class="number">3</span> <span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">4</span> <span class="number">8</span> <span class="number">6</span> <span class="number">1</span> <span class="number">11</span></span><br><span class="line"></span><br><span class="line">样例<span class="number">2</span></span><br><span class="line"><span class="number">5</span> <span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">样例输出<span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"></span><br><span class="line">样例输出<span class="number">2</span></span><br><span class="line"><span class="number">-1</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>脑子不转了已经。。半天没想通0.0 还是纸上模拟一下靠谱</p><p>因为战舰不能接触，也就是说两个战舰中间要有一个空格，所以1xn的格子能放的最多战舰数是<code>(n+1)/(a+1)</code>，然后如果当前格子i是miss，那么从i向左右拓展，知道遇到被标记的分隔l,r，然后先减去这个l～r区间内能放的战舰数，再加上l～x和x～r两个区间内能放的战舰数</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,k,a,m,c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;n,&amp;k,&amp;a,&amp;m);</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="literal">false</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">    vis[<span class="number">0</span>]=vis[n+<span class="number">1</span>]=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">int</span> num=(n+<span class="number">1</span>)/(a+<span class="number">1</span>),l,r,flag=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;c);</span><br><span class="line">        vis[c]=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">            <span class="keyword">for</span>(l=c<span class="number">-1</span>;l&gt;=<span class="number">0</span>&amp;&amp;!vis[l];l--);</span><br><span class="line">            <span class="keyword">for</span>(r=c+<span class="number">1</span>;r&lt;=n&amp;&amp;!vis[r];r++);</span><br><span class="line">            <span class="keyword">int</span> tmp=(r-l)/(a+<span class="number">1</span>);</span><br><span class="line">            num-=tmp;</span><br><span class="line">            num+=(c-l)/(a+<span class="number">1</span>)+(r-c)/(a+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>(num&lt;k)&#123;</span><br><span class="line">                flag=<span class="number">0</span>;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,i+<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;       </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag)<span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 杂 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>C. Greetings!（枚举，贪心，dfs） -- The North American Invitational Programming Contest 2016</title>
      <link href="/2018/10/02/C.%20Greetings!%EF%BC%88%E6%9E%9A%E4%B8%BE%EF%BC%8C%E8%B4%AA%E5%BF%83%EF%BC%8Cdfs%EF%BC%89%20--%20The%20North%20American%20Invitational%20Programming%20Contest%202016/"/>
      <url>/2018/10/02/C.%20Greetings!%EF%BC%88%E6%9E%9A%E4%B8%BE%EF%BC%8C%E8%B4%AA%E5%BF%83%EF%BC%8Cdfs%EF%BC%89%20--%20The%20North%20American%20Invitational%20Programming%20Contest%202016/</url>
      <content type="html"><![CDATA[<p><img src="https://ws3.sinaimg.cn/large/006tNc79gy1fvu24l9e9bj30j90gzgmq.jpg" alt=""></p><p><img src="https://ws4.sinaimg.cn/large/006tNc79gy1fvu24vsy0oj30ia04xwem.jpg" alt=""></p><p><img src="https://ws2.sinaimg.cn/large/006tNc79gy1fvu259eeytj30ia0hl3yn.jpg" alt=""></p><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>有n种卡片，每种卡片长/宽/个数分别为wi，hi，qi</p><p>有k种大小的信封，大小任意，要求把卡片装到信封里，定义浪费值为信封大小减去卡片大小，求最小的浪费值</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>不同的卡片放在同一种信封里信封的最优大小一般不同，所以首先枚举2^n个状态，预处理出每种状态的浪费值，肯定是贪心的取当前最大的长和宽作为这个信封的长和宽，浪费值存入st[i]</p><p>dfs(now,k)和ans[now][k]代表状态now的卡片装k种信封的最小浪费值</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(int <span class="built_in">i</span>=now;<span class="built_in">i</span>&gt;<span class="number">0</span>;<span class="built_in">i</span>=(<span class="built_in">i</span><span class="number">-1</span>)&amp;now)</span><br><span class="line">    res=min(res,st[i]+dfs(now-<span class="built_in">i</span>,k<span class="number">-1</span>));</span><br></pre></td></tr></table></figure><p><code>i=(i-1)&amp;now</code>就可以枚举完<code>k-&gt;k-1</code>的所有情况了，比如当前<code>now=11001</code>，那么k-1下共有<code>11000,10001,10000,01001,01000,00001</code>这六种情况，取最小的那一种返回，继续dfs至<code>now=0||k=1</code>为止</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">15</span>;</span><br><span class="line"><span class="keyword">const</span> LL INF=<span class="number">9223372036854775807</span>;</span><br><span class="line">LL st[(<span class="number">1</span>&lt;&lt;N)],ans[(<span class="number">1</span>&lt;&lt;N)][<span class="number">16</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">aaa</span>&#123;</span></span><br><span class="line">    LL w,h,q;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="function">LL <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> now,<span class="keyword">int</span> k)</span></span>&#123;   </span><br><span class="line">    <span class="keyword">if</span>(ans[now][k]&gt;=<span class="number">0</span>)<span class="keyword">return</span> ans[now][k];</span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">1</span>)&#123;</span><br><span class="line">        ans[now][k]=st[now];</span><br><span class="line">        <span class="keyword">return</span> ans[now][k];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(now==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    LL res=INF;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=now;i&gt;<span class="number">0</span>;i=(i<span class="number">-1</span>)&amp;now)</span><br><span class="line">        res=min(res,st[i]+dfs(now-i,k<span class="number">-1</span>));</span><br><span class="line">    ans[now][k]=res;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld"</span>,&amp;a[i].w,&amp;a[i].h,&amp;a[i].q);</span><br><span class="line">    <span class="built_in">memset</span>(ans,<span class="number">-1</span>,<span class="keyword">sizeof</span>(ans));</span><br><span class="line">    st[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;(<span class="number">1</span>&lt;&lt;n);i++)&#123;</span><br><span class="line">        LL chang=<span class="number">0</span>,kuan=<span class="number">0</span>;</span><br><span class="line">        st[i]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i&amp;(<span class="number">1</span>&lt;&lt;j))&#123;</span><br><span class="line">                chang=max(chang,a[j].w);</span><br><span class="line">                kuan=max(kuan,a[j].h);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i&amp;(<span class="number">1</span>&lt;&lt;j))</span><br><span class="line">                st[i]+=a[j].q*(chang*kuan-a[j].w*a[j].h);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,dfs((<span class="number">1</span>&lt;&lt;n)<span class="number">-1</span>,k));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 搜索 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 贪心 </tag>
            
            <tag> dfs </tag>
            
            <tag> 枚举 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1596 搬货物（CF 587 A. Duff and Weight Lifting）</title>
      <link href="/2018/10/01/51nod%201596%20%E6%90%AC%E8%B4%A7%E7%89%A9/"/>
      <url>/2018/10/01/51nod%201596%20%E6%90%AC%E8%B4%A7%E7%89%A9/</url>
      <content type="html"><![CDATA[<p>题目来源： CodeForces<a href="http://codeforces.com/contest/587/problem/A" rel="external nofollow noopener noreferrer" target="_blank">http://codeforces.com/contest/587/problem/A</a></p><p>基准时间限制：1 秒 空间限制：131072 KB 分值: 10 难度：2级算法题</p><p>现在有n个货物，第i个货物的重量是 2^(wi) 。每次搬的时候要求货物重量的总和是一个2的幂。问最少要搬几次能把所有的货物搬完。</p><p>样例解释：</p><p>1，1，2作为一组。</p><p>3，3作为一组。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>单组测试数据。<br>第一行有一个整数n (1≤n≤10^6)，表示有几个货物。<br>第二行有n个整数 w1,w2,…,wn，(0≤wi≤10^6)。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出最少的运货次数。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">样例输入<span class="number">1</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">样例输出<span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>一开始不会写。。我好菜啊咋就想不到呢。。看了别人的题解恍然大悟。。其实是个水题。。</p><p>二进制，模拟一下就知道两个1可以变成一个2，两个2可以变成一个3 …… 从小到大以此类推，扫一遍的o(n)做法</p><p>注意数组开1e6+5是不够的，wa了两个测试点，比如极限数据1e6个1e6，那么向后推要到log2(1e6)，大概是2^20左右，所以数组开大一点就行了</p><p>然后讨论区说这题卡输入输出，自己加个挂就行</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1000025</span>;</span><br><span class="line"><span class="keyword">int</span> w[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch=getchar();x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(;ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>;ch=getchar());</span><br><span class="line">    <span class="keyword">for</span>(;ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>;ch=getchar())x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="built_in">memset</span>(w,<span class="number">0</span>,<span class="keyword">sizeof</span>(w));</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        read(c);</span><br><span class="line">        w[c]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(w[i]&gt;<span class="number">1</span>)&#123;</span><br><span class="line">            w[i+<span class="number">1</span>]+=w[i]/<span class="number">2</span>;</span><br><span class="line">            w[i]%=<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(w[i]==<span class="number">1</span>)ans++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 模拟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1873 初中的算术（java高精度）</title>
      <link href="/2018/10/01/51nod%201873%20%E5%88%9D%E4%B8%AD%E7%9A%84%E7%AE%97%E6%9C%AF%EF%BC%88java%E9%AB%98%E7%B2%BE%E5%BA%A6%EF%BC%89/"/>
      <url>/2018/10/01/51nod%201873%20%E5%88%9D%E4%B8%AD%E7%9A%84%E7%AE%97%E6%9C%AF%EF%BC%88java%E9%AB%98%E7%B2%BE%E5%BA%A6%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fvsu6keftmj30o40cnwf1.jpg" alt=""></p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">样例输入<span class="number">1</span></span><br><span class="line"><span class="number">0.4321</span> <span class="number">20</span></span><br><span class="line">样例输入<span class="number">2</span></span><br><span class="line"><span class="number">1.0100</span> <span class="number">12</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">样例输出<span class="number">1</span></span><br><span class="line"><span class="number">.00000005148554641076956121994511276767154838481760200726351203835429763013462401</span></span><br><span class="line">样例输出<span class="number">2</span></span><br><span class="line"><span class="number">1.126825030131969720661201</span></span><br></pre></td></tr></table></figure><hr><p>又水了一题 java虽然没有很快 但是它写的快呀╮(￣▽￣””)╭</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;  </span><br><span class="line"><span class="keyword">import</span> java.math.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> &#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner <span class="built_in">cin</span>=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        BigDecimal a=<span class="built_in">cin</span>.nextBigDecimal();</span><br><span class="line">        <span class="keyword">int</span> n=<span class="built_in">cin</span>.nextInt();</span><br><span class="line">        a=a.<span class="built_in">pow</span>(n);</span><br><span class="line">        String res=a.stripTrailingZeros().toPlainString();</span><br><span class="line">        <span class="keyword">if</span>(res.startsWith(<span class="string">"0"</span>))&#123;</span><br><span class="line">        res=res.substring(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(res);</span><br><span class="line">        <span class="built_in">cin</span>.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> java高精度 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java高精度 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1649 齐头并进（CF 601 A. The Two Routes）</title>
      <link href="/2018/10/01/51nod%201649%20%E9%BD%90%E5%A4%B4%E5%B9%B6%E8%BF%9B%EF%BC%88CF%20601%20A.%20The%20Two%20Routes%EF%BC%89/"/>
      <url>/2018/10/01/51nod%201649%20%E9%BD%90%E5%A4%B4%E5%B9%B6%E8%BF%9B%EF%BC%88CF%20601%20A.%20The%20Two%20Routes%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>题目来源： CodeForces<a href="http://codeforces.com/contest/601/problem/A" rel="external nofollow noopener noreferrer" target="_blank">http://codeforces.com/contest/601/problem/A</a></p><p>基准时间限制：1 秒 空间限制：131072 KB 分值: 10 难度：2级算法题</p><p>在一个叫奥斯汀的城市，有n个小镇（从1到n编号），这些小镇通过m条双向火车铁轨相连。当然某些小镇之间也有公路相连。为了保证每两个小镇之间的人可以方便的相互访问，市长就在那些没有铁轨直接相连的小镇之间建造了公路。在两个直接通过公路或者铁路相连的小镇之间移动，要花费一个小时的时间。</p><p>现在有一辆火车和一辆汽车同时从小镇1出发。他们都要前往小镇n，但是他们中途不能同时停在同一个小镇（但是可以同时停在小镇n）。火车只能走铁路，汽车只能走公路。</p><p>现在请来为火车和汽车分别设计一条线路；所有的公路或者铁路可以被多次使用。使得火车和汽车尽可能快的到达小镇n。即要求他们中最后到达小镇n的时间要最短。输出这个最短时间。(最后火车和汽车可以同时到达小镇n，也可以先后到达。)</p><p>样例解释：</p><p>在样例中，火车可以按照 1⟶3⟶4 行驶，汽车 1⟶2⟶4 按照行驶，经过2小时后他们同时到过小镇4。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>单组测试数据。<br>第一行有两个整数n 和 m (2≤n≤400, 0≤m≤n*(n-1)/2) ，表示小镇的数目和铁轨的数目。<br>接下来m行，每行有两个整数u 和 v，表示u和v之间有一条铁路。(1≤u,v≤n, u≠v)。<br>输入中保证两个小镇之间最多有一条铁路直接相连。  </p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出一个整数，表示答案，如果没有合法的路线规划，输出-1。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">4 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">4</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>仔细读题会发现“为了保证每两个小镇之间的人可以方便的相互访问，市长就在那些没有铁轨直接相连的小镇之间建造了公路”，所以其实不会出现题中那个“中途不能同时停在同一个小镇”的问题，要么铁路一步直达公路绕路，要么铁路不能一步直达公路必一步直达，想通这点就好做了</p><p>先判断一下公路1-n有无一步直达，然后跑一遍dijkstra即可</p><p>去榜里找了个有注释的Dijkstra的模版。。</p><p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fvsu2ygqv0j30ek0b5aac.jpg" alt=""></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">505</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> d[N],a[N][N];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">()</span></span>&#123; </span><br><span class="line">    <span class="built_in">memset</span>(d,INF,<span class="keyword">sizeof</span>(d));</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="literal">false</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">    d[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> minn,tmp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        minn=INF;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!vis[j]&amp;&amp;d[j]&lt;minn)&#123;</span><br><span class="line">                tmp=j;</span><br><span class="line">                minn=d[j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        vis[tmp]=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!vis[j]&amp;&amp;a[tmp][j]+d[tmp]&lt;d[j])</span><br><span class="line">                d[j]=a[tmp][j]+d[tmp];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="built_in">memset</span>(a,INF,<span class="keyword">sizeof</span>(a));</span><br><span class="line">    <span class="keyword">int</span> u,v;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</span><br><span class="line">        a[u][v]=<span class="number">1</span>;</span><br><span class="line">        a[v][u]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(a[<span class="number">1</span>][n]==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">                a[i][j]=(a[i][j]==<span class="number">1</span>?INF:<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    dijkstra();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,d[n]==INF?<span class="number">-1</span>:d[n]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 图论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dijkstra </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1003 阶乘后面0的数量（勒让德定理）</title>
      <link href="/2018/10/01/51nod%201003%20%E9%98%B6%E4%B9%98%E5%90%8E%E9%9D%A20%E7%9A%84%E6%95%B0%E9%87%8F%EF%BC%88%E5%8B%92%E8%AE%A9%E5%BE%B7%E5%AE%9A%E7%90%86%EF%BC%89/"/>
      <url>/2018/10/01/51nod%201003%20%E9%98%B6%E4%B9%98%E5%90%8E%E9%9D%A20%E7%9A%84%E6%95%B0%E9%87%8F%EF%BC%88%E5%8B%92%E8%AE%A9%E5%BE%B7%E5%AE%9A%E7%90%86%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 5 难度：1级算法题 </p><p>n的阶乘后面有多少个0？<br><code>6的阶乘 = 1*2*3*4*5*6 = 720</code>，720后面有1个0。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>一个数N(1 &lt;= N &lt;= 10^9)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出0的数量</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>n是1e9，一开始的做法是暴力枚举所有数，先除以10，再算因数2的个数，再算因数5的个数，因为<code>2*5=10</code>，果不其然的又t又wa了。。</p><p>然后看了讨论区 知道了一个叫勒让德定理的东西</p><p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fvsn0rqasmj30fv01twec.jpg" alt=""></p><p>证明如下：（其实直接理解也行。。还是蛮好想的）</p><p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1fvso2xv463j30mh04eq30.jpg" alt=""></p><p>有了这个东西只要计算因数2和因数5的个数然后取小的那个即可</p><p>然后因为因数2肯定比5多，所以最后其实只要算因数5的个数即可</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,num5=<span class="number">0</span>,tmp=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    tmp=<span class="number">5</span>;</span><br><span class="line">    <span class="keyword">while</span>(tmp&lt;=n)&#123;</span><br><span class="line">        num5+=n/tmp;</span><br><span class="line">        tmp*=<span class="number">5</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,num5);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 勒让德定理 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1002 数塔取数问题（dp）</title>
      <link href="/2018/10/01/51nod%201002%20%E6%95%B0%E5%A1%94%E5%8F%96%E6%95%B0%E9%97%AE%E9%A2%98%EF%BC%88dp%EF%BC%89/"/>
      <url>/2018/10/01/51nod%201002%20%E6%95%B0%E5%A1%94%E5%8F%96%E6%95%B0%E9%97%AE%E9%A2%98%EF%BC%88dp%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 5 难度：1级算法题</p><p>一个高度为N的由正整数组成的三角形，从上走到下，求经过的数字和的最大值。<br>每次只能走到下一层相邻的数上，例如从第3层的6向下走，只能走到第4层的2或9上。</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">   <span class="number">5</span></span><br><span class="line">  <span class="number">8</span> <span class="number">4</span></span><br><span class="line"> <span class="number">3</span> <span class="number">6</span> <span class="number">9</span></span><br><span class="line"><span class="number">7</span> <span class="number">2</span> <span class="number">9</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><p>例子中的最优方案是：5 + 8 + 6 + 9 = 28</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：N，N为数塔的高度。(2 &lt;= N &lt;= 500)<br>第2 - N + 1行：每行包括1层数塔的数字，第2行1个数，第3行2个数……第k+1行k个数。数与数之间用空格分隔（0 &lt;= A[i] &lt;= 10^5) 。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出最大值</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="symbol">8 </span><span class="number">4</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">6</span> <span class="number">9</span></span><br><span class="line"><span class="symbol">7 </span><span class="number">2</span> <span class="number">9</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">28</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>dp水题 从上一层的状态递推下一层</p><p>状态转移方程为 <code>dp[i][j]=max(dp[i-1][j-1],dp[i-1][j])+a[i][j]</code></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">505</span>;</span><br><span class="line"><span class="keyword">int</span> a[N][N],dp[N][N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=i;j++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">    dp[<span class="number">1</span>][<span class="number">1</span>]=a[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=i;j++)&#123;</span><br><span class="line">            dp[i][j]=max(dp[i<span class="number">-1</span>][j<span class="number">-1</span>],dp[i<span class="number">-1</span>][j])+a[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=dp[n][<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        ans=max(ans,dp[n][i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> dp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dp </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1001 数组中和等于K的数对</title>
      <link href="/2018/10/01/51nod%201001%20%E6%95%B0%E7%BB%84%E4%B8%AD%E5%92%8C%E7%AD%89%E4%BA%8EK%E7%9A%84%E6%95%B0%E5%AF%B9/"/>
      <url>/2018/10/01/51nod%201001%20%E6%95%B0%E7%BB%84%E4%B8%AD%E5%92%8C%E7%AD%89%E4%BA%8EK%E7%9A%84%E6%95%B0%E5%AF%B9/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 5 难度：1级算法题</p><p>给出一个整数K和一个无序数组A，A的元素为N个互不相同的整数，找出数组A中所有和等于K的数对。例如K = 8，数组A：{-1,6,5,3,4,2,9,0,8}，所有和等于8的数对包括(-1,9)，(0,8)，(2,6)，(3,5)。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：用空格隔开的2个数，K N，N为A数组的长度。(2 &lt;= N &lt;= 50000，-10^9 &lt;= K &lt;= 10^9)<br>第2 - N + 1行：A数组的N个元素。（-10^9 &lt;= A[i] &lt;= 10^9) </p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>第1 - M行：每行2个数，要求较小的数在前面，并且这M个数对按照较小的数升序排列。<br>如果不存在任何一组解则输出：No Solution。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">8</span> <span class="number">9</span></span><br><span class="line"><span class="number">-1</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">8</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span> <span class="number">9</span></span><br><span class="line"><span class="number">0</span> <span class="number">8</span></span><br><span class="line"><span class="number">2</span> <span class="number">6</span></span><br><span class="line"><span class="number">3</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>先排序，然后选定a[i]，用一个指针从后往前寻找是否存在对应的a[j]</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">50005</span>;</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k,n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;k,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    sort(a,a+n);</span><br><span class="line">    <span class="keyword">int</span> cur=n<span class="number">-1</span>,flag=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(cur&gt;i)&#123;</span><br><span class="line">            <span class="keyword">while</span>(a[i]+a[cur]&gt;k)cur--;</span><br><span class="line">            <span class="keyword">if</span>(a[i]+a[cur]==k&amp;&amp;cur!=i)&#123;</span><br><span class="line">                flag=<span class="number">1</span>;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,a[i],a[cur]);</span><br><span class="line">            &#125;     </span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!flag)<span class="built_in">printf</span>(<span class="string">"No Solution"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 模拟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CF 1029 F. Multicolored Markers（暴力）</title>
      <link href="/2018/10/01/CF%201029%20F.%20Multicolored%20Markers%EF%BC%88%E6%9A%B4%E5%8A%9B%EF%BC%89/"/>
      <url>/2018/10/01/CF%201029%20F.%20Multicolored%20Markers%EF%BC%88%E6%9A%B4%E5%8A%9B%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1fvs2vhma65j30pa09h74k.jpg" alt=""></p><p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1fvs2vtook3j30oh0gqaa6.jpg" alt=""></p><p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1fvs2w2iqfdj30op056mx8.jpg" alt=""></p><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给a个红色方格，b个紫色方格，要求拼成矩形且红色块或紫色块中有一个也为矩形，看题目里的图应该比较清楚吧</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>写了个最垃圾的做法。。直接暴力枚举0.0</p><p>感觉大家好像有一些妙妙的做法300ms+就过了。。我这个跑了1200ms+啊啊啊啊啊留下了咸鱼的泪水</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="built_in">vector</span>&lt;LL&gt;v;</span><br><span class="line"><span class="function">LL <span class="title">getnum</span><span class="params">(LL a,LL b)</span></span>&#123;</span><br><span class="line">    v.clear();</span><br><span class="line">    LL ans=(a+b+<span class="number">1</span>)*<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span>(LL i=<span class="number">1</span>;i*i&lt;=a;i++)</span><br><span class="line">        <span class="keyword">if</span>(a%i==<span class="number">0</span>)v.push_back(i);</span><br><span class="line">    <span class="keyword">int</span> ji=v.size();</span><br><span class="line">    <span class="keyword">for</span>(LL i=<span class="number">1</span>;i*i&lt;=(a+b);i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>((a+b)%i==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;ji;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(v[j]&lt;=i)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(a/v[j]&lt;=(a+b)/i)</span><br><span class="line">                        ans=min(ans,<span class="number">2</span>*(i+(a+b)/i));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    LL a,b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;a,&amp;b);</span><br><span class="line">    LL res=min(getnum(a,b),getnum(b,a));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,res);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 杂 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>51nod 1004 n^n的末位数字（快速幂）</title>
      <link href="/2018/09/30/51nod%201004%20n%5En%E7%9A%84%E6%9C%AB%E4%BD%8D%E6%95%B0%E5%AD%97%EF%BC%88%E5%BF%AB%E9%80%9F%E5%B9%82%EF%BC%89/"/>
      <url>/2018/09/30/51nod%201004%20n%5En%E7%9A%84%E6%9C%AB%E4%BD%8D%E6%95%B0%E5%AD%97%EF%BC%88%E5%BF%AB%E9%80%9F%E5%B9%82%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>题目来源： Author Ignatius.L (Hdu 1061)<br>基准时间限制：1 秒 空间限制：131072 KB 分值: 5 难度：1级算法题<br>给出一个整数N，输出N^N（N的N次方）的十进制表示的末位数字。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>一个数N（1 &lt;= N &lt;= 10^9）</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出N^N的末位数字</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">13</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><hr><p>水一发快速幂</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="function">LL <span class="title">qpow</span><span class="params">(LL a,LL b,<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    LL ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)&#123;</span><br><span class="line">            ans=(ans*a)%p;</span><br><span class="line">            b--;</span><br><span class="line">        &#125;</span><br><span class="line">        b/=<span class="number">2</span>;</span><br><span class="line">        a=a*a%p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    LL n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,qpow(n,n,<span class="number">10</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 快速幂 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1080 两个数的平方和</title>
      <link href="/2018/09/29/51nod%201080%20%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%9A%84%E5%B9%B3%E6%96%B9%E5%92%8C/"/>
      <url>/2018/09/29/51nod%201080%20%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%9A%84%E5%B9%B3%E6%96%B9%E5%92%8C/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 5 难度：1级算法题 </p><p>给出一个整数N，将N表示为2个整数i与j的平方之和（i &lt;= j)，如果有多种表示，按照i的递增序输出。<br>例如：N = 130，130 = 3^2 + 11^2 = 7^2 + 9^2（注：3^2 + 11^2同11^2 + 3^2算1种）</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>一个数N(1 &lt;= N &lt;= 10^9)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>共K行：每行2个数，i j，表示N = i^2 + j^2（0 &lt;= i &lt;= j)。<br>如果无法分解为2个数的平方和，则输出No Solution</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">130</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">11</span></span><br><span class="line"><span class="symbol">7 </span><span class="number">9</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>水题，最大也就根号n</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> m=<span class="built_in">sqrt</span>(n),flag=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> tmp=<span class="built_in">sqrt</span>(n-i*i);</span><br><span class="line">        <span class="keyword">if</span>(tmp&lt;i)<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span>(tmp*tmp+i*i==n)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,i,tmp);</span><br><span class="line">            flag=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!flag)<span class="built_in">printf</span>(<span class="string">"No Solution\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 杂 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>51nod 1015 水仙花数</title>
      <link href="/2018/09/29/51nod%201015%20%E6%B0%B4%E4%BB%99%E8%8A%B1%E6%95%B0/"/>
      <url>/2018/09/29/51nod%201015%20%E6%B0%B4%E4%BB%99%E8%8A%B1%E6%95%B0/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 5 难度：1级算法题 </p><p>水仙花数是指一个 n 位数 ( n &gt;= 3 )，它的每个位上的数字的 n 次幂之和等于它本身。（例如：1^3 + 5^3 + 3^3 = 153）<br>给出一个整数M，求 &gt;= M的最小的水仙花数。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>一个整数M（10 &lt;= M &lt;= 1000）</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出&gt;= M的最小的水仙花数</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">99</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">153</span></span><br></pre></td></tr></table></figure><hr><p>水。。</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line">    m=max(m,<span class="number">100</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=m;;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>,x=i,a,n;</span><br><span class="line">        <span class="keyword">if</span>(x/<span class="number">1000</span>)n=<span class="number">4</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(x/<span class="number">100</span>)n=<span class="number">3</span>;</span><br><span class="line">        <span class="keyword">while</span>(x)&#123;</span><br><span class="line">            a=x%<span class="number">10</span>;</span><br><span class="line">            sum+=<span class="built_in">pow</span>(a,n);</span><br><span class="line">            x/=<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sum==i)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,i);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>51nod 1082 与7无关的数（打表）</title>
      <link href="/2018/09/29/51nod%201082%20%E4%B8%8E7%E6%97%A0%E5%85%B3%E7%9A%84%E6%95%B0%EF%BC%88%E6%89%93%E8%A1%A8%EF%BC%89/"/>
      <url>/2018/09/29/51nod%201082%20%E4%B8%8E7%E6%97%A0%E5%85%B3%E7%9A%84%E6%95%B0%EF%BC%88%E6%89%93%E8%A1%A8%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>题目来源： 有道难题<br>基准时间限制：1 秒 空间限制：131072 KB 分值: 5 难度：1级算法题</p><p>一个正整数，如果它能被7整除，或者它的十进制表示法中某个位数上的数字为7，则称其为与7相关的数。求所有小于等于N的与7无关的正整数的平方和。<br>例如：N = 8，&lt;= 8与7无关的数包括：1 2 3 4 5 6 8，平方和为：155。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：一个数T，表示后面用作输入测试的数的数量。（1 &lt;= T &lt;= 1000)<br>第2 - T + 1行：每行1个数N。（1 &lt;= N &lt;= 10^6)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>共T行，每行一个数，对应T个测试的计算结果。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">8</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">30</span></span><br><span class="line"><span class="number">55</span></span><br><span class="line"><span class="number">91</span></span><br><span class="line"><span class="number">91</span></span><br><span class="line"><span class="number">155</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>暴力打个表然后输出</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line">LL ans[N];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x%<span class="number">7</span>==<span class="number">0</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">while</span>(x)&#123;</span><br><span class="line">        <span class="keyword">if</span>(x%<span class="number">10</span>==<span class="number">7</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t,n;</span><br><span class="line">    LL res=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">1e6</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(f(i))res+=(LL)i*i;</span><br><span class="line">        ans[i]=res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans[n]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 杂 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>51nod 1083 矩阵取数问题（dp)</title>
      <link href="/2018/09/29/51nod%201083%20%E7%9F%A9%E9%98%B5%E5%8F%96%E6%95%B0%E9%97%AE%E9%A2%98%EF%BC%88dp)/"/>
      <url>/2018/09/29/51nod%201083%20%E7%9F%A9%E9%98%B5%E5%8F%96%E6%95%B0%E9%97%AE%E9%A2%98%EF%BC%88dp)/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 5 难度：1级算法题 </p><p>一个<code>N*N</code>矩阵中有不同的正整数，经过这个格子，就能获得相应价值的奖励，从左上走到右下，只能向下向右走，求能够获得的最大价值。<br>例如：<code>3 * 3</code>的方格。  </p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">1 </span><span class="number">3</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">2</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>能够获得的最大价值为：11。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：N，N为矩阵的大小。(2 &lt;= N &lt;= 500)<br>第2 - N + 1行：每行N个数，中间用空格隔开，对应格子中奖励的价值。（1 &lt;= N[i] &lt;= 10000)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出能够获得的最大价值。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">2</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">11</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>水。。dp</p><p>dp[i][j]表示在(i,j)这个位置能够获得的最大价值</p><p>来自两个方向，状态转移方程为<code>dp[i][j]=max(dp[i][j-1]+a[i][j],dp[i-1][j]+a[i][j])</code></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">505</span>;</span><br><span class="line"><span class="keyword">int</span> dp[N][N],a[N][N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i][j]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            dp[i][j]=max(dp[i][j<span class="number">-1</span>]+a[i][j],dp[i<span class="number">-1</span>][j]+a[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dp[n][n]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> dp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dp </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1087 1 10 100 1000</title>
      <link href="/2018/09/29/51nod%201087%201%2010%20100%201000/"/>
      <url>/2018/09/29/51nod%201087%201%2010%20100%201000/</url>
      <content type="html"><![CDATA[<p>题目来源： Ural 1209<br>基准时间限制：1 秒 空间限制：131072 KB 分值: 5 难度：1级算法题 </p><p>1,10,100,1000…组成序列1101001000…，求这个序列的第N位是0还是1。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：一个数T，表示后面用作输入测试的数的数量。（1 &lt;= T &lt;= 10000)<br>第2 - T + 1行：每行1个数N。（1 &lt;= N &lt;= 10^9)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>共T行，如果该位是0，输出0，如果该位是1，输出1。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>水题暴力一发。。200ms+。。</p><p>然后1，3，6，10……高斯求和再水一发15ms</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t,n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">1</span>,ji=<span class="number">1</span>;</span><br><span class="line">    v.push_back(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">while</span>(x&lt;=<span class="number">1e9</span>)&#123;</span><br><span class="line">        x+=ji;</span><br><span class="line">        v.push_back(x);</span><br><span class="line">        ji++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="keyword">if</span>(find(v.begin(),v.end(),n)!=v.end())<span class="built_in">puts</span>(<span class="string">"1"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t,n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"1"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> tmp=<span class="built_in">sqrt</span>(<span class="number">2</span>*(n<span class="number">-1</span>));</span><br><span class="line">        <span class="keyword">if</span>(tmp*(tmp+<span class="number">1</span>)==<span class="number">2</span>*(n<span class="number">-1</span>))<span class="built_in">puts</span>(<span class="string">"1"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1267 4个数和为0（暴力+二分）</title>
      <link href="/2018/09/29/51nod%201267%204%E4%B8%AA%E6%95%B0%E5%92%8C%E4%B8%BA0%EF%BC%88%E4%BA%8C%E5%88%86%EF%BC%89/"/>
      <url>/2018/09/29/51nod%201267%204%E4%B8%AA%E6%95%B0%E5%92%8C%E4%B8%BA0%EF%BC%88%E4%BA%8C%E5%88%86%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 20 难度：3级算法题</p><p>给出N个整数，你来判断一下是否能够选出4个数，他们的和为0，可以则输出”Yes”，否则输出”No”。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行，1个数N，N为数组的长度(4 &lt;= N &lt;= 1000)<br>第2 - N + 1行：A[i]（-10^9 &lt;= A[i] &lt;= 10^9)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>如果可以选出4个数，使得他们的和为0，则输出”Yes”，否则输出”No”。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">-1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">-5</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">Yes</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>n^4暴力肯定华丽丽的t掉 ╮(￣▽￣””)╭</p><p>学了个妙妙的o(n^2)的方法，先排序，然后枚举前两个数，后两个数在[j+1,n-1]的范围内找，用两个指针，二分的原理，如果当前sum&gt;0说明需要一个小一点的数，那么就取a[–r]，如果sum&lt;0说明要取一个大一点的数，即a[++l]</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1005</span>;</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    sort(a,a+n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;n;j++)&#123;</span><br><span class="line">            <span class="keyword">int</span> l,r,sum;</span><br><span class="line">            l=j+<span class="number">1</span>;r=n<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">                sum=a[i]+a[j]+a[l]+a[r];</span><br><span class="line">                <span class="keyword">if</span>(sum&gt;<span class="number">0</span>)r--;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(sum&lt;<span class="number">0</span>)l++;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 二分 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二分 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1090 3个数和为0（暴力，二分）</title>
      <link href="/2018/09/29/51nod%201090%203%E4%B8%AA%E6%95%B0%E5%92%8C%E4%B8%BA0%EF%BC%88%E6%9A%B4%E5%8A%9B%EF%BC%8C%E4%BA%8C%E5%88%86%EF%BC%89/"/>
      <url>/2018/09/29/51nod%201090%203%E4%B8%AA%E6%95%B0%E5%92%8C%E4%B8%BA0%EF%BC%88%E6%9A%B4%E5%8A%9B%EF%BC%8C%E4%BA%8C%E5%88%86%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 5 难度：1级算法题</p><p>给出一个长度为N的无序数组，数组中的元素为整数，有正有负包括0，并互不相等。从中找出所有和 = 0的3个数的组合。如果没有这样的组合，输出No Solution。如果有多个，按照3个数中最小的数从小到大排序，如果最小的数相等则按照第二小的数排序。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行，1个数N，N为数组的长度(0 &lt;= N &lt;= 1000)<br>第2 - N + 1行：A[i]（-10^9 &lt;= A[i] &lt;= 10^9)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>如果没有符合条件的组合，输出No Solution。<br>如果有多个，按照3个数中最小的数从小到大排序，如果最小的数相等则继续按照第二小的数排序。每行3个数，中间用空格分隔，并且这3个数按照从小到大的顺序排列。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">-3</span></span><br><span class="line"><span class="number">-2</span></span><br><span class="line"><span class="number">-1</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-3</span> <span class="number">0</span> <span class="number">3</span></span><br><span class="line"><span class="number">-3</span> <span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">-2</span> <span class="number">-1</span> <span class="number">3</span></span><br><span class="line"><span class="number">-2</span> <span class="number">0</span> <span class="number">2</span></span><br><span class="line"><span class="number">-1</span> <span class="number">0</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>o(n^3)暴力竟然水过去了？？？好弱。。</p><p><a href="https://leflacon.github.io/2018/09/29/51nod%201267%204%E4%B8%AA%E6%95%B0%E5%92%8C%E4%B8%BA0%EF%BC%88%E4%BA%8C%E5%88%86%EF%BC%89/">1267 4个数和为0</a><br>这个题暴力就水不过去了0.0，所以还是要想优化的，方法类似四个数的和这个题</p><p>先排序，然后枚举第一个数，剩下两个数在[i+1,n-1]里选，用两个指针，二分的原理，如果当前sum&gt;0说明需要一个小一点的数，那么就取a[–r]，如果sum&lt;0说明要取一个大一点的数，即a[++l]</p><p>就有一组数据一直过不去，然后下载了数据发现。。输出No Solution我直接puts(“No”)了。。行吧自闭了</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1005</span>;</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    sort(a,a+n);</span><br><span class="line">    <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-2</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;n<span class="number">-1</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=j+<span class="number">1</span>;k&lt;n;k++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i]+a[j]+a[k]==<span class="number">0</span>)&#123;</span><br><span class="line">                    flag=<span class="number">1</span>;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>,a[i],a[j],a[k]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!flag)<span class="built_in">printf</span>(<span class="string">"No Solution\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1005</span>;</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    sort(a,a+n);</span><br><span class="line">    <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> l,r,sum;</span><br><span class="line">        l=i+<span class="number">1</span>;r=n<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">            sum=a[i]+a[l]+a[r];</span><br><span class="line">            <span class="keyword">if</span>(sum&gt;<span class="number">0</span>)r--;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(sum&lt;<span class="number">0</span>)l++;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                flag=<span class="number">1</span>;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>,a[i],a[l],a[r]);</span><br><span class="line">                l++;r--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!flag)<span class="built_in">puts</span>(<span class="string">"No Solution"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 二分 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二分 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1091 线段的重叠（贪心）</title>
      <link href="/2018/09/29/51nod%201091%20%E7%BA%BF%E6%AE%B5%E7%9A%84%E9%87%8D%E5%8F%A0%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%89/"/>
      <url>/2018/09/29/51nod%201091%20%E7%BA%BF%E6%AE%B5%E7%9A%84%E9%87%8D%E5%8F%A0%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 5 难度：1级算法题</p><p>X轴上有N条线段，每条线段包括1个起点和终点。线段的重叠是这样来算的，[10 20]和[12 25]的重叠部分为[12 20]。<br>给出N条线段的起点和终点，从中选出2条线段，这两条线段的重叠部分是最长的。输出这个最长的距离。如果没有重叠，输出0。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：线段的数量N(2 &lt;= N &lt;= 50000)。<br>第2 - N + 1行：每行2个数，线段的起点和终点。(0 &lt;= s , e &lt;= 10^9)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出最长重复区间的长度。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">5</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">4</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">8</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">7</span></span><br><span class="line"><span class="symbol">7 </span><span class="number">9</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>贪心</p><p>先排序，按左端点从小到大排，如果相同的按右端点大的优先</p><p>然后记录一个maxr，拿样例模拟一下，如果当前的r大于maxr，那么应该是区间交错的情况，比如[1,5][2,8]，那么重叠部分就是maxr-l，更新maxr，反之如果r小于maxr，比如[2,8][3,7]，那么重叠部分就是r-l</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;algorithm&gt;</span></span><br><span class="line"><span class="comment">#include &lt;cstdio&gt;</span></span><br><span class="line"><span class="comment">#include &lt;cstring&gt;</span></span><br><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include &lt;cmath&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">const <span class="keyword">int</span> N=<span class="number">50005</span>;</span><br><span class="line">struct <span class="string">q&#123;</span></span><br><span class="line"><span class="string">    int l,r;</span></span><br><span class="line"><span class="string">&#125;</span><span class="string">q[N]</span>;</span><br><span class="line">bool cmp(struct <span class="keyword">q</span> q1,struct <span class="keyword">q</span> q2)&#123;</span><br><span class="line">    <span class="keyword">if</span>(q1.l!=q2.l)<span class="keyword">return</span> q1.l&lt;q2.l;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> q1.r&gt;q2.r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> main()&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    scanf(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)scanf(<span class="string">"%d%d"</span>,&amp;<span class="string">q[i]</span>.l,&amp;<span class="string">q[i]</span>.r);</span><br><span class="line">    <span class="keyword">sort</span>(<span class="keyword">q</span>,<span class="keyword">q</span>+n,cmp);</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>,maxr=<span class="string">q[0]</span>.r;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(maxr&gt;<span class="string">q[i]</span>.r)ans=max(ans,<span class="string">q[i]</span>.r-<span class="string">q[i]</span>.l);</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            ans=max(ans,maxr-<span class="string">q[i]</span>.l);</span><br><span class="line">            maxr=<span class="string">q[i]</span>.r;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 贪心 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1182 完美字符串</title>
      <link href="/2018/09/29/51nod%201182%20%E5%AE%8C%E7%BE%8E%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2018/09/29/51nod%201182%20%E5%AE%8C%E7%BE%8E%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      <content type="html"><![CDATA[<p>题目来源： Facebook Hacker Cup选拔<br>基准时间限制：1 秒 空间限制：131072 KB 分值: 5 难度：1级算法题</p><p>约翰认为字符串的完美度等于它里面所有字母的完美度之和。每个字母的完美度可以由你来分配，不同字母的完美度不同，分别对应一个1-26之间的整数。</p><p>约翰不在乎字母大小写（也就是说字母A和a的完美度相同）。给定一个字符串，输出它的最大可能的完美度。例如：dad，你可以将26分配给d，25分配给a，这样整个字符串完美度为77。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>输入一个字符串S(S的长度 &lt;= 10000)，S中没有除字母外的其他字符。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>由你将1-26分配给不同的字母，使得字符串S的完美度最大，输出这个完美度。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">dad</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">77</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>水。。贪心，出现越多的字母分配越大的数字</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[<span class="number">10005</span>];</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">26</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">    <span class="keyword">int</span> len=<span class="built_in">strlen</span>(s),ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++)a[i]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]&gt;=<span class="string">'A'</span>&amp;&amp;s[i]&lt;=<span class="string">'Z'</span>)a[s[i]-<span class="string">'A'</span>]++;</span><br><span class="line">        <span class="keyword">else</span> a[s[i]-<span class="string">'a'</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a,a+<span class="number">26</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++)ans+=a[i]*(i+<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 贪心 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1283 最小周长</title>
      <link href="/2018/09/29/51nod%201283%20%E6%9C%80%E5%B0%8F%E5%91%A8%E9%95%BF/"/>
      <url>/2018/09/29/51nod%201283%20%E6%9C%80%E5%B0%8F%E5%91%A8%E9%95%BF/</url>
      <content type="html"><![CDATA[<p>题目来源： Codility<br>基准时间限制：1 秒 空间限制：131072 KB 分值: 5 难度：1级算法题 </p><p>一个矩形的面积为S，已知该矩形的边长都是整数，求所有满足条件的矩形中，周长的最小值。例如：S = 24，那么有{1 24} {2 12} {3 8} {4 6}这4种矩形，其中{4 6}的周长最小，为20。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>输入1个数S(1 &lt;= S &lt;= 10^9)。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出最小周长。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">24</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">20</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>水。。从根号n开始找就行</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> a=<span class="built_in">sqrt</span>(n);</span><br><span class="line">    <span class="keyword">while</span>(n%a!=<span class="number">0</span>)a--;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,<span class="number">2</span>*a+<span class="number">2</span>*(n/a));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 贪心 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1284 2 3 5 7的倍数（容斥）</title>
      <link href="/2018/09/29/51nod%201284%202%203%205%207%E7%9A%84%E5%80%8D%E6%95%B0%EF%BC%88%E5%AE%B9%E6%96%A5%EF%BC%89/"/>
      <url>/2018/09/29/51nod%201284%202%203%205%207%E7%9A%84%E5%80%8D%E6%95%B0%EF%BC%88%E5%AE%B9%E6%96%A5%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 5 难度：1级算法题 </p><p>给出一个数N，求1至N中，有多少个数不是2 3 5 7的倍数。 例如N = 10，只有1不是2 3 5 7的倍数。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>输入1个数N(1 &lt;= N &lt;= 10^18)。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出不是2 3 5 7的倍数的数共有多少。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>容斥水题</p><p>是2，3，5，7的倍数的数的个数为：</p><p><code>n/2+n/3+n/5+n/7-n/6-n/10-n/14-n/15-n/21-n/35+n/30+n/42+n/70+n/105-n/210</code></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    LL n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">    LL ans=n/<span class="number">2</span>+n/<span class="number">3</span>+n/<span class="number">5</span>+n/<span class="number">7</span>-n/<span class="number">6</span>-n/<span class="number">10</span>-n/<span class="number">14</span>-n/<span class="number">15</span>-n/<span class="number">21</span>-n/<span class="number">35</span>+n/<span class="number">30</span>+n/<span class="number">42</span>+n/<span class="number">70</span>+n/<span class="number">105</span>-n/<span class="number">210</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,n-ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 容斥 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1289 大鱼吃小鱼（stack）</title>
      <link href="/2018/09/29/51nod%201289%20%E5%A4%A7%E9%B1%BC%E5%90%83%E5%B0%8F%E9%B1%BC%EF%BC%88stack%EF%BC%89/"/>
      <url>/2018/09/29/51nod%201289%20%E5%A4%A7%E9%B1%BC%E5%90%83%E5%B0%8F%E9%B1%BC%EF%BC%88stack%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>题目来源： Codility<br>基准时间限制：1 秒 空间限制：131072 KB 分值: 5 难度：1级算法题 </p><p>有N条鱼每条鱼的位置及大小均不同，他们沿着X轴游动，有的向左，有的向右。游动的速度是一样的，两条鱼相遇大鱼会吃掉小鱼。从左到右给出每条鱼的大小和游动的方向（0表示向左，1表示向右）。问足够长的时间之后，能剩下多少条鱼？</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：1个数N，表示鱼的数量(1 &lt;= N &lt;= 100000)。<br>第2 - N + 1行：每行两个数A[i], B[i]，中间用空格分隔，分别表示鱼的大小及游动的方向(1 &lt;= A[i] &lt;= 10^9，B[i] = 0 或 1，0表示向左，1表示向右）。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出1个数，表示最终剩下的鱼的数量。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">0</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">0</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">0</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>用栈模拟</p><p>向右游的鱼入栈，向左的鱼判断吃或被吃</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt;s;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,c,d;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> ans=n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;c,&amp;d);</span><br><span class="line">        <span class="keyword">if</span>(d==<span class="number">1</span>)s.push(c);</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">while</span>(!s.empty())&#123;</span><br><span class="line">                <span class="keyword">if</span>(s.top()&lt;c)&#123;</span><br><span class="line">                    s.pop();</span><br><span class="line">                    ans--;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    ans--;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 模拟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟 </tag>
            
            <tag> stl </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1305 Pairwise Sum and Divide（思维）</title>
      <link href="/2018/09/29/51nod%201305%20Pairwise%20Sum%20and%20Divide/"/>
      <url>/2018/09/29/51nod%201305%20Pairwise%20Sum%20and%20Divide/</url>
      <content type="html"><![CDATA[<p>题目来源： HackerRank<br>基准时间限制：1 秒 空间限制：131072 KB 分值: 5 难度：1级算法题</p><p>有这样一段程序，fun会对整数数组A进行求值，其中Floor表示向下取整：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fun(A)</span><br><span class="line">    <span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i = <span class="number">1</span> <span class="built_in">to</span> A.<span class="built_in">length</span></span><br><span class="line">        <span class="keyword">for</span> j = i+<span class="number">1</span> <span class="built_in">to</span> A.<span class="built_in">length</span></span><br><span class="line">            <span class="built_in">sum</span> = <span class="built_in">sum</span> + Floor((A[i]+A[j])/(A[i]*A[j])) </span><br><span class="line">    <span class="literal">return</span> <span class="built_in">sum</span></span><br></pre></td></tr></table></figure><p>给出数组A，由你来计算fun(A)的结果。例如：A = {1, 4, 1}，fun(A) = [5/4] + [2/1] + [5/4] = 1 + 2 + 1 = 4。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：1个数N，表示数组A的长度(1 &lt;= N &lt;= 100000)。<br>第2 - N + 1行：每行1个数A[i]（1 &lt;= A[i] &lt;= 10^9)。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出fun(A)的计算结果。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">4</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>暴力是不可能的</p><p>首先考虑把<code>Floor((A[i]+A[j])/(A[i]*A[j]))</code>转化成<code>Floor(1/A[i]+1/A[j])</code>，然后就会发现如果a[i]=1那么1/a[i]就是答案加一，总共会加n-1次，如果a[i]=2，只有a[j]=2同时成立的时候，才会有答案加一，其余情况向下取整都是0</p><p>所以统计a[i]=1的个数，每次加n-1，统计a[i]=2的个数num，最后加上C(num,2)</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,num=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    LL ans=<span class="number">0</span>,c;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;c);</span><br><span class="line">        <span class="keyword">if</span>(c==<span class="number">1</span>)ans+=n<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(c==<span class="number">2</span>)num++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans+num*(num<span class="number">-1</span>)/<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1344 走格子</title>
      <link href="/2018/09/29/51nod%201344%20%E8%B5%B0%E6%A0%BC%E5%AD%90/"/>
      <url>/2018/09/29/51nod%201344%20%E8%B5%B0%E6%A0%BC%E5%AD%90/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 5 难度：1级算法题 </p><p>有编号1-n的n个格子，机器人从1号格子顺序向后走，一直走到n号格子，并需要从n号格子走出去。机器人有一个初始能量，每个格子对应一个整数A[i]，表示这个格子的能量值。如果A[i] &gt; 0，机器人走到这个格子能够获取A[i]个能量，如果A[i] &lt; 0，走到这个格子需要消耗相应的能量，如果机器人的能量 &lt; 0，就无法继续前进了。问机器人最少需要有多少初始能量，才能完成整个旅程。</p><p>例如：n = 5。{1，-2，-1，3，4} 最少需要2个初始能量，才能从1号走到5号格子。途中的能量变化如下3 1 0 3 7。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：1个数n，表示格子的数量。(1 &lt;= n &lt;= 50000)<br>第2 - n + 1行：每行1个数A[i]，表示格子里的能量值(-1000000000 &lt;= A[i] &lt;= 1000000000)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出1个数，对应从1走到n最少需要多少初始能量。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">-2</span></span><br><span class="line"><span class="number">-1</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>水题，贪心思路，找到那个最小的前缀和即可</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    LL sum=<span class="number">0</span>,c,ans=INF;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;c);</span><br><span class="line">        sum+=c;</span><br><span class="line">        ans=min(sum,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ans&lt;<span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,-ans);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 贪心 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1347 旋转字符串</title>
      <link href="/2018/09/29/51nod%201347%20%E6%97%8B%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2018/09/29/51nod%201347%20%E6%97%8B%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 5 难度：1级算法题</p><p>S[0…n-1]是一个长度为n的字符串，定义旋转函数Left(S)=S[1…n-1]+S[0].比如S=”abcd”,Left(S)=”bcda”.一个串是对串当且仅当这个串长度为偶数，前半段和后半段一样。比如”abcabc”是对串,”aabbcc”则不是。</p><p>现在问题是给定一个字符串，判断他是否可以由一个对串旋转任意次得到。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：给出一个字符串（字符串非空串，只包含小写字母，长度不超过1000000）</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>对于每个测试用例，输出结果占一行，如果能，输出YES，否则输出NO。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">aa</span></span><br><span class="line"><span class="attribute">ab</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">YES</span></span><br><span class="line"><span class="literal">NO</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>一开始以为要枚举旋转前前半段和后半段的分界线，然后判断是否有相同的情况，但是这样1e6太长了啊。。拿abcabc旋转一下，bcabca，cabcab，可以发现一个对串不管怎么旋转都还是个对串，发现这点问题就解决了，直接判断对串即可</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">1000005</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>,s)!=EOF)&#123;</span><br><span class="line">        <span class="keyword">int</span> len=<span class="built_in">strlen</span>(s);</span><br><span class="line">        <span class="keyword">if</span>(len&amp;<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> flag=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len/<span class="number">2</span>;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(s[i]!=s[len/<span class="number">2</span>+i])&#123;</span><br><span class="line">                    <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">                    flag=<span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag)<span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 杂 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维 </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1381 硬币游戏</title>
      <link href="/2018/09/29/51nod%201381%20%E7%A1%AC%E5%B8%81%E6%B8%B8%E6%88%8F%20%20/"/>
      <url>/2018/09/29/51nod%201381%20%E7%A1%AC%E5%B8%81%E6%B8%B8%E6%88%8F%20%20/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 5 难度：1级算法题</p><p>有一个简单但是很有趣的游戏。在这个游戏中有一个硬币还有一张桌子，这张桌子上有很多平行线（如下图所示）。两条相邻平行线之间的距离是1，硬币的半径是R，然后我们来抛硬币到桌子上，抛下之后硬币有时候会和一些直线相交（相切的情况也算是相交），有时候不会。</p><p>请你来计算一下抛一次硬币之后，该硬币和直线相交数目的期望。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第一行给出一个整数T，表示有T组数据(1&lt;=T&lt;=10000)。<br>第2行到T+1，每行给出一个整数R。(0&lt; R &lt;= 10,000,000,000)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>对于每一个数据，在一行中输出答案的整数部分即可。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>反正只要求期望的整数部分，所以圆的直径就是期望值</p><p>官方证明严谨些</p><p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fvq6ar34pkj30of0e23yq.jpg" alt=""></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    LL r;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123; </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;r);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,r&lt;&lt;<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 杂 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>51nod 2020 排序相减（6174猜想）</title>
      <link href="/2018/09/28/51nod%202020%20%E6%8E%92%E5%BA%8F%E7%9B%B8%E5%87%8F%EF%BC%886174%E7%8C%9C%E6%83%B3%EF%BC%89/"/>
      <url>/2018/09/28/51nod%202020%20%E6%8E%92%E5%BA%8F%E7%9B%B8%E5%87%8F%EF%BC%886174%E7%8C%9C%E6%83%B3%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>题目来源： syu练习题</p><p>基准时间限制：1 秒 空间限制：131072 KB 分值: 5 难度：1级算法题</p><p>“排序相减”操作是指对于任意一个四位数n，将四个数字分别进行顺序排序和逆序排序，得到两个数取相减后结果的绝对值n1，然后继续将n1中的四个数字进行顺序排序和逆序排序，得到两个数取相减后结果的绝对值n2,以此类推，最后总会得到一个数字黑洞，无法跳出。</p><p>例如:样例2中4176 = 6532 - 2356</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第一行输入一个整数T，表示数据组数（1&lt;T&lt;10000）；<br>第二行输入一个正整数n(1000&lt;=n&lt;=9999)和一个正整数  k（1&lt;=k&lt;=100）,表示操作次数；  </p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>对于每组数据，输出对于开始的数据n在第k次“排序相减”后结果绝对值。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">1234 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">3562 </span><span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">8352</span></span><br><span class="line"><span class="number">4176</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>水之后随便试了几个样例，发现循环多次之后黑洞竟然都是6174，然后就去查了一下，百度百科还真有这玩意儿</p><p>6174猜想 ，1955年，卡普耶卡(D.R.Kaprekar)研究了对四位数的一种变换：任给出四位数k0,用它的四个数字由大到小重新排列成一个四位数m,再减去它的反序数rev(m),得出数k1=m-rev(m),然后，继续对k1重复上述变换，得数k2.如此进行下去，卡普耶卡发现，无论k0是多大的四位数， 只要四个数字不全相同，最多进行7次上述变换，就会出现四位数6174.</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">4</span>];</span><br><span class="line">    a[<span class="number">3</span>]=n%<span class="number">10</span>;</span><br><span class="line">    a[<span class="number">2</span>]=(n/<span class="number">10</span>)%<span class="number">10</span>;</span><br><span class="line">    a[<span class="number">1</span>]=(n/<span class="number">100</span>)%<span class="number">10</span>;</span><br><span class="line">    a[<span class="number">0</span>]=n/<span class="number">1000</span>;</span><br><span class="line">    sort(a,a+<span class="number">4</span>);</span><br><span class="line">    n=a[<span class="number">0</span>]*<span class="number">1000</span>+a[<span class="number">1</span>]*<span class="number">100</span>+a[<span class="number">2</span>]*<span class="number">10</span>+a[<span class="number">3</span>];</span><br><span class="line">    m=a[<span class="number">3</span>]*<span class="number">1000</span>+a[<span class="number">2</span>]*<span class="number">100</span>+a[<span class="number">1</span>]*<span class="number">10</span>+a[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123; </span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line">        <span class="keyword">while</span>(k--)&#123;</span><br><span class="line">            f();</span><br><span class="line">            <span class="keyword">if</span>(n&lt;m)swap(n,m);</span><br><span class="line">            n=n-m;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;n&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1675 序列变换（莫比乌斯函数）</title>
      <link href="/2018/09/26/51nod%201675%20%E5%BA%8F%E5%88%97%E5%8F%98%E6%8D%A2%EF%BC%88%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%87%BD%E6%95%B0%EF%BC%89/"/>
      <url>/2018/09/26/51nod%201675%20%E5%BA%8F%E5%88%97%E5%8F%98%E6%8D%A2%EF%BC%88%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%87%BD%E6%95%B0%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><img src="https://ws4.sinaimg.cn/large/006tNbRwly1fvnd357f1uj30i50f0mxh.jpg" alt=""></p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">1</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">7</span></span><br></pre></td></tr></table></figure><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>虽然学了莫比乌斯但是没写过题就不咋会用(⌒-⌒; )</p><p><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fvndqvpab4j30ln0hqwf2.jpg" alt=""></p><p><a href="http://vfleaking.blog.uoj.ac/slide/87#/" rel="external nofollow noopener noreferrer" target="_blank">炫酷反演魔术</a> 这篇还没看懂0.0 mark一下</p><p>然后丢个官方题解吧</p><p><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fvnd4q6skaj30jl0ebmxv.jpg" alt=""></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[N],b[N],prime[N],num[N],mu[N],n;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mobius</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="literal">false</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">    mu[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> ji=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;N;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[i])&#123;</span><br><span class="line">            prime[ji++]=i;</span><br><span class="line">            mu[i]=<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;ji;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i*prime[j]&gt;N)<span class="keyword">break</span>;</span><br><span class="line">            vis[i*prime[j]]=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>)&#123;</span><br><span class="line">                mu[i*prime[j]]=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> mu[i*prime[j]]=-mu[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">solve</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    LL res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=x;i&lt;=n;i+=x)num[b[a[i]]]++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=x;i&lt;=n;i+=x)res+=num[a[b[i]]];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=x;i&lt;=n;i+=x)num[b[a[i]]]--;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    mobius();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;b[i]);</span><br><span class="line">    LL ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)ans+=mu[i]*solve(i);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 容斥 </tag>
            
            <tag> 莫比乌斯函数 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 6304 Chiaki Sequence Revisited（二分）</title>
      <link href="/2018/09/26/hdu%206304%20Chiaki%20Sequence%20Revisited%EF%BC%88%E4%BA%8C%E5%88%86%EF%BC%89/"/>
      <url>/2018/09/26/hdu%206304%20Chiaki%20Sequence%20Revisited%EF%BC%88%E4%BA%8C%E5%88%86%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fvlvzchzytj30rh06d0st.jpg" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>数列定义如上，求前n项和</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>打个表 然后oeis一下 然后。。就没有然后了0.0<br><img src="https://ws4.sinaimg.cn/large/006tNbRwly1fvlwi38cgrj30ll0380sp.jpg" alt=""></p><p>先记录一下数字i的出现次数</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">数字<span class="number"> 1 </span><span class="number"> 2 </span><span class="number"> 3 </span><span class="number"> 4 </span><span class="number"> 5 </span><span class="number"> 6 </span><span class="number"> 7 </span><span class="number"> 8 </span><span class="number"> 9 </span><span class="number"> 10 </span><span class="number"> 11 </span><span class="number"> 12 </span><span class="number"> 13 </span><span class="number"> 14 </span><span class="number"> 15 </span> ……</span><br><span class="line">次数<span class="number"> 2 </span><span class="number"> 2 </span><span class="number"> 1 </span><span class="number"> 3 </span><span class="number"> 1 </span><span class="number"> 2 </span><span class="number"> 1 </span><span class="number"> 4 </span><span class="number"> 1 </span><span class="number"> 2 </span> <span class="number"> 1 </span> <span class="number"> 3 </span> <span class="number"> 1 </span> <span class="number"> 2 </span> <span class="number"> 1 </span>  ……</span><br><span class="line">最后出现该数字的</span><br><span class="line">项数<span class="number"> 2 </span><span class="number"> 4 </span><span class="number"> 5 </span><span class="number"> 8 </span><span class="number"> 9 </span><span class="number"> 11 </span>12<span class="number"> 16 </span>17<span class="number"> 19 </span><span class="number"> 20 </span><span class="number"> 23 </span><span class="number"> 21 </span><span class="number"> 23 </span><span class="number"> 24 </span></span><br><span class="line"></span><br><span class="line">1次: (1),3,5,7,9,... 公差为２（1特例先不管）</span><br><span class="line">2次: 2,6,10,14,... 公差为４</span><br><span class="line">3次: 4,12,20,28,... 公差为８</span><br><span class="line">4次: 8,24,40,56... 公差为16</span><br></pre></td></tr></table></figure><p>可以发现i的出现次数为<img src="https://ws3.sinaimg.cn/large/006tNbRwly1fvmu7indfyj304d00t3ya.jpg" alt="">（1除外）</p><p>可以推出最后出现该数字的项数，即下文f(i)，比如最后出现数字5的项数为8，即f(5)=5+2+1=8，联系上述规律代码很好理解</p><p>sum(i)表示数字i出现完为止的和是多少，就是高斯求和一下乘个倍数，注意大数取模所以除以二要改成乘以inv2</p><p>先二分小于等于n的fun(x)的最大的x是多少，那么多出的部分全都是<code>x+1</code>，所以多出部分答案为<code>(n-fun(x)-1)*(x+1)+1</code>（1多出现了一次）</p><p>然后再加上前面的sum(x)即可</p><p>精度问题wa了好多发</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> LL inv2=<span class="number">5e8</span>+<span class="number">4</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> p=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(LL &amp;x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch=getchar();x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(;ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>;ch=getchar());</span><br><span class="line">    <span class="keyword">for</span>(;ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>;ch=getchar())x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">f</span><span class="params">(LL x)</span></span>&#123;</span><br><span class="line">    LL res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x)&#123;</span><br><span class="line">        res+=x;</span><br><span class="line">        x&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">sum</span><span class="params">(LL x)</span></span>&#123;</span><br><span class="line">    LL res=<span class="number">0</span>,tmp=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(x)&#123;</span><br><span class="line">        res=(res+x%p*((x+<span class="number">1</span>)%p)%p*inv2%p*tmp%p)%p;</span><br><span class="line">        x&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">        tmp=tmp*<span class="number">2</span>%p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    LL n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        read(n);</span><br><span class="line">        LL l=<span class="number">1</span>,r=n,m;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line">            m=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(f(m)+<span class="number">1</span>&lt;=n)l=m+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> r=m<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        LL ans=((n-f(r)<span class="number">-1</span>)%p)*((r+<span class="number">1</span>)%p)%p;</span><br><span class="line">        ans=(ans+sum(r)+<span class="number">1</span>)%p;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 二分 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推公式 </tag>
            
            <tag> 逆元 </tag>
            
            <tag> 二分 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 6301 Distinct Values（贪心，set）</title>
      <link href="/2018/09/25/hdu%206301%20Distinct%20Values%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%8Cset%EF%BC%89/"/>
      <url>/2018/09/25/hdu%206301%20Distinct%20Values%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%8Cset%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>Chiaki has an array of n positive integers. You are told some facts about the array: for every two elements ai and aj in the subarray al..r <code>(l≤i&lt;j≤r)</code>, ai≠aj holds.<br>Chiaki would like to find a lexicographically minimal array which meets the facts.</p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>构造一个长为n的整数序列，给m个要求，每个要求给出一个[l,r]区间，区间内任意两个数不相等，求满足这m个限制且字典序最小的序列</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>如果没有限制，那么构造的序列显然就是n个1，假如[l,r]有限制，那么[l,r]内就应该被替换成2，3，4，5，……就是贪心的思路，但是。。我不知道咋写。。还是看标程去了，标程真的好妙啊(つД`)ノ</p><p>首先如果大区间包含小区间的话，小区间相当于没有用，所以q[i]数组存的是以i为左端点的最大右端点位子</p><p>然后从q[1]开始处理，q[i]即当前需要处理到的位子，l,r两个指针，r表示当前已经处理到的位子，l右移更新set中待填入的元素，如果<code>r&lt;q[i]</code>那么就从集合中取出数字构造答案</p><p>l右移更新那段真的妙，我只能靠纸上模拟。。mark以后再想想吧</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;algorithm&gt;</span></span><br><span class="line"><span class="comment">#include &lt;cstdio&gt;</span></span><br><span class="line"><span class="comment">#include &lt;cstring&gt;</span></span><br><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include &lt;cmath&gt;</span></span><br><span class="line"><span class="comment">#include &lt;set&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">const <span class="keyword">int</span> N=<span class="number">100005</span>;</span><br><span class="line"><span class="keyword">int</span> <span class="string">q[N]</span>,ans[N];</span><br><span class="line">set&lt;<span class="keyword">int</span>&gt;<span class="keyword">s</span>;</span><br><span class="line"><span class="keyword">int</span> main()&#123;</span><br><span class="line">    <span class="keyword">int</span> t,n,<span class="keyword">m</span>,l,r;</span><br><span class="line">    scanf(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        s.clear();</span><br><span class="line">        scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;<span class="keyword">m</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="string">q[i]</span>=i;</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">m</span>--)&#123;</span><br><span class="line">            scanf(<span class="string">"%d%d"</span>,&amp;l,&amp;r);</span><br><span class="line">            <span class="string">q[l]</span>=max(<span class="string">q[l]</span>,r);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)s.insert(i);</span><br><span class="line">        l=<span class="number">1</span>;r=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(r&gt;<span class="string">q[i]</span>)<span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">while</span>(l&lt;i)&#123;</span><br><span class="line">                s.insert(ans[l]);</span><br><span class="line">                l++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span>(r&lt;<span class="string">q[i]</span>)&#123;</span><br><span class="line">                ans[++r]=*s.begin();</span><br><span class="line">                s.erase(ans[r]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)<span class="keyword">printf</span>(<span class="string">"%d "</span>,ans[i]);</span><br><span class="line">        <span class="keyword">printf</span>(<span class="string">"%d\n"</span>,ans[n]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 贪心 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 贪心 </tag>
            
            <tag> stl </tag>
            
            <tag> 构造 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 6300 Triangle Partition（构造）</title>
      <link href="/2018/09/25/hdu%206300%20Triangle%20Partition%EF%BC%88%E6%9E%84%E9%80%A0%EF%BC%89/"/>
      <url>/2018/09/25/hdu%206300%20Triangle%20Partition%EF%BC%88%E6%9E%84%E9%80%A0%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>Chiaki has 3n points p1,p2,…,p3n. It is guaranteed that no three points are collinear.<br>Chiaki would like to construct n disjoint triangles where each vertex comes from the 3n points.</p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给出<code>3*n</code>个点，保证没有三点共线，要求构造n个互不相交的三角形</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>水题。。因为说了没有三点共线，所以直接按照x排个序，三个三个的取形成的三角形肯定不相交</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1005</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sjx</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,y,num;</span><br><span class="line">&#125;a[N*<span class="number">3</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(struct sjx s1,struct sjx s2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> s1.x&lt;s2.x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t,n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>*n;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a[i].x,&amp;a[i].y);</span><br><span class="line">            a[i].num=i+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(a,a+<span class="number">3</span>*n,cmp);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>*n<span class="number">-1</span>;i++)<span class="built_in">printf</span>(<span class="string">"%d "</span>,a[i].num);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a[<span class="number">3</span>*n<span class="number">-1</span>].num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 杂 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 构造 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 6299 Balanced Sequence（贪心）</title>
      <link href="/2018/09/25/hdu%206299%20Balanced%20Sequence%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%89/"/>
      <url>/2018/09/25/hdu%206299%20Balanced%20Sequence%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>Chiaki has n strings s1,s2,…,sn consisting of ‘(‘ and ‘)’. A string of this type is said to be balanced:</p><ul><li>if it is the empty string</li><li>if A and B are balanced, AB is balanced,</li><li>if A is balanced, (A) is balanced.</li></ul><p>Chiaki can reorder the strings and then concatenate them get a new string t. Let f(t) be the length of the longest balanced subsequence (not necessary continuous) of t. Chiaki would like to know the maximum value of f(t) for all possible t.</p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>定义合法括号序列是：()  ()()   (())</p><p>给n个包含’(‘和’)’的字符串，可以重新调整这n个串的顺序，求最长合法序列</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>写了一发过了样例然后wa了，好真实。。然后改啊改又wa了好几发。。更真实了0.0最后a了但是思路和第一遍完全一样啊摔◡ ヽ(`Д´)ﾉ ┻━┻</p><p>对于任意一个串来说，刨去合法的序列，最后剩下的一定是)))(((这种形式，所以记录一下剩下的左右括号数，然后贪心的交换序列来使这些括号能更多的和别的串的括号组合</p><p>对于任意两个处理完的串贪心策略如下：如果k1的左括号比右括号多，而k2的左括号比右括号少，比如))(((((和))))))((，那么肯定是把k1放前面，反之k2在前，这样二者中间才能形成更多括号，同理如果k1，k2都是左括号少右括号多，即))))))(((和)))))))))))((，那么左括号多的在前面，如果k1，k2都是左括号多右括号少，即))((((((((((和)))((((((((，右括号少的在前面</p><p>排序之后然后l记录当前已有的左括号数，然后和后续的右括号配对，每次更新l，具体见代码，还是很好理解的</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100005</span>;</span><br><span class="line"><span class="keyword">char</span> s[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">kh</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(struct kh k1,struct kh k2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(k1.l&gt;k1.r&amp;&amp;k2.l&lt;=k2.r)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(k1.l&lt;=k1.r&amp;&amp;k2.l&gt;k2.r)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(k1.l&lt;=k1.r&amp;&amp;k2.l&lt;=k2.r)<span class="keyword">return</span> k1.l&gt;k2.l;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> k1.r&lt;k2.r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t,n,l,r;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">            <span class="keyword">int</span> len=<span class="built_in">strlen</span>(s);</span><br><span class="line">            l=<span class="number">0</span>;r=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;len;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(s[j]==<span class="string">'('</span>)l++;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(s[j]==<span class="string">')'</span>&amp;&amp;l&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                    ans++;l--;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> r++;</span><br><span class="line">            &#125;</span><br><span class="line">            a[i].l=l;</span><br><span class="line">            a[i].r=r;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(a,a+n,cmp);</span><br><span class="line">        l=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">            l+=a[i<span class="number">-1</span>].l;</span><br><span class="line">            <span class="keyword">if</span>(a[i].r&gt;l)&#123;</span><br><span class="line">                ans+=l;l=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                ans+=a[i].r;</span><br><span class="line">                l-=a[i].r;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans*<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 贪心 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 6298 Maximum Multiple</title>
      <link href="/2018/09/24/hdu%206298%20Maximum%20Multiple/"/>
      <url>/2018/09/24/hdu%206298%20Maximum%20Multiple/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6298" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=6298</a></p><p>Given an integer n, Chiaki would like to find three positive integers x, y and z such that: n=x+y+z, x∣n, y∣n, z∣n and xyz is maximum.</p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给一个整数n，找到三个整数x，y，z满足n=x+y+z, x∣n, y∣n, z∣n ，且<code>x*y*z</code>max</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>把n看成单位1，因为要满足n=x+y+z, x∣n, y∣n, z∣n，所以其实也就下面这三种情况：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>=<span class="number">1</span>/<span class="number">3</span>+<span class="number">1</span>/<span class="number">3</span>+<span class="number">1</span>/<span class="number">3</span></span><br><span class="line"><span class="number">1</span>=<span class="number">1</span>/<span class="number">2</span>+<span class="number">1</span>/<span class="number">4</span>+<span class="number">1</span>/<span class="number">4</span></span><br><span class="line"><span class="number">1</span>=<span class="number">1</span>/<span class="number">2</span>+<span class="number">1</span>/<span class="number">3</span>+<span class="number">1</span>/<span class="number">6</span></span><br></pre></td></tr></table></figure><p>又因为如果n能被3整除的话，那么第一种得到的结果肯定比第三种大，所以就不用判断第三种了，先第一种在第二种即可</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="keyword">if</span>(n%<span class="number">3</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            LL ans=(LL)n*n*n/<span class="number">27</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n%<span class="number">4</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            LL ans=(LL)n*n*n/<span class="number">32</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>51nod 1557 两个集合（STL set）</title>
      <link href="/2018/09/24/51nod%201557%20%E4%B8%A4%E4%B8%AA%E9%9B%86%E5%90%88%EF%BC%88STL%20set%EF%BC%89/"/>
      <url>/2018/09/24/51nod%201557%20%E4%B8%A4%E4%B8%AA%E9%9B%86%E5%90%88%EF%BC%88STL%20set%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>题目来源： CodeForces 468 B. Two Sets<a href="http://codeforces.com/contest/468/problem/B" rel="external nofollow noopener noreferrer" target="_blank">http://codeforces.com/contest/468/problem/B</a></p><p>基准时间限制：1 秒 空间限制：131072 KB 分值: 40 难度：4级算法题 </p><p>小X有n个互不相同的整数： p1,p2,…,pn 。他想把这些整数分到两个集合A和B里边。但是要符合下面两个条件。</p><p>·        如果x属于A，那么a-x也肯定属于A。</p><p>·        如果x属于B，那么b-x也肯定属于B。</p><p>判断一下是否存在一种方案来分配这些数字到集合A，B中。</p><p>注意：如果一个集合为空也是可以的。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>单组测试数据。<br>第一行有三个整数n,a,b (1≤n≤10^5; 1≤a,b≤10^9)。<br>第二行有n个不一样的整数 p1,p2,…,pn (1≤pi≤10^9).  </p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>如果可行，那么输出YES，否则输出NO。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">4 </span><span class="number">5</span> <span class="number">9</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">YES</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>这题评论区好像有很多种做法，但是感觉都好麻烦啊。。我喜欢那种只要想通了写一点点代码就行的题 _ (:з」∠) _</p><p>思路如下：</p><p>因为属于a集合的话那么x,a-x相当于被绑定成封闭的一对了，放哪其实无所谓，所以一开始直白的写了个如果任何数既没有a-x又没有b-x就输出no，然后wa了五个测试点。。</p><p>因为还有一种情况，a-x和b-x都存在的时候，如果x属于a，那么a-x属于a，且x不属于b，b-(a-x)不属于b属于a，同理，若x属于b，会得到a-(b-x)属于b</p><p>所以如果a-x和b-x都存在的时候，b-(a-x)和a-(b-x)必须有一项存在</p><p>然后还是wa了发现是自己愚蠢的漏写了<code>x=*it</code>这种致命的话(T ^ T)我咋老是干这种事。。</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;s,v;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);ios_base::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> n,a,b,x;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">        s.insert(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator it;</span><br><span class="line">    <span class="keyword">for</span>(it=s.begin();it!=s.end();it++)&#123;</span><br><span class="line">        x=*it;</span><br><span class="line">        <span class="keyword">if</span>(!s.count(a-x)&amp;&amp;!s.count(b-x))&#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(s.count(a-x)&amp;&amp;s.count(b-x))&#123;</span><br><span class="line">            <span class="keyword">if</span>(!s.count(a-b+x)&amp;&amp;!s.count(b-a+x))&#123;</span><br><span class="line">                <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 杂 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stl </tag>
            
            <tag> 思维 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1791 合法括号子段（dp）</title>
      <link href="/2018/09/23/51nod%201791%20%E5%90%88%E6%B3%95%E6%8B%AC%E5%8F%B7%E5%AD%90%E6%AE%B5/"/>
      <url>/2018/09/23/51nod%201791%20%E5%90%88%E6%B3%95%E6%8B%AC%E5%8F%B7%E5%AD%90%E6%AE%B5/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 40 难度：4级算法题 </p><p>有一个括号序列，现在要计算一下它有多少非空子段是合法括号序列。</p><p>合法括号序列的定义是：</p><p>1.空序列是合法括号序列。</p><p>2.如果S是合法括号序列，那么(S)是合法括号序列。<br>3.如果A和B都是合法括号序列，那么AB是合法括号序列。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>多组测试数据。<br>第一行有一个整数T（1&lt;=T&lt;=1100000），表示测试数据的数量。<br>接下来T行，每一行都有一个括号序列，是一个由’(‘和’)’组成的非空串。<br>所有输入的括号序列的总长度不超过1100000。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出T行，每一行对应一个测试数据的答案。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line">(</span><br><span class="line">()</span><br><span class="line">()()</span><br><span class="line">(()</span><br><span class="line">(())</span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>dp[i]表示以i结尾的子段数量</p><p>手动模拟几个</p><p>状态转移方程为dp[i]=dp[pos[i]+1]+1，pos[i]表示左括号i配对的右括号所在的位置，pos初始化为-1</p><p>要从后往前dp，因为右括号无所谓，但是一旦遇到左括号，就开始有值</p><p>答案为所有dp之和</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1000005</span>;</span><br><span class="line"><span class="keyword">int</span> dp[N],pos[N];</span><br><span class="line"><span class="keyword">char</span> s[N];</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt;sk;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t,n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">        n=<span class="built_in">strlen</span>(s);</span><br><span class="line">        <span class="keyword">while</span>(!sk.empty())sk.pop();</span><br><span class="line">        LL ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            dp[i]=<span class="number">0</span>;pos[i]=<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i]==<span class="string">'('</span>)&#123;</span><br><span class="line">                sk.push(i);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(sk.empty())<span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span> pos[sk.top()]=i;sk.pop();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(pos[i]!=<span class="number">-1</span>)&#123;</span><br><span class="line">                dp[i]=dp[pos[i]+<span class="number">1</span>]+<span class="number">1</span>;</span><br><span class="line">                ans+=dp[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> dp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dp </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1574 排列转换（CF 584 E.Anton and Ira）</title>
      <link href="/2018/09/23/51nod%201574%20%E6%8E%92%E5%88%97%E8%BD%AC%E6%8D%A2%EF%BC%88CF%20584%20E.Anton%20and%20Ira%EF%BC%89/"/>
      <url>/2018/09/23/51nod%201574%20%E6%8E%92%E5%88%97%E8%BD%AC%E6%8D%A2%EF%BC%88CF%20584%20E.Anton%20and%20Ira%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>题目来源： CodeForces <a href="http://codeforces.com/contest/584/problem/E" rel="external nofollow noopener noreferrer" target="_blank">http://codeforces.com/contest/584/problem/E</a></p><p>基准时间限制：1 秒 空间限制：131072 KB 分值: 40 难度：4级算法题</p><p>现在有两个长度为n的排列p和s。要求通过交换使得p变成s。交换 pi 和 pj 的代价是|i-j|。要求使用最少的代价让p变成s。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>单组测试数据。<br>第一行有一个整数n (1≤n≤200000)，表示排列的长度。<br>第二行有n个范围是1到n的整数，表示排列p。每个整数只出现一次。<br>第三行有n个范围是1到n的整数，表示排列s。每个整数只出现一次。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出一个整数，表示从排列p变到s最少要多少代价。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">2</span> <span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">2</span> <span class="number">4</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>下面这个来自评论区的思路我一直都没咋理解。。可能是放假静不下心吧。。先mark着（鸽巢原理）</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">猜了一下结论,居然对了..........</span><br><span class="line">具体操作是:</span><br><span class="line">假设排列s是<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,...,n</span><br><span class="line">k为排列p中最大的 没有放到正确位置的数,k的位置为pos</span><br><span class="line">k的右边一定有一个数x&lt;=pos(因为&lt;=pos的数有pos个,不可能全挤在pos<span class="number">-1</span>个位置里)</span><br><span class="line">交换k和x,两个数都离目标更近了且没有走远路.</span><br><span class="line">重复这个步骤</span><br></pre></td></tr></table></figure><p>我的思路如下：</p><p>一个数c要到它的目标位置，最短代价就是i和a[c]的距离，所以只要证明每个数都只需要移动abs(i-a[c])最终可以使整个数列达到要求</p><p>那么递推的想，对于两个数来说，如果他们是刚好需要互换位子的，直接换即可</p><p>对于三个数1，2，3来说，如果他们都不在自己的位子上，比如2，3，1，那么2要向右1个单位，3向右1个单位，1向左2个单位，1向左的可以借助2，3向右的完成，所以总移动距离是4</p><p>对于n个都不在各自位子上的数来说，无论如何所有需要向左的都可以借助需要向右的数来完成，而满足他们不会走多余的路</p><p>又因为这题代价是双方交换，所以最后的答案是总移动距离除以2</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);ios_base::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> n,c;</span><br><span class="line">    LL ans=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;c;</span><br><span class="line">        a[c]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;c;</span><br><span class="line">        ans+=<span class="built_in">abs</span>(i-a[c]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;(ans&gt;&gt;<span class="number">1</span>)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 贪心 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 鸽巢原理 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1580 铺管道（CF 518 F.Pasha and Pipe）</title>
      <link href="/2018/09/22/51nod%201580%20%E9%93%BA%E7%AE%A1%E9%81%93%EF%BC%88CF%20518%20F.Pasha%20and%20Pipe%EF%BC%89/"/>
      <url>/2018/09/22/51nod%201580%20%E9%93%BA%E7%AE%A1%E9%81%93%EF%BC%88CF%20518%20F.Pasha%20and%20Pipe%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>题目来源： CodeForces <a href="http://codeforces.com/contest/518/problem/F" rel="external nofollow noopener noreferrer" target="_blank">http://codeforces.com/contest/518/problem/F</a></p><p>基准时间限制：1.5 秒 空间限制：131072 KB 分值: 40 难度：4级算法题 </p><p>现在要在一个城市中铺设管道。</p><p>这个城市是由 n×m 小方格组成的。每一个小方格要么是空的（管道可以铺设在上面），要么是实的（管道不能铺在上面）。空的用’.’表示，实的用’#’表示。</p><p>管道铺设的规则如下：</p><p>·        整条管道是形状是宽度为1的折线；</p><p>·        管道只能铺设在空的格子上面；</p><p>·        管道的两个端点只能在边缘上，但是不能在角上；</p><p>·        管道最多只能转两个弯（90度）；</p><p>·        在管道上的格子有且只能有两个是在边缘上的；</p><p>·        如果管道是一条直线，那么他的两个端点必须是落在不同的边上；</p><p>·        对于管道上的非边缘格子，每一个格子会有且仅有两个相邻的其它格子在管道上；</p><p>·        对于管道上处于边缘的格子，仅有一个相邻的格子处于管道上。</p><p>下面有一些合法的管道铺设例子：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">....#           ....#            .*..#</span><br><span class="line">*****           ****.            .***.</span><br><span class="line">..#..           ..#*.            ..#*.</span><br><span class="line">#...#           #..*#            #..*#</span><br><span class="line">.....           ...*.            ...*.</span><br></pre></td></tr></table></figure><p>下面是一些非法铺设的例子：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.**.#            *...#            .*.*#</span><br><span class="line">.....            ****.            .*.*.</span><br><span class="line">..#..            ..#*.            .*#*.</span><br><span class="line">#...#            #..*#            #*.*#</span><br><span class="line">.....            ...*.            .***.</span><br></pre></td></tr></table></figure><p>这些例子中管道用’*’表示。</p><p>现在给定城市的地图，请计算一下有多少种方法铺设管道。</p><p>样例解释：</p><p>在这个样例中，有三种方法铺设管道（管道用’*’表示）。</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.*.        .*.        ...</span><br><span class="line">.*#        **#        **#</span><br><span class="line">.*.        ...        .*.</span><br></pre></td></tr></table></figure><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>单组测试数据。<br>第一行有两个整数 n,m (2≤n,m≤2000)，表示城市地图的高和宽。<br>接下来n行，每一行有m个字母，表示城市地图。<br>如果字符是’.’，表示该格子是空的，管道可以铺设。<br>如果字符是’#’，表示该格子是实的，管道不能铺设。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出一个整数，表示管道铺设方案的种数。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span> <span class="number">3</span></span><br><span class="line">...</span><br><span class="line">..#</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>好题，放空了好久好久才解决。。好难啊不会。。然后就没出息的找题解去了。。◡ ヽ(`Д´)ﾉ ┻━┻</p><p>看了大佬的代码才知道原来这种题是这么做的<a href="https://www.cnblogs.com/dancer16/p/7351701.html" rel="external nofollow noopener noreferrer" target="_blank">https://www.cnblogs.com/dancer16/p/7351701.html</a>妙啊妙啊</p><p>就大佬博文里的那四种情况，直上直下，一个折，两个折同向，两个折反向，然后再把图转向做一遍，思路很简单但是代码不好写啊。。</p><p>a[i][j]false表示空，true表示实</p><p>先预处理d[i][j]和u[i][j]两个数组，分别表示t[1][j]-&gt;t[i][j]下达和t[n][j]-&gt;t[i][j]上达</p><p>因为起点只能在边缘上，折线也不是很复杂，所以枚举起点然后累加方法数，具体见代码注释，要是自己写好像还是写不出来。。mark</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;cstdio&gt;</span><br><span class="line">#include &lt;cstring&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;cmath&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">#define <span class="symbol">LL</span> long long</span><br><span class="line">const int <span class="symbol">N</span>=<span class="number">2005</span>;</span><br><span class="line">int n,m;</span><br><span class="line">char s[<span class="symbol">N</span>];</span><br><span class="line">bool a[<span class="symbol">N</span>][<span class="symbol">N</span>],b[<span class="symbol">N</span>][<span class="symbol">N</span>],d[<span class="symbol">N</span>][<span class="symbol">N</span>],u[<span class="symbol">N</span>][<span class="symbol">N</span>];</span><br><span class="line"><span class="symbol">LL</span> ans=<span class="number">0</span>;</span><br><span class="line">void solve(bool t[][<span class="symbol">N</span>],int nn,int mm,int flag)&#123;</span><br><span class="line">    memset(d,false,sizeof(d));</span><br><span class="line">    memset(u,false,sizeof(u));</span><br><span class="line">    for(int i=<span class="number">1</span>;i&lt;=nn;i++)</span><br><span class="line">        //down，t[i<span class="number">-1</span>][j]-&gt;t[i][j]</span><br><span class="line">        //其实是t[<span class="number">1</span>][j]-&gt;t[i][j]，合法为<span class="number">0</span></span><br><span class="line">        for(int j=<span class="number">1</span>;j&lt;=mm;j++)</span><br><span class="line">            d[i][j]=d[i<span class="number">-1</span>][j]|t[i][j];</span><br><span class="line">    for(int i=nn;i&gt;<span class="number">0</span>;i--)</span><br><span class="line">        //up，t[i+<span class="number">1</span>][j]-&gt;t[i][j]</span><br><span class="line">        //其实是t[n][j]-&gt;t[i][j]，合法为<span class="number">0</span></span><br><span class="line">        for(int j=<span class="number">1</span>;j&lt;=mm;j++)</span><br><span class="line">            u[i][j]=u[i+<span class="number">1</span>][j]|t[i][j];</span><br><span class="line">    for(int i=<span class="number">2</span>;i&lt;nn;i++)&#123;</span><br><span class="line">        int tmp=<span class="number">0</span>;</span><br><span class="line">        if(!t[i][<span class="number">1</span>]&amp;&amp;flag)tmp=<span class="number">1</span>;</span><br><span class="line">        d[i][<span class="number">1</span>]=u[i][<span class="number">1</span>]=<span class="number">1</span>;//管道上处于边缘的格子，仅有一个相邻的格子处于管道上</span><br><span class="line">        for(int j=<span class="number">2</span>;j&lt;mm;j++)&#123;</span><br><span class="line">            if(t[i][j])&#123;</span><br><span class="line">                tmp=<span class="number">0</span>;continue;</span><br><span class="line">            &#125;</span><br><span class="line">            ans+=((!d[i][j])+(!u[i][j]))*tmp;</span><br><span class="line">            //上[右……右]下，下[右……右]上，上[右……右]上，下[右……右]下，</span><br><span class="line">            //[右……右]下，[右……右]上</span><br><span class="line">            ans+=(!d[i][j]&amp;&amp;!u[i][j<span class="number">-1</span>])+(!u[i][j]&amp;&amp;!d[i][j<span class="number">-1</span>]);</span><br><span class="line">            //上右上，下右下</span><br><span class="line">            tmp+=(!d[i][j<span class="number">-1</span>])+(!u[i][j<span class="number">-1</span>]);</span><br><span class="line">            //算能到达第i行的部分数配合下一次循环使用</span><br><span class="line">        &#125;</span><br><span class="line">        if(!t[i][mm]&amp;&amp;flag)</span><br><span class="line">            ans+=tmp+(!d[i][mm<span class="number">-1</span>])+(!u[i][mm<span class="number">-1</span>]);</span><br><span class="line">        //下[右……右]，上[右……右]，左右直达</span><br><span class="line">    &#125;</span><br><span class="line">    if(flag)&#123;//左右直达在别的里面求了，所以不用</span><br><span class="line">        for(int j=<span class="number">2</span>;j&lt;mm;j++)ans+=(!d[nn][j]);//上下直达</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">    scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    for(int i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        scanf(<span class="string">"%s"</span>,s+<span class="number">1</span>);</span><br><span class="line">        for(int j=<span class="number">1</span>;j&lt;=m;j++)a[i][j]=s[j]==<span class="string">'#'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    solve(a,n,m,<span class="number">1</span>);</span><br><span class="line">    //把图转过来再来一遍</span><br><span class="line">    for(int i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        for(int j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            b[j][i]=a[i][j];</span><br><span class="line">    solve(b,m,n,<span class="number">0</span>);</span><br><span class="line">    printf(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    return <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 图论 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>51nod 1799 二分答案（二分，阶乘分块打表）</title>
      <link href="/2018/09/22/51nod%201799%20%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88%EF%BC%88%E4%BA%8C%E5%88%86%EF%BC%8C%E9%98%B6%E4%B9%98%E5%88%86%E5%9D%97%E6%89%93%E8%A1%A8%EF%BC%89/"/>
      <url>/2018/09/22/51nod%201799%20%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88%EF%BC%88%E4%BA%8C%E5%88%86%EF%BC%8C%E9%98%B6%E4%B9%98%E5%88%86%E5%9D%97%E6%89%93%E8%A1%A8%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 40 难度：4级算法题</p><p>lyk最近在研究二分答案类的问题。<br>对于一个有n个互不相同的数且从小到大的正整数数列a（其中最大值不超过n），若要找一个在a中出现过的数字m，一个正确的二分程序是这样子的：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">l</span>=1; <span class="attribute">r</span>=n; mid=(l+r)/2;</span><br><span class="line"><span class="keyword">while</span> (l&lt;=r)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (a[mid]&lt;=m) <span class="attribute">l</span>=mid+1; <span class="keyword">else</span> <span class="attribute">r</span>=mid-1;</span><br><span class="line">    mid=(l+r)/2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终a[r]一定等于m。<br>但是这个和谐的程序被熊孩子打乱了。<br>熊孩子在一开始就将a数组打乱顺序。（共有n!种可能）<br>lyk想知道最终r=k的期望。<br>由于小数点非常麻烦，所以你只需输出将答案乘以n!后对1000000007取模就可以了。  </p><p>在样例中，共有2个数，被熊孩子打乱后的数列共有两种可能(1,2)或者(2,1)，其中(1,2)经过上述操作后r=1，(2,1)经过上述操作后r=0。r=k的期望为0.5，<code>0.5*2!=1</code>，所以输出1。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>3个整数n,m,k(1&lt;=m&lt;=n&lt;=10^9,0&lt;=k&lt;=n)。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>一行表示答案</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">2 </span><span class="number">1</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>刚开始读题读了好久，一直没读懂，后来才发现没理解第一句话，“有n个互不相同的数且从小到大的正整数数列a（其中最大值不超过n）”，其实就是1-n这n个数。。</p><p>那就可以做了，运用一下二分的原理，如果确定最后要走到k那个位置的话，其实二分的路径实际上是已经确定了的，就是一个mid点跳到另一个mid点…最后到的mid点是k，所以只要求出大于k的位置的mid的个数和小于k的位置的mid的个数</p><p>对于小于等于k的位置的small个数来说，可以填比m小或等于m的数，即有A(m,small)种情况，对于大于k的位置的big个数来说，可以填比m大的数，即有A(n-m,big)种情况</p><p>对于剩下非mid的位置来说，就是求剩余数字的阶乘</p><p>这题求阶乘也要用技巧，毕竟1e9太大了，所以要分块打表，1e7到1e9，每隔1e7打一个，这样求大点的数阶乘可以在1e7内次循环求出，代码也放在下面了</p><p>还有一个注意点就是乘的时候要强制类型转化成LL，否则会wa</p><p>这个题做了很久才想通。。还是我太菜了见的太少了啊T^T不过还是有收获哒(・ω・)ノ</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> p=<span class="number">1000000007</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">LL ans=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> n=<span class="number">1e7</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">ans=ans*i%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="keyword">while</span>(n&lt;=<span class="number">1e9</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n+<span class="number">1</span>;i&lt;=n+<span class="number">1e7</span>;i++)&#123;</span><br><span class="line">ans=(LL)ans*i%p;</span><br><span class="line">&#125;</span><br><span class="line">n+=<span class="number">1e7</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;cstdio&gt;</span><br><span class="line">#include &lt;cstring&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;cmath&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">#define LL long long </span><br><span class="line">const int p=<span class="number">1000000007</span>;</span><br><span class="line">const int N=<span class="number">10000000</span>;</span><br><span class="line">const int num[]=&#123;<span class="number">1</span>,<span class="number">682498929</span>,<span class="number">491101308</span>,<span class="number">76479948</span>,<span class="number">723816384</span>,</span><br><span class="line">    <span class="number">67347853</span>,<span class="number">27368307</span>,<span class="number">625544428</span>,<span class="number">199888908</span>,<span class="number">888050723</span>,</span><br><span class="line">    <span class="number">927880474</span>,<span class="number">281863274</span>,<span class="number">661224977</span>,<span class="number">623534362</span>,<span class="number">970055531</span>,</span><br><span class="line">    <span class="number">261384175</span>,<span class="number">195888993</span>,<span class="number">66404266</span>,<span class="number">547665832</span>,<span class="number">109838563</span>,</span><br><span class="line">    <span class="number">933245637</span>,<span class="number">724691727</span>,<span class="number">368925948</span>,<span class="number">268838846</span>,<span class="number">136026497</span>,</span><br><span class="line">    <span class="number">112390913</span>,<span class="number">135498044</span>,<span class="number">217544623</span>,<span class="number">419363534</span>,<span class="number">500780548</span>,</span><br><span class="line">    <span class="number">668123525</span>,<span class="number">128487469</span>,<span class="number">30977140</span>,<span class="number">522049725</span>,<span class="number">309058615</span>,</span><br><span class="line">    <span class="number">386027524</span>,<span class="number">189239124</span>,<span class="number">148528617</span>,<span class="number">940567523</span>,<span class="number">917084264</span>,</span><br><span class="line">    <span class="number">429277690</span>,<span class="number">996164327</span>,<span class="number">358655417</span>,<span class="number">568392357</span>,<span class="number">780072518</span>,</span><br><span class="line">    <span class="number">462639908</span>,<span class="number">275105629</span>,<span class="number">909210595</span>,<span class="number">99199382</span>,<span class="number">703397904</span>,</span><br><span class="line">    <span class="number">733333339</span>,<span class="number">97830135</span>,<span class="number">608823837</span>,<span class="number">256141983</span>,<span class="number">141827977</span>,</span><br><span class="line">    <span class="number">696628828</span>,<span class="number">637939935</span>,<span class="number">811575797</span>,<span class="number">848924691</span>,<span class="number">131772368</span>,</span><br><span class="line">    <span class="number">724464507</span>,<span class="number">272814771</span>,<span class="number">326159309</span>,<span class="number">456152084</span>,<span class="number">903466878</span>,</span><br><span class="line">    <span class="number">92255682</span>,<span class="number">769795511</span>,<span class="number">373745190</span>,<span class="number">606241871</span>,<span class="number">825871994</span>,</span><br><span class="line">    <span class="number">957939114</span>,<span class="number">435887178</span>,<span class="number">852304035</span>,<span class="number">663307737</span>,<span class="number">375297772</span>,</span><br><span class="line">    <span class="number">217598709</span>,<span class="number">624148346</span>,<span class="number">671734977</span>,<span class="number">624500515</span>,<span class="number">748510389</span>,</span><br><span class="line">    <span class="number">203191898</span>,<span class="number">423951674</span>,<span class="number">629786193</span>,<span class="number">672850561</span>,<span class="number">814362881</span>,</span><br><span class="line">    <span class="number">823845496</span>,<span class="number">116667533</span>,<span class="number">256473217</span>,<span class="number">627655552</span>,<span class="number">245795606</span>,</span><br><span class="line">    <span class="number">586445753</span>,<span class="number">172114298</span>,<span class="number">193781724</span>,<span class="number">778983779</span>,<span class="number">83868974</span>,</span><br><span class="line">    <span class="number">315103615</span>,<span class="number">965785236</span>,<span class="number">492741665</span>,<span class="number">377329025</span>,<span class="number">847549272</span>,<span class="number">698611116</span>&#125;;</span><br><span class="line">int getnum(int n)&#123;</span><br><span class="line">    if(!n)return <span class="number">1</span>;</span><br><span class="line">    int tmp=num[n/N];</span><br><span class="line">    for(int i=n/N*N+<span class="number">1</span>;i&lt;=n;i++)tmp=(LL)tmp*i%p;</span><br><span class="line">    return tmp;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">    int n,m,k,l,r,mid,big,small;</span><br><span class="line">    int ans=<span class="number">1</span>;</span><br><span class="line">    scanf(<span class="string">"%d%d%d"</span>,&amp;n,&amp;m,&amp;k);</span><br><span class="line">    l=<span class="number">1</span>;r=n;big=small=<span class="number">0</span>;</span><br><span class="line">    while(l&lt;=r)&#123;</span><br><span class="line">        mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">        if(mid&lt;=k)&#123;</span><br><span class="line">            l=mid+<span class="number">1</span>;small++;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            r=mid<span class="number">-1</span>;big++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    for(int i=m-small+<span class="number">1</span>;i&lt;=m;i++)ans=(LL)ans*i%p;</span><br><span class="line">    for(int i=n-m-big+<span class="number">1</span>;i&lt;=n-m;i++)ans=(LL)ans*i%p;</span><br><span class="line">    ans=(LL)ans*getnum(n-big-small)%p;</span><br><span class="line">    printf(<span class="string">"%d<span class="subst">\n</span>"</span>,ans);</span><br><span class="line">    return <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二分 </tag>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1717 好数（找规律）</title>
      <link href="/2018/09/20/51nod%201717%20%E5%A5%BD%E6%95%B0%EF%BC%88%E6%89%BE%E8%A7%84%E5%BE%8B%EF%BC%89/"/>
      <url>/2018/09/20/51nod%201717%20%E5%A5%BD%E6%95%B0%EF%BC%88%E6%89%BE%E8%A7%84%E5%BE%8B%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 40 难度：4级算法题 </p><p>有n个数  a[1],a[2],…,a[n]开始都是0<br>现在进行操作 t从1~n依次增加<br>每次把下标时t的倍数的数都反转（0变成1,1变成0）<br>如果最后a[i]为0，那么称此时的i为好数。<br>现在对于给定的n，求这时候的好数个数。<br>n&lt;=1e15</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>一个数n，表示有n个数。（n&lt;=1e15）</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>一个数，表示好数的个数。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>先模拟一下，跑一下下面这段代码，找“好数”的规律</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">bool</span> a[<span class="number">105</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(a,<span class="literal">false</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">105</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;<span class="number">105</span>;j+=i)a[j]=!a[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">105</span>;i++)</span><br><span class="line">        <span class="keyword">if</span>(a[i])<span class="built_in">printf</span>(<span class="string">"%d "</span>,i);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出<code>1 4 9 16 25 36 49 64 81 100</code></p><p>可以发现有且只有完全平方数不是好数</p><p>那么答案就是<code>n-sqrt(n)</code></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    LL n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(LL)(n-<span class="built_in">sqrt</span>(n)+<span class="number">1</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 杂 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>51nod 1637 幸运数字转换（死循环）</title>
      <link href="/2018/09/20/1637%20%E5%B9%B8%E8%BF%90%E6%95%B0%E5%AD%97%E8%BD%AC%E6%8D%A2%EF%BC%88%E6%AD%BB%E5%BE%AA%E7%8E%AF%EF%BC%89/"/>
      <url>/2018/09/20/1637%20%E5%B9%B8%E8%BF%90%E6%95%B0%E5%AD%97%E8%BD%AC%E6%8D%A2%EF%BC%88%E6%AD%BB%E5%BE%AA%E7%8E%AF%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>题目来源： CodeForces<br>基准时间限制：1 秒 空间限制：131072 KB 分值: 40 难度：4级算法题  </p><p>比得喜欢幸运数字。这里所说的幸运数字是由4和7组成的正整数。比如，数字47，744，4是幸运数字，而5，17，467就不是。</p><p>比得有一个没有前导0的n位数的整数。他用了一个数组d来表示这个整数。数组的第一个编号从数字的最高位开始，下标从1开始。比得想对d进行以下操作k次：</p><p>查找最小的x(1≤x＜n)使得 dx ＝ 4 且 dx+1 ＝ 7 ，如果x是奇数，则让 dx ＝ dx+1 ＝ 4 ，否则，让 dx ＝ dx+1 ＝ 7 。</p><p>如果没有找到相应的x，则此次操作作为最后一次操作，数组保持不变。</p><p>现在，给定初始数字作为数组d，和数字k。帮助比得计算k次操作后的结果。</p><p>样例解释：<br>在样例中，数组的变化如下：</p><p>4727447→4427447→4427477→4427447→4427477。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>单组测试数据<br>第一行包含两个整数n和k（1≤n≤10^5，0≤k≤10^9）。<br>分别表示给定数字的位数，和操作的次数。<br>第二行有一个n位数的整数，代表数组d。第1位数代表d1。<br>题目保证数字的第1位数不为0。  </p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>共一行，代表对数组d进行k次操作后的结果。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">7 </span><span class="number">4</span></span><br><span class="line"><span class="number">4727447</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4427477</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>1e9那么大的k，不是循环结就是死循环了，这题就是死循环，题目中那个样例解释已经提示了，其实就是只要出现447或者477，两个就会一直卡在那里循环来循环去，所以对于47来说，如果变成44就判断下一位是不是7，如果变成77就判断前一位是不是4，如果出现这两种的话判断一下剩下的k来决定最终是447还是477</p><p>第一遍先字符串读入然后存入数组了，200ms+，后来改成直接char，15ms</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100005</span>;</span><br><span class="line"><span class="keyword">char</span> a[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,a+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n&amp;&amp;k!=<span class="number">0</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]==<span class="string">'4'</span>&amp;&amp;a[i+<span class="number">1</span>]==<span class="string">'7'</span>)&#123;</span><br><span class="line">            k--;</span><br><span class="line">            <span class="keyword">if</span>(i&amp;<span class="number">1</span>)&#123;</span><br><span class="line">                a[i+<span class="number">1</span>]=<span class="string">'4'</span>;</span><br><span class="line">                <span class="keyword">if</span>(a[i+<span class="number">2</span>]==<span class="string">'7'</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(k&amp;<span class="number">1</span>)a[i+<span class="number">1</span>]=<span class="string">'7'</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                a[i]=<span class="string">'7'</span>;</span><br><span class="line">                <span class="keyword">if</span>(a[i<span class="number">-1</span>]==<span class="string">'4'</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(k&amp;<span class="number">1</span>)a[i]=<span class="string">'4'</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,a+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 模拟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1829 函数（斯特林数）</title>
      <link href="/2018/09/20/1829%20%E5%87%BD%E6%95%B0/"/>
      <url>/2018/09/20/1829%20%E5%87%BD%E6%95%B0/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 40 难度：4级算法题 </p><p>想知道f:A-&gt;B这个函数（其中|A|=n, |B|=m）的所有映射关系要使B的每个元素都要被A的一个元素覆盖到。<br>数字可能很大你只要输出方案数模1,000,000,007即可。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>一共一行两个数，n和m。（1&lt;=n,m&lt;=1,000,000)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>一共一行包含一个方案数。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">2 </span><span class="number">2</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>其实就是n个不同球放到m个不同盒子中，且任意一个盒子都不为空，求方法数的问题</p><p>先把问题转化一下，n个不同球放到m个相同盒子中，且任意一个盒子都不为空，那么这显然是个第二类斯特林数S(n,m)</p><p>关于斯特林数百度百科讲的很详细 <a href="https://baike.baidu.com/item/%E6%96%AF%E7%89%B9%E6%9E%97%E6%95%B0/4938529" rel="external nofollow noopener noreferrer" target="_blank">斯特林数</a></p><p>放段斯特林数直接dp递推的代码，当然这个复杂度and内存做题肯定是不行的。。只是记录一下这个dp思路而已</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> dp[N][N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)&#123;</span><br><span class="line">        dp[i][i]=<span class="number">1</span>;</span><br><span class="line">        dp[i][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Stirling</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            dp[i][j]=dp[i<span class="number">-1</span>][j<span class="number">-1</span>]+dp[i<span class="number">-1</span>][j]*j;</span><br><span class="line">    <span class="keyword">return</span> dp[n][m];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    init();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,Stirling(n,m));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后再回到原问题，n个不同球放到m个不同盒子中，答案已经出来了<code>ans=m!*S(n,m)</code></p><p><img src="/2018/09/20/1829 函数/1.jpg" alt=""></p><p><code>ans=∑(-1)^i*c(m,i)*(m-i)^n {i=0~m}</code></p><p>组合数要用逆元求，逆元要先线性与处理，如果直接跑循环求组合数的话会T</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> LL p=<span class="number">1000000007</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1000005</span>;</span><br><span class="line">LL mul[N],inv[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;<span class="comment">//线性求逆元</span></span><br><span class="line">    mul[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;N; i++)</span><br><span class="line">        mul[i]=mul[i<span class="number">-1</span>]*i%p;</span><br><span class="line">    inv[<span class="number">0</span>]=inv[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;N; i++)</span><br><span class="line">        inv[i]=(LL)(p-p/i)*inv[p%i]%p;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;N; i++)</span><br><span class="line">        inv[i]=inv[i<span class="number">-1</span>]*inv[i]%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">qpow</span><span class="params">(LL a,LL b,LL p)</span></span>&#123;</span><br><span class="line">    LL ans=<span class="number">1</span>;</span><br><span class="line">    a%=p;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)&#123;</span><br><span class="line">            ans=ans*a%p;</span><br><span class="line">            b--;</span><br><span class="line">        &#125;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">        a=a*a%p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">C</span><span class="params">(LL n,LL m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> mul[n]*inv[m]%p*inv[n-m]%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    init();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    LL ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(LL i=<span class="number">0</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i&amp;<span class="number">1</span>)ans=(ans-C(m,i)*qpow(m-i,n,p)%p+p)%p;</span><br><span class="line">        <span class="keyword">else</span> ans=(ans+C(m,i)*qpow(m-i,n,p)%p)%p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推公式 </tag>
            
            <tag> 逆元 </tag>
            
            <tag> 组合数 </tag>
            
            <tag> 斯特林数 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1946 特殊表示法（斐波那契性质，卡输入输出）</title>
      <link href="/2018/09/20/51nod%201946%20%E7%89%B9%E6%AE%8A%E8%A1%A8%E7%A4%BA%E6%B3%95%EF%BC%88%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%80%A7%E8%B4%A8%EF%BC%8C%E5%8D%A1%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%EF%BC%89/"/>
      <url>/2018/09/20/51nod%201946%20%E7%89%B9%E6%AE%8A%E8%A1%A8%E7%A4%BA%E6%B3%95%EF%BC%88%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%80%A7%E8%B4%A8%EF%BC%8C%E5%8D%A1%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 40 难度：4级算法题 </p><p>众所周知，斐波那契数列是人们常用来讨论的一个递推式系数为整数而具有无理数递推式的数列。</p><p>F[0]=1;F[1]=1;F[2]=2;F[3]=3;F[4]=5;…..</p><p>下面规定，对一个数n，它的特殊表示法为    <code>a[1]*F[1]+a[2]*F[2]+...a[n]*F[n]</code>。其中a[1..n]为一个取值0/1的数列。（不包括F[0]）<br>同时，规定a数列不存在两个相邻的1，并且a[n]=1。<br>现在给两个数A和B的特殊表示法，需要你求出A+B的特殊表示法。<br>保证n,m&lt;=1,000,000  </p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第一行一个数n，表示A的特殊表示法的长度。<br>第二行n个数，表示A的特殊表示法。<br>第三行一个数m，表示B的特殊表示法的长度。<br>第四行m个数，表示B的特殊表示法。  </p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>第一行一个数L，表示A+B的特殊表示法的长度。<br>第二行L个数，表示A+B的特殊表示法。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>整整t了一个晚上一个早上加一个中午啊啊啊，一开始没思路就去看题解了，然后题解给了斐波那契的三个性质，说按照性质模拟即可，我只会用两个，然后t了，scanf改成读入挂read()，又t了，然后开始怀疑人生。。是不是因为没用第三个性质所以卡不过去？？然后就陷入了。。无边无际的发呆之中。。这个题卡的我TAT完全刷新了对输入输出的认识，总之最后读入直接getchar，输出putchar，ac。。</p><p>下面讲思路：</p><p>题解是说利用斐波那契的这三个性质：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">F[i]+F[i+<span class="number">1</span>]=F[i+<span class="number">2</span>]</span><br><span class="line"><span class="number">2</span>f(i)=F(i<span class="number">-2</span>)+F(i+<span class="number">1</span>)</span><br><span class="line">∑f(i)&#123;i=<span class="number">1</span>~n&#125;=f(n+<span class="number">2</span>)<span class="number">-1</span></span><br></pre></td></tr></table></figure><p>做这题之前还真没发现斐波那契数列有第三个性质，推导过程如下：</p><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">f</span><span class="params">(<span class="number">0</span>)</span>+<span class="title">f</span><span class="params">(<span class="number">1</span>)</span>=<span class="title">f</span><span class="params">(<span class="number">2</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">f</span><span class="params">(<span class="number">1</span>)</span>+<span class="title">f</span><span class="params">(<span class="number">2</span>)</span>=<span class="title">f</span><span class="params">(<span class="number">3</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">f</span><span class="params">(<span class="number">2</span>)</span>+<span class="title">f</span><span class="params">(<span class="number">3</span>)</span>=<span class="title">f</span><span class="params">(<span class="number">4</span>)</span></span></span><br><span class="line"><span class="function">...</span></span><br><span class="line"><span class="function"><span class="title">f</span><span class="params">(n-<span class="number">2</span>)</span>+<span class="title">f</span><span class="params">(n-<span class="number">1</span>)</span>=<span class="title">f</span><span class="params">(n)</span></span></span><br><span class="line"><span class="function"><span class="title">f</span><span class="params">(n-<span class="number">1</span>)</span>+<span class="title">f</span><span class="params">(n)</span>=<span class="title">f</span><span class="params">(n+<span class="number">1</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">f</span><span class="params">(n)</span>+<span class="title">f</span><span class="params">(n+<span class="number">1</span>)</span>=<span class="title">f</span><span class="params">(n+<span class="number">2</span>)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">叠加抵消得∑<span class="title">f</span><span class="params">(i)</span>&#123;<span class="title">i</span>=1~<span class="title">n</span>&#125;=<span class="title">f</span><span class="params">(n+<span class="number">2</span>)</span>-<span class="title">f</span><span class="params">(<span class="number">1</span>)</span>，即∑<span class="title">f</span><span class="params">(i)</span>=<span class="title">f</span><span class="params">(n+<span class="number">2</span>)</span>-1，</span></span><br></pre></td></tr></table></figure><p>但是事实是。。我用不来啊。。懵逼</p><p>所以就利用第一二个性质，因为特殊表示只有0，1存在，所以相加后的数组，有2出现的话都是要处理掉的，问题在于怎么处理能不遗漏且最简</p><p>先从前往后把2处理一遍，处理方法用性质1和2，每次处理都要更新n，因为如果有操作i+1之类的话，最后的长度会变大，然后对于a[1]，a[2]来说需要特判，这里有个问题0.0，我后来看了榜里别人的代码，在对于a[2]=3的处理中，我认为应该是下面这样，但是我看了两个人的代码他们写的都是a[2]–，虽然两种都ac了，但是？？？？？。。。。。</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if(a[<span class="number">2</span>]==<span class="number">3</span>)&#123;</span><br><span class="line">    a[<span class="number">3</span>]++;a[<span class="number">2</span>]-=<span class="number">2</span>;a[<span class="number">1</span>]++;</span><br><span class="line">    n=max(n,<span class="number">3</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>倒着处理完了之后，再正着处理几遍，原理很简单就利用性质1，比如样例1 1，就是0 0 1，一直往后推，直到磨几遍把这个序列都摊成01就可以了</p><p>读入直接getchar，输出putchar<br>读入直接getchar，输出putchar<br>读入直接getchar，输出putchar   </p><p>好了至此这个题就a掉了，应该没啥坑点了0.0</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1000005</span>;</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch=getchar();x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(;ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>;ch=getchar());</span><br><span class="line">    <span class="keyword">for</span>(;ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>;ch=getchar())x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);getchar();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)a[i]=getchar()-<span class="string">'0'</span>,getchar();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);getchar();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        c=getchar()-<span class="string">'0'</span>,getchar();</span><br><span class="line">        a[i]+=c;</span><br><span class="line">    &#125;</span><br><span class="line">    n=max(m,n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">3</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;=<span class="number">2</span>)&#123;</span><br><span class="line">            a[i+<span class="number">1</span>]++;a[i]-=<span class="number">2</span>;a[i<span class="number">-2</span>]++;</span><br><span class="line">            n=max(n,i+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&amp;&amp;a[i<span class="number">-1</span>])&#123;</span><br><span class="line">            a[i+<span class="number">1</span>]++;a[i]--;a[i<span class="number">-1</span>]--;</span><br><span class="line">            n=max(n,i+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//for(int i=1;i&lt;=n;i++)printf("%d ",a[i]);</span></span><br><span class="line">    <span class="keyword">if</span>(a[<span class="number">2</span>]==<span class="number">3</span>)&#123;</span><br><span class="line">        a[<span class="number">3</span>]++;a[<span class="number">2</span>]-=<span class="number">2</span>;a[<span class="number">1</span>]++;</span><br><span class="line">        n=max(n,<span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a[<span class="number">1</span>]&gt;=<span class="number">2</span>&amp;&amp;!a[<span class="number">2</span>])&#123;</span><br><span class="line">        a[<span class="number">2</span>]++;a[<span class="number">1</span>]-=<span class="number">2</span>;</span><br><span class="line">        n=max(n,<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">bool</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]&amp;&amp;a[i+<span class="number">1</span>]&amp;&amp;!a[i+<span class="number">2</span>])&#123;</span><br><span class="line">                a[i+<span class="number">2</span>]++;a[i]--;a[i+<span class="number">1</span>]--;</span><br><span class="line">                n=max(n,i+<span class="number">2</span>);</span><br><span class="line">                flag=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!flag)<span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">putchar</span>(a[i]+<span class="number">48</span>),<span class="built_in">putchar</span>(<span class="string">' '</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 模拟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟 </tag>
            
            <tag> 斐波那契 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 2000 四边形分割平面（n个m边形分割平面公式推导）</title>
      <link href="/2018/09/19/51nod%202000/"/>
      <url>/2018/09/19/51nod%202000/</url>
      <content type="html"><![CDATA[<p>题目来源： syu比赛题<br>基准时间限制：1 秒 空间限制：131072 KB 分值: 40 难度：4级算法题 </p><p>用N个四边方形最多可以把平面分成几个区域?</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第一行输入一个整数T，表示数据组数（1&lt;=T&lt;=10000）；<br>第二行输入一个正整数n(1&lt;=n&lt;=1000)；</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>对于每组数据，请输出结果。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">10</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>这题可以扩展为n个m边形最多可以把平面分成几个区域</p><p>首先f(1)=2对任意m都成立</p><p>然后求递推式<code>f(n)=f(n-1)+2*m(n-1)</code>，就拿四边形来举例</p><p><img src="/2018/09/19/51nod 2000/111.png" alt=""></p><p>要加上第三个四边形的时候，四条边一条一条加，看图可以发现多加的红边实际上就是切割了已有的两个四边形的角，从而产生了四个蓝圈内的新区域，总共可以加四条红边，所以每加一个四边形增加的区域数就是<code>2*4*(n-1)</code></p><p>所以对m边形来说，每加一个m边形增加的区域数为<code>2*m(n-1)</code>，即证</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line">using namespace std<span class="comment">;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#define LL long long </span></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> N=<span class="number">1005</span><span class="comment">;</span></span><br><span class="line">LL f[N]<span class="comment">;</span></span><br><span class="line">void init()&#123;</span><br><span class="line">    f[<span class="number">1</span>]=<span class="number">2</span><span class="comment">;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">2</span><span class="comment">;i&lt;N;i++)f[i]=f[i-1]+8*(i-1);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">int</span> main()&#123;</span><br><span class="line">    <span class="built_in">int</span> t,n<span class="comment">;</span></span><br><span class="line">    init()<span class="comment">;</span></span><br><span class="line">    scanf(<span class="string">"%d"</span>,&amp;t)<span class="comment">;</span></span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        scanf(<span class="string">"%d"</span>,&amp;n)<span class="comment">;</span></span><br><span class="line">        printf(<span class="string">"%lld\n"</span>,f[n])<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推公式 </tag>
            
            <tag> 分割平面 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1960 范德蒙矩阵（贪心）</title>
      <link href="/2018/09/19/51nod%201960%20%E8%8C%83%E5%BE%B7%E8%92%99%E7%9F%A9%E9%98%B5%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%89/"/>
      <url>/2018/09/19/51nod%201960%20%E8%8C%83%E5%BE%B7%E8%92%99%E7%9F%A9%E9%98%B5%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 40 难度：4级算法题</p><p>LYK最近在研究范德蒙矩阵与矩阵乘法，一个范德蒙矩阵的形式如下：</p><p><img src="https://img.51nod.com/upload/000FC14D/08D3F342F1D99F0D0000000000000101.png" alt=""></p><p>它想通过构造一个含有1~nm的<code>n*m</code>的矩阵G，使得<code>G*V</code>得到的<code>n*n</code>的矩阵T中所有位置上的元素之和最大。其中<code>n,m&lt;=100000，ai&lt;=2*10^9</code><br>你只需输出这个值对1e9+7取模后的结果。</p><p>在样例中，矩阵G为<br>1 4<br>2 3<br>当然可能存在其它的方法使得答案最大。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第一行两个数n,m，接下来一行m个数表示ai。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>一个数表示答案</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">2 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">37</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>不会写_ (:з」∠) _ ，看了题解的，矩阵忘的差不多了。。</p><p>其实不难，只要发现G矩阵中Gij对答案的贡献是Gij*V’中第j行所有元素之和，那就可以想到贪心获取最大值了</p><p>贪心思路是：先给ai排个序，1-mn中大的数肯定优先和大的ai乘</p><p>第j行所有元素之和可以直接用等比数列搞一搞，要注意a=1和a&gt;=mod的特殊情况，也就是(a1^n-1)/(a1-1)，这里有除法就要用一下逆元，费马小定理，最后按照贪心顺序存入b数组中</p><p>最后的答案就是:<br><code>b[0]*∑[1~n]+b[1]*∑[n+1~2n]+b[2]*∑[2n+1~3n]+...+b[m-1]*[n*(m-1)+1~mn]</code></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line">using namespace std<span class="comment">;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#define LL long long </span></span><br><span class="line"><span class="keyword">const</span> LL p=<span class="number">1000000007</span><span class="comment">;</span></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> N=<span class="number">100005</span><span class="comment">;</span></span><br><span class="line">LL a[N],b[N],res,n,m<span class="comment">;</span></span><br><span class="line">LL qpow(LL a,LL b)&#123;</span><br><span class="line">    LL ans=<span class="number">1</span><span class="comment">;</span></span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)&#123;</span><br><span class="line">            ans=(ans*a)%p<span class="comment">;</span></span><br><span class="line">            b--<span class="comment">;</span></span><br><span class="line">        &#125;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span><span class="comment">;</span></span><br><span class="line">        a=a*a%p<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans<span class="comment">;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">int</span> main()&#123;</span><br><span class="line">    scanf(<span class="string">"%lld%lld"</span>,&amp;n,&amp;m)<span class="comment">;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span><span class="comment">;i&lt;m;i++)scanf("%lld",&amp;a[i]);</span></span><br><span class="line">    sort(a,a+m)<span class="comment">;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span><span class="comment">;i&lt;m;i++)&#123;</span></span><br><span class="line">        a[i]=(a[i]+p)%p<span class="comment">;</span></span><br><span class="line">        <span class="keyword">if</span>(a[i]==<span class="number">0</span>)b[i]=<span class="number">1</span><span class="comment">;</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a[i]==<span class="number">1</span>)b[i]=n<span class="comment">;</span></span><br><span class="line">        <span class="keyword">else</span> b[i]=(qpow(a[i],n)<span class="number">-1</span>+p)*qpow(a[i]<span class="number">-1</span>,p<span class="number">-2</span>)%p<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    res=<span class="number">0</span><span class="comment">;</span></span><br><span class="line">    LL num=(n*(n+<span class="number">1</span>)/<span class="number">2</span>)%p<span class="comment">;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span><span class="comment">;i&lt;m;i++)&#123;</span></span><br><span class="line">        res=(res+num*b[i]%p)%p<span class="comment">;</span></span><br><span class="line">        num=(num+n*n)%p<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    printf(<span class="string">"%lld\n"</span>,res)<span class="comment">;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 贪心 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 2133 排队接水（贪心）</title>
      <link href="/2018/09/19/2133%20%E6%8E%92%E9%98%9F%E6%8E%A5%E6%B0%B4%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%89/"/>
      <url>/2018/09/19/2133%20%E6%8E%92%E9%98%9F%E6%8E%A5%E6%B0%B4%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 5 难度：1级算法题</p><p>n个人一起排队接水，第i个人需要b[i]的时间来接水。<br>1 &lt;= n &lt;= 1000<br>0 &lt;= b[i] &lt;= 1000<br>同时只能有一个人接水，正在接水的人和没有接水的人都需要等待。<br>完成接水的人会立刻消失，不会继续等待。<br>你可以决定所有人接水的顺序，并希望最小化所有人等待时间的总和。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第一行一个整数n</p><p>接下来n行，每行一个整数表示b[i]</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>一行一个整数，表示所有人等待时间的总和的最小值</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>水。。</p><p>贪心，等待时间长的人先打水，这样这个数字要乘上的次数就小</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line">using namespace std<span class="comment">;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#define LL long long </span></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> N=<span class="number">1005</span><span class="comment">;</span></span><br><span class="line"><span class="built_in">int</span> a[N]<span class="comment">;</span></span><br><span class="line">bool cmp(<span class="built_in">int</span> a,<span class="built_in">int</span> b)&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;b<span class="comment">;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">int</span> main()&#123;</span><br><span class="line">    <span class="built_in">int</span> n<span class="comment">;</span></span><br><span class="line">    scanf(<span class="string">"%d"</span>,&amp;n)<span class="comment">;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span><span class="comment">;i&lt;n;i++)scanf("%d",&amp;a[i]);</span></span><br><span class="line">    sort(a,a+n,cmp)<span class="comment">;</span></span><br><span class="line">    LL ans=<span class="number">0</span><span class="comment">;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span><span class="comment">;i&lt;n;i++)&#123;</span></span><br><span class="line">        ans+=a[i]*(i+<span class="number">1</span>)<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    printf(<span class="string">"%lld\n"</span>,ans)<span class="comment">;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 贪心 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1019 逆序数（树状数组，归并排序）</title>
      <link href="/2018/09/19/1019%20%E9%80%86%E5%BA%8F%E6%95%B0%EF%BC%88%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%EF%BC%8C%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F%EF%BC%89/"/>
      <url>/2018/09/19/1019%20%E9%80%86%E5%BA%8F%E6%95%B0%EF%BC%88%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%EF%BC%8C%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB </p><p>在一个排列中，如果一对数的前后位置与大小顺序相反，即前面的数大于后面的数，那么它们就称为一个逆序。一个排列中逆序的总数就称为这个排列的逆序数。</p><p>如2 4 3 1中，2 1，4 3，4 1，3 1是逆序，逆序数是4。给出一个整数序列，求该序列的逆序数。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：N，N为序列的长度（n &lt;= 50000)<br>第2 - N + 1行：序列中的元素（0 &lt;= A[i] &lt;= 10^9）</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出逆序数</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>先是树状数组，原理就是排序思想加上区间求和和点更新，（用线段树也有一样的效果），62ms</p><p>首先一般的排序思想是这样的：比如对4 2 3 1这个序列来说，先找最小的1，在他前面有三个数，那么记下+3，把这个1变成0，然后找2，在他前面有一个数，记下+1，把2变成0，然后3前面有一个数，记下+1，3变成0，答案就是3+1+1=5</p><p>怎么和树状数组联系到一块呢，比如当前4 2 3 1对应着1 1 1 1，然后第四个位置前面有三个1，区间求和，答案加3</p><p>树状数组具体操作是倒过来的，一开始都是0 0 0 0，然后第一位的数字是“4”，是第四小，先更新为1，即0 0 0 1，然后求和[1,4]得1，答案加上（i-1=0），然后第二位数字是“2”，是第二小，更新为1，即0 1 0 1，然后求和[1,2]得1，答案加上（i-1=1），第三位数字是3，是第三小，更新为1，即0 1 1 1，求和[1,3]得2，答案加上（i-2=1），第四位数字是1，第一小，1 1 1 1，求和[1,1]得1，答案加上（i-1=3），所以逆序数就是0+1+1+3=5，</p><p>要先离散化一波，具体见代码</p><hr><p>第二种方法是归并排序，冒泡儿水不过去╮(￣▽￣””)╭</p><p>那么问题在于归并排序的逆序数咋求，这时候就要在“并”里加句妙妙的话，<code>ans+=(m-q)</code>，见代码</p><p>举个例子:</p><table><thead><tr><th>1</th><th>3</th><th>4</th><th></th><th>2</th><th>5</th><th>6</th></tr></thead><tbody><tr><td>l</td><td></td><td>mid</td><td></td><td>mid+1</td><td></td><td>r</td></tr></tbody></table><p>填入1，然后判断3&gt;2在右边选择2填的时候，3和3后面的所有数（即3，4）都大于2，所以这时候逆序数就加2</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">50005</span>;</span><br><span class="line"><span class="keyword">int</span> c[N],n,tmp[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (x&amp;-x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">sum</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="comment">//求和1～x</span></span><br><span class="line">    LL ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        ans+=c[x];</span><br><span class="line">        x-=lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> d)</span></span>&#123;<span class="comment">//更新</span></span><br><span class="line">    <span class="keyword">while</span>(x&lt;=n)&#123;</span><br><span class="line">        c[x]+=d;</span><br><span class="line">        x+=lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;a[N];</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;<span class="comment">//first记录数字，second记录数字所在位子</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i].first);</span><br><span class="line">        a[i].second=i;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+<span class="number">1</span>+n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)tmp[a[i].second]=i;</span><br><span class="line">    <span class="comment">//tmp[i]存的是第i位上的数排第几小</span></span><br><span class="line">    <span class="comment">//和上面结合起来其实是做了离散化的操作</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        add(tmp[i],<span class="number">1</span>);</span><br><span class="line">        ans+=i-sum(tmp[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100005</span>;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>,a[N],c[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merges</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> mid,<span class="keyword">int</span> r)</span></span>&#123;<span class="comment">//并</span></span><br><span class="line">    <span class="keyword">int</span> p=l,q=l,m=mid+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(p&lt;=mid&amp;&amp;m&lt;=r)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[p]&lt;=a[m])c[q++]=a[p++];</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            c[q++]=a[m++];</span><br><span class="line">            ans+=(m-q);<span class="comment">//计算逆序数</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(p&lt;=mid)c[q++]=a[p++];</span><br><span class="line">    <span class="keyword">while</span>(m&lt;=r)c[q++]=a[m++];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;q;i++)a[i]=c[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge_sort</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;<span class="comment">//归</span></span><br><span class="line">    <span class="keyword">if</span>(l&lt;r)&#123;</span><br><span class="line">        <span class="keyword">int</span> m=(l+r)/<span class="number">2</span>;</span><br><span class="line">        merge_sort(l,m);</span><br><span class="line">        merge_sort(m+<span class="number">1</span>,r);</span><br><span class="line">        merges(l,m,r);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    merge_sort(<span class="number">0</span>,n<span class="number">-1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 归并排序 </tag>
            
            <tag> 树状数组 </tag>
            
            <tag> 离散化 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1005 大数加法</title>
      <link href="/2018/09/19/1005%20%E5%A4%A7%E6%95%B0%E5%8A%A0%E6%B3%95/"/>
      <url>/2018/09/19/1005%20%E5%A4%A7%E6%95%B0%E5%8A%A0%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB </p><p>给出2个大整数A,B，计算A+B的结果。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：大数A<br>第2行：大数B<br>(A,B的长度 &lt;= 10000 需注意：A B有可能为负数）</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出A + B</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">68932147586</span></span><br><span class="line"><span class="number">468711654886</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">537643802472</span></span><br></pre></td></tr></table></figure><hr><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;  </span><br><span class="line"><span class="keyword">import</span> java.math.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span>&#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner <span class="built_in">cin</span>=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> t;</span><br><span class="line">        BigInteger a,b,c;</span><br><span class="line">        a=<span class="built_in">cin</span>.nextBigInteger();</span><br><span class="line">        b=<span class="built_in">cin</span>.nextBigInteger();</span><br><span class="line">        c=a.add(b);</span><br><span class="line">        System.out.println(c);</span><br><span class="line">        <span class="built_in">cin</span>.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java高精度 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1008 N的阶乘 mod P</title>
      <link href="/2018/09/19/1008%20N%E7%9A%84%E9%98%B6%E4%B9%98%20mod%20P%20/"/>
      <url>/2018/09/19/1008%20N%E7%9A%84%E9%98%B6%E4%B9%98%20mod%20P%20/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB</p><p>输入N和P（P为质数），求N! Mod P = ? (Mod 就是求模 %)</p><p>例如：n = 10， P = 11，10! = 3628800<br>3628800 % 11 = 10</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>两个数N,P，中间用空格隔开。(N &lt; 10000, P &lt; 10^9)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出N! mod P的结果。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">10 </span><span class="number">11</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span></span><br></pre></td></tr></table></figure><hr><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">LL n,p,ans=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;n,&amp;p);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">ans=(ans*i)%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>1000 A + B</title>
      <link href="/2018/09/19/1000%20A%20+%20B/"/>
      <url>/2018/09/19/1000%20A%20+%20B/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB </p><p>给出2个整数A和B，计算两个数的和。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>2个整数A B，中间用空格分割。（0 &lt;= A, B &lt;= 10^9）</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出A + B的计算结果。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><hr><p>不集齐全部题目。。就有点。。难受</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">LL a,b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;a,&amp;b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,a+b);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>1012 最小公倍数LCM</title>
      <link href="/2018/09/19/1012%20%E6%9C%80%E5%B0%8F%E5%85%AC%E5%80%8D%E6%95%B0LCM/"/>
      <url>/2018/09/19/1012%20%E6%9C%80%E5%B0%8F%E5%85%AC%E5%80%8D%E6%95%B0LCM/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB</p><p>输入2个正整数A，B，求A与B的最小公倍数。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>2个数A,B，中间用空格隔开。(1&lt;= A,B &lt;= 10^9)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出A与B的最小公倍数。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">30 </span><span class="number">105</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">210</span></span><br></pre></td></tr></table></figure><hr><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="function">LL <span class="title">gcd</span><span class="params">(LL a,LL b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b==<span class="number">0</span>?a:gcd(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">LL a,b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;a,&amp;b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,a*b/gcd(a,b));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gcd </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1018 排序</title>
      <link href="/2018/09/19/1018%20%E6%8E%92%E5%BA%8F/"/>
      <url>/2018/09/19/1018%20%E6%8E%92%E5%BA%8F/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB </p><p>给出N个整数，对着N个整数进行排序</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：整数的数量N（1 &lt;= N &lt;= 50000)<br>第2 - N + 1行：待排序的整数（-10^9 &lt;= A[i] &lt;= 10^9）</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>共n行，按照递增序输出排序好的数据。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><hr><p>归并排序</p><p>sort</p><p>原来不写一堆头文件会变快的么0.0？？sort那个去了一堆头文件之后从203ms到了15ms。。。</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">50005</span>;</span><br><span class="line"><span class="keyword">int</span> a[N],c[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merges</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> mid,<span class="keyword">int</span> r)</span></span>&#123;<span class="comment">//并</span></span><br><span class="line">    <span class="keyword">int</span> p=l,q=l,m=mid+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(p&lt;=mid&amp;&amp;m&lt;=r)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[p]&lt;=a[m])c[q++]=a[p++];</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            c[q++]=a[m++];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(p&lt;=mid)c[q++]=a[p++];</span><br><span class="line">    <span class="keyword">while</span>(m&lt;=r)c[q++]=a[m++];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;q;i++)a[i]=c[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge_sort</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;<span class="comment">//归</span></span><br><span class="line">    <span class="keyword">if</span>(l&lt;r)&#123;</span><br><span class="line">        <span class="keyword">int</span> m=(l+r)/<span class="number">2</span>;</span><br><span class="line">        merge_sort(l,m);</span><br><span class="line">        merge_sort(m+<span class="number">1</span>,r);</span><br><span class="line">        merges(l,m,r);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    merge_sort(<span class="number">0</span>,n<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">50005</span>;</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    sort(a,a+n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 归并排序 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1011 最大公约数GCD</title>
      <link href="/2018/09/19/1011%20%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0GCD%20/"/>
      <url>/2018/09/19/1011%20%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0GCD%20/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB</p><p>输入2个正整数A，B，求A与B的最大公约数。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>2个数A,B，中间用空格隔开。(1&lt;= A,B &lt;= 10^9)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出A与B的最大公约数。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">30 </span><span class="number">105</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">15</span></span><br></pre></td></tr></table></figure><hr><p>毫无意义的水了一发。。只是想把51nod基础题那个分类凑齐而已。。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b==<span class="number">0</span>?a:gcd(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,gcd(a,b));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gcd </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1027 大数乘法（java大数）</title>
      <link href="/2018/09/18/1027%20%E5%A4%A7%E6%95%B0%E4%B9%98%E6%B3%95%EF%BC%88java%E5%A4%A7%E6%95%B0%EF%BC%89/"/>
      <url>/2018/09/18/1027%20%E5%A4%A7%E6%95%B0%E4%B9%98%E6%B3%95%EF%BC%88java%E5%A4%A7%E6%95%B0%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB </p><p>给出2个大整数A,B，计算<code>A*B</code>的结果。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：大数A<br>第2行：大数B<br>(A,B的长度 &lt;= 1000，A,B &gt;= 0）</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出A * B</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">123456</span></span><br><span class="line"><span class="number">234567</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">28958703552</span></span><br></pre></td></tr></table></figure><hr><p>水。。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;  </span><br><span class="line"><span class="keyword">import</span> java.math.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> &#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner <span class="built_in">cin</span>=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        BigInteger a,b;</span><br><span class="line">        a=<span class="built_in">cin</span>.nextBigInteger();</span><br><span class="line">        b=<span class="built_in">cin</span>.nextBigInteger();</span><br><span class="line">        System.out.println(a.multiply(b));</span><br><span class="line">        <span class="built_in">cin</span>.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java高精度 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1006 最长公共子序列Lcs（dp+路径打印）</title>
      <link href="/2018/09/18/1006%20%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97Lcs%EF%BC%88dp+%E8%B7%AF%E5%BE%84%E6%89%93%E5%8D%B0%EF%BC%89/"/>
      <url>/2018/09/18/1006%20%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97Lcs%EF%BC%88dp+%E8%B7%AF%E5%BE%84%E6%89%93%E5%8D%B0%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB </p><p>给出两个字符串A B，求A与B的最长公共子序列（子序列不要求是连续的）。</p><p>比如两个串为：</p><p>abcicba<br>abdkscab</p><p>ab是两个串的子序列，abc也是，abca也是，其中abca是这两个字符串最长的子序列。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：字符串A</p><p>第2行：字符串B</p><p>(A,B的长度 &lt;= 1000)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出最长的子序列，如果有多个，随意输出1个。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">abcicba</span></span><br><span class="line"><span class="attribute">abdkscab</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">abca</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>基础lcs加上一个路径打印</p><p>dp[i][j]表示s1的前i个和s2的前j个的最长公共子序列</p><p>状态转移方程是 dp[i+1][j+1]=max(dp[i+1][j],dp[i][j+1],dp[i][j]+(s1[i]==s2[j]?1:0))</p><p>路径打印见代码注释，根据dp关系写出路径</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1005</span>;</span><br><span class="line"><span class="keyword">char</span> s1[N],s2[N],ans[N];</span><br><span class="line"><span class="keyword">int</span> dp[N][N],len1,len2;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lcs</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len1;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;len2;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s1[i]==s2[j])dp[i+<span class="number">1</span>][j+<span class="number">1</span>]=dp[i][j]+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> dp[i+<span class="number">1</span>][j+<span class="number">1</span>]=max(dp[i+<span class="number">1</span>][j],dp[i][j+<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s %s"</span>,s1,s2);</span><br><span class="line">    len1=<span class="built_in">strlen</span>(s1);len2=<span class="built_in">strlen</span>(s2);</span><br><span class="line">    lcs();</span><br><span class="line">    <span class="keyword">int</span> c1=len1<span class="number">-1</span>,c2=len2<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">int</span> ji=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(c1&gt;=<span class="number">0</span>&amp;&amp;c2&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s1[c1]==s2[c2])&#123;</span><br><span class="line">            ans[ji++]=s1[c1];</span><br><span class="line">            c1--;c2--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(dp[c1+<span class="number">1</span>][c2]&gt;=dp[c1][c2+<span class="number">1</span>])c2--;</span><br><span class="line">        <span class="comment">//说明答案出自s1的[0,c1]和s2的[0,c2-1]</span></span><br><span class="line">        <span class="keyword">else</span> c1--;</span><br><span class="line">        <span class="comment">//同理答案出自s1的[0,c1-1]和s2的[0,c2]</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=ji<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)<span class="built_in">printf</span>(<span class="string">"%c"</span>,ans[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dp </tag>
            
            <tag> lcs </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1066 Bash游戏（巴什博弈）</title>
      <link href="/2018/09/18/1066%20Bash%E6%B8%B8%E6%88%8F%EF%BC%88%E5%B7%B4%E4%BB%80%E5%8D%9A%E5%BC%88%EF%BC%89/"/>
      <url>/2018/09/18/1066%20Bash%E6%B8%B8%E6%88%8F%EF%BC%88%E5%B7%B4%E4%BB%80%E5%8D%9A%E5%BC%88%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB </p><p>有一堆石子共有N个。A B两个人轮流拿，A先拿。每次最少拿1颗，最多拿K颗，拿到最后1颗石子的人获胜。假设A B都非常聪明，拿石子的过程中不会出现失误。给出N和K，问最后谁能赢得比赛。</p><p>例如N = 3，K = 2。无论A如何拿，B都可以拿到最后1颗石子。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：一个数T，表示后面用作输入测试的数的数量。（1 &lt;= T &lt;= 10000)</p><p>第2 - T + 1行：每行2个数N，K。中间用空格分隔。（1 &lt;= N,K &lt;= 10^9)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>共T行，如果A获胜输出A，如果B获胜输出B。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">7 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">8 </span><span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">B</span><br><span class="line"><span class="keyword">A</span></span><br><span class="line"><span class="keyword">A</span></span><br><span class="line">B</span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p><a href="https://leflacon.github.io/2018/08/19/hdu%201846%20Brave%20Game%EF%BC%88%E5%B7%B4%E4%BB%80%E5%8D%9A%E5%BC%88%EF%BC%89/">hdu 1846 Brave Game（巴什博弈）</a></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line">using namespace std<span class="comment">;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> main()&#123;</span><br><span class="line">    <span class="built_in">int</span> t<span class="comment">;</span></span><br><span class="line">    scanf(<span class="string">"%d"</span>,&amp;t)<span class="comment">;</span></span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">int</span> n,k<span class="comment">;</span></span><br><span class="line">        scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;k)<span class="comment">;</span></span><br><span class="line">        <span class="keyword">if</span>(n%(k+<span class="number">1</span>)==<span class="number">0</span>)puts(<span class="string">"B"</span>)<span class="comment">;</span></span><br><span class="line">        <span class="keyword">else</span> puts(<span class="string">"A"</span>)<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 巴什博弈 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1046 A^B Mod C（快速幂）</title>
      <link href="/2018/09/18/1046%20A%5EB%20Mod%20C%EF%BC%88%E5%BF%AB%E9%80%9F%E5%B9%82%EF%BC%89/"/>
      <url>/2018/09/18/1046%20A%5EB%20Mod%20C%EF%BC%88%E5%BF%AB%E9%80%9F%E5%B9%82%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB </p><p>给出3个正整数A B C，求A^B Mod C。</p><p>例如，3 5 8，3^5 Mod 8 = 3。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>3个正整数A B C，中间用空格分隔。(1 &lt;= A,B,C &lt;= 10^9)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出计算结果</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">5</span> <span class="number">8</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><hr><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line">using namespace std<span class="comment">;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#define LL long long </span></span><br><span class="line">LL qpow(LL a,LL b,LL p)&#123;</span><br><span class="line">    LL ans=<span class="number">1</span><span class="comment">;</span></span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)&#123;</span><br><span class="line">            ans=(ans*a)%p<span class="comment">;</span></span><br><span class="line">            b--<span class="comment">;</span></span><br><span class="line">        &#125;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span><span class="comment">;</span></span><br><span class="line">        a=a*a%p<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans<span class="comment">;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">int</span> main()&#123;</span><br><span class="line">    LL a,b,c<span class="comment">;</span></span><br><span class="line">    scanf(<span class="string">"%lld%lld%lld"</span>,&amp;a,&amp;b,&amp;c)<span class="comment">;</span></span><br><span class="line">    printf(<span class="string">"%lld\n"</span>,qpow(a,b,c))<span class="comment">;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>1069 Nim游戏（尼姆博弈）</title>
      <link href="/2018/09/18/1069%20Nim%E6%B8%B8%E6%88%8F%EF%BC%88%E5%B0%BC%E5%A7%86%E5%8D%9A%E5%BC%88%EF%BC%89%20/"/>
      <url>/2018/09/18/1069%20Nim%E6%B8%B8%E6%88%8F%EF%BC%88%E5%B0%BC%E5%A7%86%E5%8D%9A%E5%BC%88%EF%BC%89%20/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB</p><p>有N堆石子。A B两个人轮流拿，A先拿。每次只能从一堆中取若干个，可将一堆全取走，但不可不取，拿到最后1颗石子的人获胜。假设A B都非常聪明，拿石子的过程中不会出现失误。给出N及每堆石子的数量，问最后谁能赢得比赛。</p><p>例如：3堆石子，每堆1颗。A拿1颗，B拿1颗，此时还剩1堆，所以A可以拿到最后1颗石子。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：一个数N，表示有N堆石子。（1 &lt;= N &lt;= 1000)</p><p>第2 - N + 1行：N堆石子的数量。(1 &lt;= A[i] &lt;= 10^9)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>如果A获胜输出A，如果B获胜输出B。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">A</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>[hdu 2176 取(m堆)石子游戏（尼姆博弈）]<a href="https://leflacon.github.io/2018/08/19/hdu%202176%20%E5%8F%96(m%E5%A0%86)%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F%EF%BC%88%E5%B0%BC%E5%A7%86%E5%8D%9A%E5%BC%88%EF%BC%89/">https://leflacon.github.io/2018/08/19/hdu%202176%20%E5%8F%96(m%E5%A0%86)%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F%EF%BC%88%E5%B0%BC%E5%A7%86%E5%8D%9A%E5%BC%88%EF%BC%89/</a></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line">using namespace std<span class="comment">;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> N=<span class="number">200005</span><span class="comment">;</span></span><br><span class="line"><span class="built_in">int</span> main()&#123;</span><br><span class="line">    <span class="built_in">int</span> n<span class="comment">;</span></span><br><span class="line">    scanf(<span class="string">"%d"</span>,&amp;n)<span class="comment">;</span></span><br><span class="line">    <span class="built_in">int</span> sum=<span class="number">0</span>,c[N]<span class="comment">;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span><span class="comment">;i&lt;n;i++)&#123;</span></span><br><span class="line">        scanf(<span class="string">"%d"</span>,&amp;c[i])<span class="comment">;</span></span><br><span class="line">        sum^=c[i]<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(sum==<span class="number">0</span>)printf(<span class="string">"B\n"</span>)<span class="comment">;</span></span><br><span class="line">    <span class="keyword">else</span> printf(<span class="string">"A\n"</span>)<span class="comment">;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 尼姆博弈 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1049 最大子段和（dp）</title>
      <link href="/2018/09/18/1049%20%E6%9C%80%E5%A4%A7%E5%AD%90%E6%AE%B5%E5%92%8C%EF%BC%88dp%EF%BC%89/"/>
      <url>/2018/09/18/1049%20%E6%9C%80%E5%A4%A7%E5%AD%90%E6%AE%B5%E5%92%8C%EF%BC%88dp%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB </p><p>N个整数组成的序列a[1],a[2],a[3],…,a[n]，求该序列如a[i]+a[i+1]+…+a[j]的连续子段和的最大值。当所给的整数均为负数时和为0。</p><p>例如：-2,11,-4,13,-5,-2，和最大的子段为：11,-4,13。和为20。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：整数序列的长度N（2 &lt;= N &lt;= 50000)<br>第2 - N + 1行：N个整数（-10^9 &lt;= A[i] &lt;= 10^9）</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出最大子段和。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">-<span class="ruby"><span class="number">2</span></span></span><br><span class="line"><span class="ruby"><span class="number">11</span></span></span><br><span class="line"><span class="ruby">-<span class="number">4</span></span></span><br><span class="line"><span class="ruby"><span class="number">13</span></span></span><br><span class="line"><span class="ruby">-<span class="number">5</span></span></span><br><span class="line"><span class="ruby">-<span class="number">2</span></span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">20</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>dp[i]表示以a[i]结尾的最大子段和是多少</p><p>状态转移方程 dp[i]=max(a[i],dp[i-1]+a[i])，也就是说如果dp[i-1]小于0，那么前面都不要了直接从a[i]继续连</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line">using namespace std<span class="comment">;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#define LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> N=<span class="number">50005</span><span class="comment">;</span></span><br><span class="line">LL a[N],dp[N]<span class="comment">;</span></span><br><span class="line"><span class="built_in">int</span> main()&#123;</span><br><span class="line">    <span class="built_in">int</span> n<span class="comment">;</span></span><br><span class="line">    scanf(<span class="string">"%d"</span>,&amp;n)<span class="comment">;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span><span class="comment">;i&lt;n;i++)scanf("%lld",&amp;a[i]);</span></span><br><span class="line">    LL ans=a[<span class="number">0</span>]<span class="comment">;</span></span><br><span class="line">    dp[<span class="number">0</span>]=a[<span class="number">0</span>]<span class="comment">;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">1</span><span class="comment">;i&lt;n;i++)&#123;</span></span><br><span class="line">        dp[i]=max(a[i],dp[i<span class="number">-1</span>]+a[i])<span class="comment">;</span></span><br><span class="line">        ans=max(ans,dp[i])<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    printf(<span class="string">"%lld\n"</span>,ans)<span class="comment">;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dp </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1072 威佐夫游戏</title>
      <link href="/2018/09/18/1072%20%E5%A8%81%E4%BD%90%E5%A4%AB%E6%B8%B8%E6%88%8F%20/"/>
      <url>/2018/09/18/1072%20%E5%A8%81%E4%BD%90%E5%A4%AB%E6%B8%B8%E6%88%8F%20/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB </p><p>有2堆石子。A B两个人轮流拿，A先拿。每次可以从一堆中取任意个或从2堆中取相同数量的石子，但不可不取。拿到最后1颗石子的人获胜。假设A B都非常聪明，拿石子的过程中不会出现失误。给出2堆石子的数量，问最后谁能赢得比赛。</p><p>例如：2堆石子分别为3颗和5颗。那么不论A怎样拿，B都有对应的方法拿到最后1颗。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：一个数T，表示后面用作输入测试的数的数量。（1 &lt;= T &lt;= 10000)</p><p>第2 - T + 1行：每行2个数分别是2堆石子的数量，中间用空格分隔。(1 &lt;= N &lt;= 2000000)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>共T行，如果A获胜输出A，如果B获胜输出B。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">5</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">4</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">9</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">B</span><br><span class="line"><span class="keyword">A</span></span><br><span class="line"><span class="keyword">A</span></span><br></pre></td></tr></table></figure><hr><p>水。。</p><p>威佐夫博弈原理在博客的这篇里  –&gt;  hdu 2177 取(2堆)石子游戏（威佐夫博弈）<br><a href="https://leflacon.github.io/2018/08/19/hdu%202177%20%E5%8F%96(2%E5%A0%86)%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F%EF%BC%88%E5%A8%81%E4%BD%90%E5%A4%AB%E5%8D%9A%E5%BC%88%EF%BC%89/">https://leflacon.github.io/2018/08/19/hdu%202177%20%E5%8F%96(2%E5%A0%86)%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F%EF%BC%88%E5%A8%81%E4%BD%90%E5%A4%AB%E5%8D%9A%E5%BC%88%EF%BC%89/</a></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line">using namespace std<span class="comment">;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> main()&#123;</span><br><span class="line">    <span class="built_in">int</span> a,b,t<span class="comment">;</span></span><br><span class="line">    scanf(<span class="string">"%d"</span>,&amp;t)<span class="comment">;</span></span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        scanf(<span class="string">"%d%d"</span>,&amp;a,&amp;b)<span class="comment">;</span></span><br><span class="line">        <span class="keyword">if</span>(a&gt;b)&#123;</span><br><span class="line">            <span class="built_in">int</span> temp=a<span class="comment">;a=b;b=temp;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>((<span class="built_in">int</span>)((<span class="built_in">sqrt</span>(<span class="number">5</span>)+<span class="number">1</span>)*(b-a)/<span class="number">2</span>)==a)printf(<span class="string">"B\n"</span>)<span class="comment">;</span></span><br><span class="line">        <span class="keyword">else</span> printf(<span class="string">"A\n"</span>)<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 威佐夫博弈 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1057 N的阶乘（java大数）</title>
      <link href="/2018/09/18/1057%20N%E7%9A%84%E9%98%B6%E4%B9%98%EF%BC%88java%E5%A4%A7%E6%95%B0%EF%BC%89/"/>
      <url>/2018/09/18/1057%20N%E7%9A%84%E9%98%B6%E4%B9%98%EF%BC%88java%E5%A4%A7%E6%95%B0%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB</p><p>输入N求N的阶乘的准确值。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>输入N(1 &lt;= N &lt;= 10000)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出N的阶乘</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">120</span></span><br></pre></td></tr></table></figure><hr><p>水一发java。。</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;  </span><br><span class="line"><span class="keyword">import</span> java.math.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> &#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner <span class="built_in">cin</span>=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        BigInteger n;</span><br><span class="line">        n=<span class="built_in">cin</span>.nextBigInteger();</span><br><span class="line">        <span class="keyword">int</span> num=n.intValue();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;num;i++)n=n.multiply(BigInteger.valueOf(i));</span><br><span class="line">        System.out.println(n);</span><br><span class="line">        <span class="built_in">cin</span>.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java高精度 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1088 最长回文子串（Manacher算法）</title>
      <link href="/2018/09/18/1088%20%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2%EF%BC%88Manacher%E7%AE%97%E6%B3%95%EF%BC%89/"/>
      <url>/2018/09/18/1088%20%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2%EF%BC%88Manacher%E7%AE%97%E6%B3%95%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB</p><p>回文串是指aba、abba、cccbccc、aaaa这种左右对称的字符串。<br>输入一个字符串Str，输出Str里最长回文子串的长度。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>输入Str（Str的长度 &lt;= 1000）</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出最长回文子串的长度L。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">daabaac</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>这题数据范围水。。不用马拉车也能水过去，1089那题必须用o(n)的马拉车</p><p><a href="https://segmentfault.com/a/1190000003914228" rel="external nofollow noopener noreferrer" target="_blank">最长回文子串——Manacher 算法</a></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100005</span>;</span><br><span class="line"><span class="keyword">int</span> p[N&lt;&lt;<span class="number">1</span>],ji,len,ans=<span class="number">0</span>,maxl=<span class="number">0</span>,cur=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> s[N],ss[N&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ji=<span class="number">0</span>;</span><br><span class="line">    ss[ji]=<span class="string">'@'</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">        ss[++ji]=<span class="string">'#'</span>;</span><br><span class="line">        ss[++ji]=s[i];</span><br><span class="line">    &#125;</span><br><span class="line">    ss[++ji]=<span class="string">'#'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">manacher</span><span class="params">()</span></span>&#123;</span><br><span class="line">    len=ji;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;ji;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i&lt;maxl)p[i]=min(maxl-i,p[<span class="number">2</span>*cur-i]);<span class="comment">//小于最长边界</span></span><br><span class="line">        <span class="keyword">else</span> p[i]=<span class="number">1</span>;<span class="comment">//边界外，初始化为1，然后扩展直到不配对</span></span><br><span class="line">        <span class="keyword">while</span>(ss[i+p[i]]==ss[i-p[i]])p[i]++;<span class="comment">//直到不配对</span></span><br><span class="line">        ans=max(ans,p[i]);<span class="comment">//更新答案</span></span><br><span class="line">        <span class="keyword">if</span>(p[i]+i&gt;maxl)&#123;<span class="comment">//更新最长边界</span></span><br><span class="line">            cur=i;</span><br><span class="line">            maxl=p[i]+i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">    len=<span class="built_in">strlen</span>(s);</span><br><span class="line">    init();</span><br><span class="line">    manacher();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Manacher </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1089 最长回文子串 V2（Manacher算法）</title>
      <link href="/2018/09/18/1089%20%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2%20V2%EF%BC%88Manacher%E7%AE%97%E6%B3%95%EF%BC%89/"/>
      <url>/2018/09/18/1089%20%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2%20V2%EF%BC%88Manacher%E7%AE%97%E6%B3%95%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB </p><p>回文串是指aba、abba、cccbccc、aaaa这种左右对称的字符串。</p><p>输入一个字符串Str，输出Str里最长回文子串的长度。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>输入Str（Str的长度 &lt;= 100000)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出最长回文子串的长度L。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">daabaac</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>对马拉车算法的原理还是半知半解乱七八糟。。以后再想吧。。</p><p><a href="https://segmentfault.com/a/1190000003914228" rel="external nofollow noopener noreferrer" target="_blank">最长回文子串——Manacher 算法</a></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100005</span>;</span><br><span class="line"><span class="keyword">int</span> p[N&lt;&lt;<span class="number">1</span>],ji,len,ans=<span class="number">0</span>,maxl=<span class="number">0</span>,cur=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> s[N],ss[N&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ji=<span class="number">0</span>;</span><br><span class="line">    ss[ji]=<span class="string">'@'</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">        ss[++ji]=<span class="string">'#'</span>;</span><br><span class="line">        ss[++ji]=s[i];</span><br><span class="line">    &#125;</span><br><span class="line">    ss[++ji]=<span class="string">'#'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">manacher</span><span class="params">()</span></span>&#123;</span><br><span class="line">    len=ji;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;ji;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i&lt;maxl)p[i]=min(maxl-i,p[<span class="number">2</span>*cur-i]);<span class="comment">//小于最长边界</span></span><br><span class="line">        <span class="keyword">else</span> p[i]=<span class="number">1</span>;<span class="comment">//边界外，初始化为1，然后扩展直到不配对</span></span><br><span class="line">        <span class="keyword">while</span>(ss[i+p[i]]==ss[i-p[i]])p[i]++;<span class="comment">//直到不配对</span></span><br><span class="line">        ans=max(ans,p[i]);<span class="comment">//更新答案</span></span><br><span class="line">        <span class="keyword">if</span>(p[i]+i&gt;maxl)&#123;<span class="comment">//更新最长边界</span></span><br><span class="line">            cur=i;</span><br><span class="line">            maxl=p[i]+i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">    len=<span class="built_in">strlen</span>(s);</span><br><span class="line">    init();</span><br><span class="line">    manacher();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Manacher </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1058 N的阶乘的长度（斯特林公式）</title>
      <link href="/2018/09/17/1058%20N%E7%9A%84%E9%98%B6%E4%B9%98%E7%9A%84%E9%95%BF%E5%BA%A6%EF%BC%88%E6%96%AF%E7%89%B9%E6%9E%97%E5%85%AC%E5%BC%8F%EF%BC%89/"/>
      <url>/2018/09/17/1058%20N%E7%9A%84%E9%98%B6%E4%B9%98%E7%9A%84%E9%95%BF%E5%BA%A6%EF%BC%88%E6%96%AF%E7%89%B9%E6%9E%97%E5%85%AC%E5%BC%8F%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB </p><p>输入N求N的阶乘的10进制表示的长度。例如6! = 720，长度为3。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>输入N(1 &lt;= N &lt;= 10^6)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出N的阶乘的长度</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><hr><p>又水了一题。。</p><p>关于斯特林公式的解释看这篇<a href="https://leflacon.github.io/2018/09/16/%E6%96%AF%E7%89%B9%E6%9E%97%E5%85%AC%E5%BC%8F/">1130 N的阶乘的长度 V2（斯特林公式取n阶乘位数）</a></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI=<span class="built_in">asin</span>(<span class="number">1.0</span>)*<span class="number">2</span>,e=<span class="number">2.718281828459</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    LL ans=<span class="number">0.5</span>*<span class="built_in">log10</span>(<span class="number">2.0</span>*PI*n)+n*<span class="built_in">log10</span>(<span class="number">1.0</span>*n/e)+<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 斯特林公式 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1081 子段求和（前缀和，树状数组，线段树）</title>
      <link href="/2018/09/17/1081%20%E5%AD%90%E6%AE%B5%E6%B1%82%E5%92%8C%EF%BC%88%E5%89%8D%E7%BC%80%E5%92%8C%EF%BC%8C%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%EF%BC%8C%E7%BA%BF%E6%AE%B5%E6%A0%91%EF%BC%89/"/>
      <url>/2018/09/17/1081%20%E5%AD%90%E6%AE%B5%E6%B1%82%E5%92%8C%EF%BC%88%E5%89%8D%E7%BC%80%E5%92%8C%EF%BC%8C%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%EF%BC%8C%E7%BA%BF%E6%AE%B5%E6%A0%91%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB </p><p>给出一个长度为N的数组，进行Q次查询，查询从第i个元素开始长度为l的子段所有元素之和。<br>例如，1 3 7 9 -1，查询第2个元素开始长度为3的子段和，1 {3 7 9} -1。3 + 7 + 9 = 19，输出19。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：一个数N，N为数组的长度(2 &lt;= N &lt;= 50000)。</p><p>第2 至 N + 1行：数组的N个元素。(-10^9 &lt;= N[i] &lt;= 10^9)<br>第N + 2行：1个数Q，Q为查询的数量。</p><p>第N + 3 至 N + Q + 2行：每行2个数，i，l（1 &lt;= i &lt;= N，i + l &lt;= N)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>共Q行，对应Q次查询的计算结果。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="number">-1</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">2</span> <span class="number">2</span></span><br><span class="line"><span class="number">3</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">16</span></span><br><span class="line"><span class="number">19</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>第一段先水一波前缀和,281ms</p><p>第二段再水一波树状数组，281ms</p><p>之前一直不是很懂树状数组原理，看了这篇突然有点懂了0.0 <a href="https://blog.csdn.net/int64ago/article/details/7429868" rel="external nofollow noopener noreferrer" target="_blank">搞懂树状数组</a></p><p>第三段最后水一波线段树，312ms</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line">using namespace std<span class="comment">;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#define LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> N=<span class="number">50005</span><span class="comment">;</span></span><br><span class="line">LL sum[N]<span class="comment">;</span></span><br><span class="line"><span class="built_in">int</span> main()&#123;</span><br><span class="line">    <span class="built_in">int</span> n,q,l,r<span class="comment">;</span></span><br><span class="line">    LL c<span class="comment">;</span></span><br><span class="line">    scanf(<span class="string">"%d"</span>,&amp;n)<span class="comment">;</span></span><br><span class="line">    sum[<span class="number">0</span>]=<span class="number">0</span><span class="comment">;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">1</span><span class="comment">;i&lt;=n;i++)&#123;</span></span><br><span class="line">        scanf(<span class="string">"%lld"</span>,&amp;c)<span class="comment">;</span></span><br><span class="line">        sum[i]=sum[i<span class="number">-1</span>]+c<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    scanf(<span class="string">"%d"</span>,&amp;q)<span class="comment">;</span></span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        scanf(<span class="string">"%d%d"</span>,&amp;l,&amp;r)<span class="comment">;</span></span><br><span class="line">        printf(<span class="string">"%lld\n"</span>,sum[l+r<span class="number">-1</span>]-sum[l<span class="number">-1</span>])<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">50005</span>;</span><br><span class="line">LL c[N],a[N],n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (x&amp;-x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">sum</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="comment">//求和1～x</span></span><br><span class="line">    LL ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        ans+=c[x];</span><br><span class="line">        x-=lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> d)</span></span>&#123;<span class="comment">//更新</span></span><br><span class="line">    <span class="keyword">while</span>(x&lt;=n)&#123;</span><br><span class="line">        c[x]+=d;</span><br><span class="line">        x+=lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> q,l,r;</span><br><span class="line">    LL c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">        add(i,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;q);</span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;l,&amp;r);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,sum(l+r<span class="number">-1</span>)-sum(l<span class="number">-1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson l,m,rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson m+1,r,rt&lt;&lt;1|1</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">50005</span>;</span><br><span class="line"></span><br><span class="line">LL sum[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">    sum[rt]=sum[rt&lt;&lt;<span class="number">1</span>]+sum[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>];</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;sum[rt]);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> m=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    build(lson);</span><br><span class="line">    build(rson);</span><br><span class="line">    pushup(rt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> add,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">        sum[rt]+=add;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> m=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(p&lt;=m)update(p,add,lson);</span><br><span class="line">    <span class="keyword">else</span> update(p,add,rson);</span><br><span class="line">    pushup(rt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">query</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L&lt;=l&amp;&amp;R&gt;=r)&#123;</span><br><span class="line">        <span class="keyword">return</span> sum[rt];</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">int</span> m=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    LL ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(L&lt;=m)ans+=query(L,R,lson);</span><br><span class="line">    <span class="keyword">if</span>(R&gt;m)ans+=query(L,R,rson);</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    build(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        <span class="keyword">int</span> a,b;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,query(a,a+b<span class="number">-1</span>,<span class="number">1</span>,n,<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树状数组 </tag>
            
            <tag> 前缀和 </tag>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1257 背包问题 V3（分数规划，二分）</title>
      <link href="/2018/09/17/1257%20%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%20V3%EF%BC%88%E4%BA%8C%E5%88%86%EF%BC%8C%E8%B4%AA%E5%BF%83%EF%BC%89/"/>
      <url>/2018/09/17/1257%20%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%20V3%EF%BC%88%E4%BA%8C%E5%88%86%EF%BC%8C%E8%B4%AA%E5%BF%83%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：3 秒 空间限制：131072 KB 51nod5级算法题</p><p>N个物品的体积为W1，W2……Wn（Wi为整数），与之相对应的价值为P1,P2……Pn（Pi为整数），从中选出K件物品（K &lt;= N)，使得单位体积的价值最大。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：包括2个数N, K(1 &lt;= K &lt;= N &lt;= 50000)</p><p>第2 - N + 1行：每行2个数Wi, Pi（1 &lt;= Wi, Pi &lt;= 50000)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出单位体积的价值（用约分后的分数表示）。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span>/<span class="number">4</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>一开始以为是贪心，直接取pi/wi最大的那k个，然后想想不对，因为如果p1=1,p2=101,w1=1000,w2=100000,如果照这种贪心策略就取第二个，但是这样体积很大，假如当前最优的W，P还需这两个之中的一个，那么(1+P)/(1000+W)可能比(101+P)/(100000+W)更优</p><p>所以贪心只能保证个体最优，却不能保证全局最优</p><p>这题的思路应当是二分单位体积最大价值，然后判断是否合法即可，也有用到贪心，不过不是上面那种贪心思路</p><p>判断是否合法的方法是，假设单位体积最大价值是p，<code>wp[i].v=wp[i].p-wp[i].w*p</code>，<code>wp[i].w*p</code>是当前物品体积需要的价值，然后就是贪心取最大的k个将其v值相加，判断是否大于等于0即可，因为反正多退少补的原则，大于等于0就合法</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">50005</span>;</span><br><span class="line">LL x,y;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">WP</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> w,p;</span><br><span class="line">    <span class="keyword">double</span> v;</span><br><span class="line">&#125;wp[N];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(struct WP wp1,struct WP wp2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> wp1.v&gt;wp2.v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">gcd</span><span class="params">(LL a,LL b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b==<span class="number">0</span>?a:gcd(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ok</span><span class="params">(<span class="keyword">double</span> p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)wp[i].v=wp[i].p-wp[i].w*p;</span><br><span class="line">    sort(wp,wp+n,cmp);</span><br><span class="line">    x=<span class="number">0</span>;y=<span class="number">0</span>;<span class="keyword">double</span> lp=<span class="number">0.0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;i++)&#123;</span><br><span class="line">        x+=wp[i].p;</span><br><span class="line">        y+=wp[i].w;</span><br><span class="line">        lp+=wp[i].v;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(lp&gt;=<span class="number">0</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;wp[i].w,&amp;wp[i].p);</span><br><span class="line">    <span class="keyword">double</span> l=<span class="number">0</span>,r=<span class="number">50000</span>,m;</span><br><span class="line">    LL fz,fm;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">fabs</span>(l-r)&gt;eps)&#123;</span><br><span class="line">        m=(l+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(ok(m))&#123;</span><br><span class="line">            l=m;</span><br><span class="line">            fz=x;fm=y;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> r=m;</span><br><span class="line">    &#125;</span><br><span class="line">    LL G=gcd(max(fz,fm),min(fz,fm));</span><br><span class="line">    fz/=G;</span><br><span class="line">    fm/=G;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld/%lld\n"</span>,fz,fm);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 二分 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 背包 </tag>
            
            <tag> 二分 </tag>
            
            <tag> 分数规划 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod 1086 背包问题 V2（二进制优化多重背包）</title>
      <link href="/2018/09/17/1086%20%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%20V2%EF%BC%88%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%BC%98%E5%8C%96%E5%A4%9A%E9%87%8D%E8%83%8C%E5%8C%85%EF%BC%89/"/>
      <url>/2018/09/17/1086%20%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%20V2%EF%BC%88%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%BC%98%E5%8C%96%E5%A4%9A%E9%87%8D%E8%83%8C%E5%8C%85%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB  51nod4级算法题</p><p>有N种物品，每种物品的数量为C1，C2……Cn。从中任选若干件放在容量为W的背包里，每种物品的体积为W1，W2……Wn（Wi为整数），与之相对应的价值为P1,P2……Pn（Pi为整数）。求背包能够容纳的最大价值。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行，2个整数，N和W中间用空格隔开。N为物品的种类，W为背包的容量。(1 &lt;= N &lt;= 100，1 &lt;= W &lt;= 50000)<br>第2 - N + 1行，每行3个整数，Wi，Pi和Ci分别是物品体积、价值和数量。(1 &lt;= Wi, Pi &lt;= 10000， 1 &lt;= Ci &lt;= 200)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出可以容纳的最大价值。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">6</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">2</span> <span class="number">5</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">3</span> <span class="number">8</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">4</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">9</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>先是水水的01背包<a href="https://leflacon.github.io/2018/09/17/1085%20%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%EF%BC%8801%E8%83%8C%E5%8C%85%EF%BC%89/">1085 背包问题（01背包）</a></p><p>这题与01背包不同在于每件物品有多个，思路还是一样，多一步把相同价值和重量的物品看成不同的物品，再按01背包的算法解决，但是01背包那个复杂度是<code>o（n*W）</code>，多重背包的n相当于c1+c2+……+cn，所以用二进制进一步优化</p><p>不把n件相同物品看成不同的n件，而是看成<code>(w,v),(2*w,2*v),(2^2*w,2^2*v)...</code>这样的形式，比如有15个价值1重量1的物品，就看成（1，1）（2，2）（4，4）（8，8）这样四件物品，14个就看成（1，1）（2，2）（4，4）（7，7），不是直接看二进制为1的位，而是要保证分出来的这些数能凑出[1,c]的所有数，这样就能用少少的物品数涵盖所有情况了</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line">using namespace std<span class="comment">;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> N=<span class="number">1005</span><span class="comment">;</span></span><br><span class="line"><span class="built_in">int</span> dp[<span class="number">50005</span>],w[N],p[N]<span class="comment">;</span></span><br><span class="line"><span class="built_in">int</span> main()&#123;</span><br><span class="line">    <span class="built_in">int</span> n,W,ww,pp,c<span class="comment">;</span></span><br><span class="line">    scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;W)<span class="comment">;</span></span><br><span class="line">    <span class="built_in">int</span> ji=<span class="number">0</span><span class="comment">;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">1</span><span class="comment">;i&lt;=n;i++)&#123;</span></span><br><span class="line">        scanf(<span class="string">"%d%d%d"</span>,&amp;ww,&amp;pp,&amp;c)<span class="comment">;</span></span><br><span class="line">        <span class="built_in">int</span> tmp=<span class="number">1</span><span class="comment">;</span></span><br><span class="line">        <span class="keyword">while</span>(c)&#123;</span><br><span class="line">            <span class="keyword">if</span>(c&gt;=tmp)&#123;</span><br><span class="line">                w[++ji]=tmp*ww<span class="comment">;</span></span><br><span class="line">                p[ji]=tmp*pp<span class="comment">;</span></span><br><span class="line">                c-=tmp<span class="comment">;</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                w[++ji]=c*ww<span class="comment">;</span></span><br><span class="line">                p[ji]=c*pp<span class="comment">;</span></span><br><span class="line">                c=<span class="number">0</span><span class="comment">;</span></span><br><span class="line">            &#125;</span><br><span class="line">            tmp*=<span class="number">2</span><span class="comment">;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">1</span><span class="comment">;i&lt;=ji;i++)&#123;</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> j=W<span class="comment">;j&gt;=w[i];j--)</span></span><br><span class="line">            dp[j]=max(dp[j],dp[j-w[i]]+p[i])<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    printf(<span class="string">"%d\n"</span>,dp[W])<span class="comment">;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> dp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 背包 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1085 背包问题（01背包）</title>
      <link href="/2018/09/17/1085%20%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%EF%BC%8801%E8%83%8C%E5%8C%85%EF%BC%89/"/>
      <url>/2018/09/17/1085%20%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%EF%BC%8801%E8%83%8C%E5%8C%85%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB </p><p>在N件物品取出若干件放在容量为W的背包里，每件物品的体积为W1，W2……Wn（Wi为整数），与之相对应的价值为P1,P2……Pn（Pi为整数）。求背包能够容纳的最大价值。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行，2个整数，N和W中间用空格隔开。N为物品的数量，W为背包的容量。(1 &lt;= N &lt;= 100，1 &lt;= W &lt;= 10000)<br>第2 - N + 1行，每行2个整数，Wi和Pi，分别是物品的体积和物品的价值。(1 &lt;= Wi, Pi &lt;= 10000)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出可以容纳的最大价值。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">6</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">5</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">8</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">9</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">14</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>01背包水题 </p><p>dp[w]表示容量为w能放的最大价值</p><p>dp[j]=max(dp[j],dp[j-w]+p);就是第i个物品不取和取</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line">using namespace std<span class="comment">;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> N=<span class="number">10005</span><span class="comment">;</span></span><br><span class="line"><span class="built_in">int</span> dp[N],a[<span class="number">105</span>]<span class="comment">;</span></span><br><span class="line"><span class="built_in">int</span> main()&#123;</span><br><span class="line">    <span class="built_in">int</span> n,W,w,p<span class="comment">;</span></span><br><span class="line">    scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;W)<span class="comment">;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">1</span><span class="comment">;i&lt;=n;i++)&#123;</span></span><br><span class="line">        scanf(<span class="string">"%d%d"</span>,&amp;w,&amp;p)<span class="comment">;</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> j=W<span class="comment">;j&gt;=w;j--)</span></span><br><span class="line">            dp[j]=max(dp[j],dp[j-w]+p)<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    printf(<span class="string">"%d\n"</span>,dp[W])<span class="comment">;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 背包 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1073 约瑟夫环（递推）</title>
      <link href="/2018/09/17/1073%20%E7%BA%A6%E7%91%9F%E5%A4%AB%E7%8E%AF%EF%BC%88%E9%80%92%E6%8E%A8%EF%BC%89/"/>
      <url>/2018/09/17/1073%20%E7%BA%A6%E7%91%9F%E5%A4%AB%E7%8E%AF%EF%BC%88%E9%80%92%E6%8E%A8%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB </p><p>N个人坐成一个圆环（编号为1 - N），从第1个人开始报数，数到K的人出列，后面的人重新从1开始报数。问最后剩下的人的编号。</p><p>例如：N = 3，K = 2。2号先出列，然后是1号，最后剩下的是3号。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>2个数N和K，表示N个人，数到K出列。(2 &lt;= N, K &lt;= 10^6)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>最后剩下的人的编号</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">2</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>好像是大一c++作业，当时还是直接模拟写的2333333</p><p>约瑟夫环结论见代码</p><p>证明如下：</p><p>n个人，编号1-n，从1开始报数，报到k的退出，剩下人继续从1开始报数</p><p>第一个人编号（k%n）出列，剩下的n-1个人组成一个新的约瑟夫环，从编号（k%n+1）开始，k+1,k+2…n-2,n-1,n,1,2…k-2,k-1，编号k+1的人报1，那么重新编号一下k+1-&gt;1,k+2-&gt;2…k-2-&gt;n-2,k-1-&gt;n-1，变成了n-1个人报数的子问题</p><p>那么根据这个新编号可以得到变回原编号的方程，即得到n个人情况的解，变回去的公式是，x’=(x+k)%n，所以问题就结局了，递推，要知道n-1人问题的解，只需要知道n-2人问题的解，然后继续往前得知道n-3问题的解</p><p>令f[i]表示i个人玩游戏报k退出最后胜利者的编号，f[1]=1; f[i]=(f[i-1]+k)%i; (i&gt;1) 有了这个公式，从2-n顺序算出f[i]的数值，编号从1开始，所以最后答案输出f[n]+1</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line">using namespace std<span class="comment">;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> main()&#123;</span><br><span class="line">    <span class="built_in">int</span> n,k<span class="comment">;</span></span><br><span class="line">    scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;k)<span class="comment">;</span></span><br><span class="line">    <span class="built_in">int</span> ans=<span class="number">0</span><span class="comment">;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">2</span><span class="comment">;i&lt;=n;i++)ans=(ans+k)%i;</span></span><br><span class="line">    printf(<span class="string">"%d\n"</span>,ans+<span class="number">1</span>)<span class="comment">;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 约瑟夫环 </tag>
            
            <tag> 推公式 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1106 质数检测（米勒罗宾判素数和直接判）</title>
      <link href="/2018/09/17/1106%20%E8%B4%A8%E6%95%B0%E6%A3%80%E6%B5%8B%EF%BC%88%E7%B1%B3%E5%8B%92%E7%BD%97%E5%AE%BE%E5%88%A4%E7%B4%A0%E6%95%B0%EF%BC%89/"/>
      <url>/2018/09/17/1106%20%E8%B4%A8%E6%95%B0%E6%A3%80%E6%B5%8B%EF%BC%88%E7%B1%B3%E5%8B%92%E7%BD%97%E5%AE%BE%E5%88%A4%E7%B4%A0%E6%95%B0%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB </p><p>给出N个正整数，检测每个数是否为质数。如果是，输出”Yes”，否则输出”No”。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：一个数N，表示正整数的数量。(1 &lt;= N &lt;= 1000)<br>第2 - N + 1行：每行1个数(2 &lt;= S[i] &lt;= 10^9)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出共N行，每行为 Yes 或 No。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">Yes</span></span><br><span class="line"><span class="literal">Yes</span></span><br><span class="line"><span class="literal">No</span></span><br><span class="line"><span class="literal">Yes</span></span><br><span class="line"><span class="literal">No</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>第一个代码是不知出自何处的米勒罗宾判素数的模版，懒得研究了直接模版吧。。这里设置了50次循环</p><p>反正原理是费马小定理，假如a是整数，p是质数，且a,p互质，那么a^(p-1)%p=1恒成立，</p><p>即若 a^(p-1)%p !=1 <code>(0&lt;a&lt;p)</code>，p一定是合数，若 a^(p-1)%p ==1 <code>(0&lt;a&lt;p)</code> 则它可能是合数可能是素数，概率算法的概率就在这个 a上体现</p><p>第二个代码是榜上学来的方法，这个想法蛮妙蛮清晰的，跑的比第一个快，就是先埃筛，然后先直接干掉偶数，对于奇数n，向上取整根号n得到e，然后如果所有[2,e]的质数都不能整除n的话，那么n肯定是个质数</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">witness</span><span class="params">(LL a,LL n)</span></span>&#123;</span><br><span class="line">    LL t,d,x;</span><br><span class="line">    d=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="built_in">ceil</span>(<span class="built_in">log</span>(n/<span class="number">1.0</span>)/<span class="built_in">log</span>(<span class="number">2.0</span>))<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        x=d;d=(d*d)%n;</span><br><span class="line">        <span class="keyword">if</span>(d==<span class="number">1</span>&amp;&amp;x!=<span class="number">1</span>&amp;&amp;x!=n<span class="number">-1</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span>(((n<span class="number">-1</span>)&amp;(<span class="number">1</span>&lt;&lt;i))&gt;<span class="number">0</span>)d=(d*a)%n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> d==<span class="number">1</span>?<span class="literal">false</span>:<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Miller_Rabin</span><span class="params">(LL n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">2</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>||((n&amp;<span class="number">1</span>)==<span class="number">0</span>))<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">50</span>;i++)&#123;</span><br><span class="line">        LL a=rand()*(n<span class="number">-2</span>)/RAND_MAX+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(witness(a, n))<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t,n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="keyword">if</span>(Miller_Rabin(n))<span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100005</span>;</span><br><span class="line"><span class="keyword">int</span> vis[N],prime[N],ji=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;N;i++)&#123;<span class="comment">//埃筛素数</span></span><br><span class="line">        <span class="keyword">if</span>(vis[i])<span class="keyword">continue</span>;</span><br><span class="line">        prime[ji++]=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>*i;j&lt;N;j+=i)vis[j]=<span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t,n;</span><br><span class="line">    init();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="keyword">if</span>((n&amp;<span class="number">1</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">puts</span>(n==<span class="number">2</span>?<span class="string">"YES"</span>:<span class="string">"NO"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> e=(<span class="keyword">int</span>)<span class="built_in">sqrt</span>(n)+<span class="number">1</span>,i;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>;prime[i]&lt;=e;i++)<span class="keyword">if</span>(n%prime[i]==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">        <span class="built_in">puts</span>(prime[i]&lt;=e?<span class="string">"NO"</span>:<span class="string">"YES"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 埃筛素数 </tag>
            
            <tag> 米勒罗宾 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1118 机器人走方格（组合数）</title>
      <link href="/2018/09/16/1118%20%E6%9C%BA%E5%99%A8%E4%BA%BA%E8%B5%B0%E6%96%B9%E6%A0%BC%EF%BC%88%E7%BB%84%E5%90%88%E6%95%B0%EF%BC%89/"/>
      <url>/2018/09/16/1118%20%E6%9C%BA%E5%99%A8%E4%BA%BA%E8%B5%B0%E6%96%B9%E6%A0%BC%EF%BC%88%E7%BB%84%E5%90%88%E6%95%B0%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB</p><p><code>M * N</code>的方格，一个机器人从左上走到右下，只能向右或向下走。有多少种不同的走法？由于方法数量可能很大，只需要输出Mod 10^9 + 7的结果。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行，2个数M,N，中间用空格隔开。（2 &lt;= m,n &lt;= 1000)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出走法的数量。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">2 </span><span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>C(m+n-2,m-1)，直接上组合数模版</p><p>组合数模版原理：<code>a/x mod p=a*x^(p-2) mod p</code></p><p>证明：</p><p>由费马小定理有<code>x^(p-1) mod p=1</code>，即<code>x*x^(p-2) mod p=1</code>，x和x^(p-2)互为逆元，所以<code>a/x mod p=a*x^(p-2) mod p</code>成立</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line">using namespace std<span class="comment">;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#define LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> p=<span class="number">1000000007</span><span class="comment">;</span></span><br><span class="line">LL qpow(LL a,LL b)&#123;</span><br><span class="line">    LL ans=<span class="number">1</span><span class="comment">;</span></span><br><span class="line">    a%=p<span class="comment">;</span></span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)&#123;</span><br><span class="line">            ans=ans*a%p<span class="comment">;</span></span><br><span class="line">            b--<span class="comment">;</span></span><br><span class="line">        &#125;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span><span class="comment">;</span></span><br><span class="line">        a=a*a%p<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans<span class="comment">;</span></span><br><span class="line">&#125;</span><br><span class="line">LL C(LL n,LL m)&#123;</span><br><span class="line">    <span class="keyword">if</span>(m&gt;n)<span class="keyword">return</span> <span class="number">0</span><span class="comment">;</span></span><br><span class="line">    LL ans=<span class="number">1</span><span class="comment">;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">1</span><span class="comment">;i&lt;=m;i++)&#123;</span></span><br><span class="line">        LL a=(n+i-m)%p<span class="comment">;</span></span><br><span class="line">        LL b=i%p<span class="comment">;</span></span><br><span class="line">        ans=ans*(a*qpow(b,p<span class="number">-2</span>)%p)%p<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans<span class="comment">;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">int</span> main()&#123;</span><br><span class="line">    LL m,n<span class="comment">;</span></span><br><span class="line">    scanf(<span class="string">"%lld%lld"</span>,&amp;m,&amp;n)<span class="comment">;</span></span><br><span class="line">    printf(<span class="string">"%lld\n"</span>,C(m+n<span class="number">-2</span>,m<span class="number">-1</span>))<span class="comment">;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逆元 </tag>
            
            <tag> 组合数 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1130 N的阶乘的长度 V2（斯特林公式取n阶乘位数）</title>
      <link href="/2018/09/16/%E6%96%AF%E7%89%B9%E6%9E%97%E5%85%AC%E5%BC%8F/"/>
      <url>/2018/09/16/%E6%96%AF%E7%89%B9%E6%9E%97%E5%85%AC%E5%BC%8F/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB </p><p>输入N求N的阶乘的10进制表示的长度。例如6! = 720，长度为3。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：一个数T，表示后面用作输入测试的数的数量。（1 &lt;= T &lt;= 1000)</p><p>第2 - T + 1行：每行1个数N。（1 &lt;= N &lt;= 10^9)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>共T行，输出对应的阶乘的长度。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>stirling公式</p><p><img src="/2018/09/16/斯特林公式/1.png" alt=""></p><p>因为这题是十进制，所以两边对10取对数得</p><p><img src="/2018/09/16/斯特林公式/2.png" alt=""></p><p>[ ]表示取整，即<code>LL ans=0.5*log10(2.0*PI*n)+n*log10(1.0*n/e)+1</code></p><p>同理，如果是a进制下的位数，数学公式懒得打了0.0直接放代码吧。。</p><p><code>LL ans=(0.5*log(2.0*PI*n)+n*log(1.0*n/e))/log(a)+1</code></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI=<span class="built_in">asin</span>(<span class="number">1.0</span>)*<span class="number">2</span>,e=<span class="number">2.718281828459</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t,n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        LL ans=<span class="number">0.5</span>*<span class="built_in">log10</span>(<span class="number">2.0</span>*PI*n)+n*<span class="built_in">log10</span>(<span class="number">1.0</span>*n/e)+<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 斯特林公式 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1134 最长递增子序列（dp）</title>
      <link href="/2018/09/16/1134%20%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97%EF%BC%88dp%EF%BC%89/"/>
      <url>/2018/09/16/1134%20%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97%EF%BC%88dp%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB </p><p>给出长度为N的数组，找出这个数组的最长递增子序列。(递增子序列是指，子序列的元素是递增的）</p><p>例如：5 1 6 8 2 4 5 10，最长递增子序列是1 2 4 5 10。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：1个数N，N为序列的长度(2 &lt;= N &lt;= 50000)<br>第2 - N + 1行：每行1个数，对应序列的元素(-10^9 &lt;= S[i] &lt;= 10^9)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出最长递增子序列的长度。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">10</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>一开始暴力dp然后又T又wa的。。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(int <span class="attribute">i</span>=2;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(int <span class="attribute">j</span>=i-1;j&gt;=0;j--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;a[j])dp[i]=max(dp[i],dp[j]+1);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">ans</span>=max(ans,dp[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>优化的方法见代码：</p><p>对样例来说5，1，6，8，2，4，5，10，dp[1]=5，dp[1]=1，dp[2]=6，dp[3]=8，dp[2]=2，dp[3]=4，dp[4]=5，dp[5]=10，答案为5</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line">using namespace std<span class="comment">;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> N=<span class="number">50005</span><span class="comment">;</span></span><br><span class="line"><span class="built_in">int</span> dp[N],a[N]<span class="comment">;</span></span><br><span class="line"><span class="built_in">int</span> main()&#123;</span><br><span class="line">    <span class="built_in">int</span> n,len=<span class="number">0</span><span class="comment">;</span></span><br><span class="line">    scanf(<span class="string">"%d"</span>,&amp;n)<span class="comment">;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">1</span><span class="comment">;i&lt;=n;i++)&#123;</span></span><br><span class="line">        scanf(<span class="string">"%d"</span>,&amp;a[i])<span class="comment">;</span></span><br><span class="line">        dp[i]=<span class="number">1</span><span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">1</span><span class="comment">;i&lt;=n;i++)&#123;</span></span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">1</span>)dp[++len]=a[i]<span class="comment">;</span></span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]&gt;dp[len])dp[++len]=a[i]<span class="comment">;</span></span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">int</span> cur=lower_bound(dp+<span class="number">1</span>,dp+len+<span class="number">1</span>,a[i])-dp<span class="comment">;</span></span><br><span class="line">                dp[cur]=a[i]<span class="comment">;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    printf(<span class="string">"%d\n"</span>,len)<span class="comment">;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dp </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1135 原根（原根性质）</title>
      <link href="/2018/09/16/1135%20%E5%8E%9F%E6%A0%B9%EF%BC%88%E5%8E%9F%E6%A0%B9%E6%80%A7%E8%B4%A8%EF%BC%89/"/>
      <url>/2018/09/16/1135%20%E5%8E%9F%E6%A0%B9%EF%BC%88%E5%8E%9F%E6%A0%B9%E6%80%A7%E8%B4%A8%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB </p><p>设m是正整数，a是整数，若a模m的阶等于φ(m)，则称a为模m的一个原根。（其中φ(m)表示m的欧拉函数）</p><p>给出1个质数P，找出P最小的原根。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>输入1个质数P(3 &lt;= P &lt;= 10^9)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出P最小的原根。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>百度百科关于阶的解释：</p><blockquote><p>其在数论中的定义为：</p><p>设a，p是整数，a和p互素，那么：</p><p>使 a^n≡1(mod p) 成立的最小正整数n叫做a模p的阶。</p></blockquote><p>百度百科关于原根的性质：</p><blockquote><p>原根具有以下性质：</p><p>（1）可以证明，如果正整数(a,m) = 1和正整数 d 满足a^d≡1(mod m)，则 d 整除 φ(m)。因此Ordm(a)整除φ(m)。在例子中，当a= 3时，我们仅需要验证 3 的 1 、2、3 和 6 次方模 7 的余数即可。</p><p>（2）记δ = Ordm(a)，则a^1，……a^(δ-1)模 m 两两不同余。因此当a是模m的原根时，a^0,a^1，……a^(δ-1)构成模 m 的简化剩余系。</p><p>（3）模m有原根的充要条件是m= 1,2,4,p,2p,p^n，其中p是奇质数，n是任意正整数。</p><p>（4）对正整数(a,m) = 1，如果 a 是模 m 的原根，那么 a 是整数模n乘法群（即加法群 Z/mZ的可逆元，也就是所有与 m 互素的正整数构成的等价类构成的乘法群）Zn的一个生成元。由于Zn有 φ(m)个元素，而它的生成元的个数就是它的可逆元个数，即 φ(φ(m))个，因此当模m有原根时，它有φ(φ(m))个原根。</p></blockquote><p>性质一大堆0.0，但是怎么求原根呢</p><p>首先p为质数，φ(p)=p-1，即a^n≡1(mod p)当且仅当n=p-1时成立，如果直接从1～n-2都暴力判断过去会妥妥的t</p><p>这时候性质的第一条就派上用场了：<code>可以证明，如果正整数(a,m) = 1和正整数 d 满足a^d≡1(mod m)，则 d 整除 φ(m)</code></p><p>举个例子：</p><p>假如输入的p=7，那么φ(p)=6</p><p>因为要找最小的那个，所以a从2开始找，2^3=8≡1(mod 7)，2^6=64≡1(mod7)，2^3≡2^6(mod7)，所以2不是模7的原根，那么a=3，3^1≡3(mod 7)，3^2≡2(mod 7)，3^3≡6(mod 7)，3^4≡4(mod 7)，3^5≡5(mod 7)，3^6≡1(mod 7)，按照定义3是模7的一个原根，而根据性质1，整除的才有可能得到1，所以只需要验证3^1，3^2，3^3，3^6即可，这样可以跑的飞快</p><p>最后代码就是先埃筛，再处理p-1的质因子b[i]，因为只要判断a^((p-1)/b[i])≡1(mod p)是否成立即可，只要有一个成立，那当前的a就不是原根</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1000005</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;p,b;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;<span class="comment">//埃筛素数</span></span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="literal">false</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=N;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[i])&#123;</span><br><span class="line">            p.push_back(i);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i+i;j&lt;=N;j+=i)vis[j]=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnum</span><span class="params">(LL n)</span></span>&#123;<span class="comment">//分解质因子</span></span><br><span class="line">    <span class="keyword">int</span> tmp=<span class="built_in">sqrt</span>(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;p.size();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n%p[i]==<span class="number">0</span>)&#123;</span><br><span class="line">            b.push_back(p[i]);</span><br><span class="line">            <span class="keyword">while</span>(n%p[i]==<span class="number">0</span>)n/=p[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n&gt;<span class="number">1</span>)b.push_back(n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">qpow</span><span class="params">(LL a,LL b,LL p)</span></span>&#123;</span><br><span class="line">    LL ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)&#123;</span><br><span class="line">            ans=(ans*a)%p;</span><br><span class="line">            b--;</span><br><span class="line">        &#125;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">        a=a*a%p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    LL x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;x);</span><br><span class="line">    init();</span><br><span class="line">    getnum(x<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;x;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;b.size();j++)&#123;</span><br><span class="line">            LL tmp=(x<span class="number">-1</span>)/b[j];</span><br><span class="line">            <span class="keyword">if</span>(qpow(i,tmp,x)==<span class="number">1</span>)&#123;</span><br><span class="line">                flag=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!flag)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,i);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 埃筛素数 </tag>
            
            <tag> 原根 </tag>
            
            <tag> 阶 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>codevs 1425 最长公共子串（STL）</title>
      <link href="/2018/09/15/codevs%201425%20%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E4%B8%B2%EF%BC%88STL%EF%BC%89/"/>
      <url>/2018/09/15/codevs%201425%20%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E4%B8%B2%EF%BC%88STL%EF%BC%89/</url>
      <content type="html"><![CDATA[<h3 id="题目描述-Description"><a href="#题目描述-Description" class="headerlink" title="题目描述 Description"></a>题目描述 Description</h3><p>输入N（2&lt;=N&lt;=20）个字符串，输出最长公共子串。</p><h3 id="输入描述-Input-Description"><a href="#输入描述-Input-Description" class="headerlink" title="输入描述 Input Description"></a>输入描述 Input Description</h3><p>输入N</p><p>再输入N个字符串</p><h3 id="输出描述-Output-Description"><a href="#输出描述-Output-Description" class="headerlink" title="输出描述 Output Description"></a>输出描述 Output Description</h3><p>输出最大公共子串。</p><h3 id="样例输入-Sample-Input"><a href="#样例输入-Sample-Input" class="headerlink" title="样例输入 Sample Input"></a>样例输入 Sample Input</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"></span><br><span class="line">abce</span><br><span class="line"></span><br><span class="line">cabk</span><br><span class="line"></span><br><span class="line">jaab</span><br></pre></td></tr></table></figure><h3 id="样例输出-Sample-Output"><a href="#样例输出-Sample-Output" class="headerlink" title="样例输出 Sample Output"></a>样例输出 Sample Output</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ab</span></span><br></pre></td></tr></table></figure><hr><p>substr(i,j)取出这段字符串</p><p>str.find(x）返回字符串x在str中的位置，如果没有找到，则返回-1</p><p>string::npos表示字符串的末尾</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">string</span> str[<span class="number">25</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">int</span> minlen=INT_MAX;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;str[i];</span><br><span class="line"><span class="keyword">if</span>(str[i].length()&lt;minlen)minlen=str[i].length();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;str[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//从最长的可能性开始找</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=minlen;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;str[<span class="number">0</span>].length()-i;j++)&#123;</span><br><span class="line"><span class="keyword">int</span> flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;n;k++)&#123;</span><br><span class="line"><span class="keyword">if</span>(str[k].find(str[<span class="number">0</span>].substr(j,i))==<span class="built_in">string</span>::npos)flag=<span class="number">0</span>;<span class="comment">//如果不匹配flag=0</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;str[<span class="number">0</span>].substr(j,i);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 杂 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stl </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 5448 Marisa’s Cake（凸多边形面积，推公式，前缀和）</title>
      <link href="/2018/09/15/Marisa%E2%80%99s%20Cake/"/>
      <url>/2018/09/15/Marisa%E2%80%99s%20Cake/</url>
      <content type="html"><![CDATA[<p><img src="/2018/09/15/Marisa’s Cake/6.png" alt=""></p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">0</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">2</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">9</span></span><br><span class="line"><span class="number">50</span></span><br></pre></td></tr></table></figure><h3 id="Source"><a href="#Source" class="headerlink" title="Source"></a>Source</h3><p>2015 ACM/ICPC Asia Regional Changchun Online</p><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给一个凸n边形，n个点任选大于等于三个点，求所Marisa’s Cake有情况的面积之和，答案为<code>2*S%(1e9+7)</code>，n&lt;1e6</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>面积用叉积算（计算几何里计算多边形面积）<br><img src="/2018/09/15/Marisa’s Cake/1.png" alt=""></p><p>随便展开n=5时的情况可以发现，每一项<code>Ci*Cj</code>其实有重复计算，因此试图求出<code>Ci*Cj</code>前的系数，任取两个点i，j，假设有<code>j&lt;i</code>然后考虑在j到i的逆时针方向区域内取点和在二者外部取点，易得方法数是个组合数的和，即2^?-1</p><p>最终会得到如下公式</p><p><img src="/2018/09/15/Marisa’s Cake/2.png" alt=""></p><p>化简推出的公式如下 但是照这个公式过不了样例</p><p><img src="/2018/09/15/Marisa’s Cake/3.png" alt=""></p><p>因为我愚蠢的忘了前后是在一个循环算的，二者循环次数不同，所以应将公式改为如下，使循环次数相同</p><p><img src="/2018/09/15/Marisa’s Cake/4.png" alt=""></p><p>按顺序记为一二三四部分</p><p>本来算上面这个式子要i和j都算过去，这样的复杂度是O(n^2),所以考虑优化，这里利用前缀和的思想，把上面这个式子分成四部分来看，第二和四部分利用前缀和每次累加上新的一个<code>Cj*2^(-j)</code>，具体见代码，所以最后这个问题只要O(n)扫一遍就好啦</p><p>开头要预处理 2^i 和 2^(-i) </p><p>然后由于我又愚蠢的初始化反了nx，ny，mx，my的值。。。就一直deeeeeeeebug</p><p>被注释掉的那段代码是费马小定理求2的逆元用的，后来发现其实没啥用。。直接inv2=(1e9+7+1)/2 多省事。。</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">    </span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100005</span>;</span><br><span class="line"><span class="keyword">const</span> LL inv2=<span class="number">500000004</span>;</span><br><span class="line"><span class="keyword">const</span> LL p=<span class="number">1000000007</span>;</span><br><span class="line">LL pow2[N],inv[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">LL x,y;</span><br><span class="line">&#125;tmp[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">pow2[<span class="number">0</span>]=inv[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;N;i++)&#123;</span><br><span class="line">pow2[i]=(pow2[i<span class="number">-1</span>]*<span class="number">2</span>)%p;</span><br><span class="line">inv[i]=(inv[i<span class="number">-1</span>]*inv2)%p;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">mul</span><span class="params">(LL x1,LL y1,LL x2,LL y2)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (x1*y2%p-x2*y1%p+p)%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">LL pow_mod(LL a,LL b,LL p)&#123;</span></span><br><span class="line"><span class="comment">    LL ret=1;</span></span><br><span class="line"><span class="comment">    while(b)&#123;</span></span><br><span class="line"><span class="comment">        if(b&amp;1)ret=(ret*a)%p;</span></span><br><span class="line"><span class="comment">        a=(a*a)%p;</span></span><br><span class="line"><span class="comment">        b&gt;&gt;=1;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    return ret;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">LL Fermat(LL a,LL p)&#123;</span></span><br><span class="line"><span class="comment">        return pow_mod(a,p-2,p);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t,n;</span><br><span class="line">LL ans;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">init();</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="comment">// printf("%lld",Fermat(2,1000000007));</span></span><br><span class="line">ans=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;tmp[i].x,&amp;tmp[i].y);</span><br><span class="line">LL nx=inv2*tmp[<span class="number">1</span>].x%p,ny=inv2*tmp[<span class="number">1</span>].y%p;</span><br><span class="line">LL mx=tmp[<span class="number">1</span>].x%p,my=tmp[<span class="number">1</span>].y%p;</span><br><span class="line"><span class="comment">// cout&lt;&lt;nx&lt;&lt;" "&lt;&lt;ny&lt;&lt;" "&lt;&lt;mx&lt;&lt;" "&lt;&lt;my&lt;&lt;endl; </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">ans=(ans+mul(pow2[i<span class="number">-1</span>]*tmp[i].x%p,pow2[i<span class="number">-1</span>]*tmp[i].y%p,nx,ny)+p)%p;</span><br><span class="line">nx=(nx+inv[i]*tmp[i].x%p)%p;</span><br><span class="line">ny=(ny+inv[i]*tmp[i].y%p)%p;</span><br><span class="line">ans=(ans-mul(pow2[n-i]*tmp[i].x%p,pow2[n-i]*tmp[i].y%p,mx,my)+p)%p;</span><br><span class="line">mx=(mx+pow2[i<span class="number">-1</span>]*tmp[i].x%p)%p;</span><br><span class="line">my=(my+pow2[i<span class="number">-1</span>]*tmp[i].y%p)%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans%p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 计算几何 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推公式 </tag>
            
            <tag> 前缀和 </tag>
            
            <tag> 计算几何 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Entertainment Box -- Nordic Collegiate Programming Contest 2015​（贪心，读题。。）</title>
      <link href="/2018/09/15/Entertainment%20Box%20--%20Nordic%20Collegiate%20Programming%20Contest%202015%E2%80%8B%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%8C%E8%AF%BB%E9%A2%98%E3%80%82%E3%80%82%EF%BC%89/"/>
      <url>/2018/09/15/Entertainment%20Box%20--%20Nordic%20Collegiate%20Programming%20Contest%202015%E2%80%8B%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%8C%E8%AF%BB%E9%A2%98%E3%80%82%E3%80%82%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="https://nanti.jisuanke.com/t/28880" rel="external nofollow noopener noreferrer" target="_blank">https://nanti.jisuanke.com/t/28880</a></p><p><img src="https://res.jisuanke.com/img/upload/20180715/4048c5a89f84ffebae8ded319176bb59c82b28ad.png" alt=""></p><p>Ada, Bertrand and Charles often argue over which TV shows to watch, and to avoid some of their fights they have finally decided to buy a video tape recorder. This fabulous, new device can record k different TV shows simultaneously, and whenever a show recorded in one the machine’s k slots ends, the machine is immediately ready to record another show in the same slot.</p><p>The three friends wonder how many TV shows they can record during one day. They provide you with the TV guide for today’s shows, and tell you the number of shows the machine can record simultaneously. How many shows can they record, using their recording machine? Count only shows that are recorded in their entirety.</p><h3 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h3><p>The first line of input contains two integers n,k<code>(1≤k&lt;n≤100000)</code>. Then follow n lines, each containing two integers xi​,yi, meaning that show i starts at time xi and finishes by time yi. This means that two shows i and j, where yi=xj, can be recorded, without conflict, in the same recording slot. You may assume that <code>0≤xi&lt;yi≤1000000000</code>.</p><h3 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h3><p>The output should contain exactly one line with a single integer: the maximum number of full shows from the TV guide that can be recorded with the tape recorder.</p><h3 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><h3 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">4 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">6</span></span><br><span class="line"><span class="symbol">7 </span><span class="number">8</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="样例输入3"><a href="#样例输入3" class="headerlink" title="样例输入3"></a>样例输入3</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">5 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">4</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">9</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">7</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">8</span></span><br><span class="line"><span class="symbol">6 </span><span class="number">10</span></span><br></pre></td></tr></table></figure><h3 id="样例输出3"><a href="#样例输出3" class="headerlink" title="样例输出3"></a>样例输出3</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>怎么会有这么难读懂的题(╯°□°）╯︵ ┻━┻</p><p>给你k个段，n个区间[l,r]，要求每个段内区间不重合，问你最多能填上几个区间</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>初始化每个段的当前末尾为0，存入vector中</p><p>把区间按r从小到大排序，r最小的最优，用upper_bound贪心的选段填，填好后更新那个段的末位位子，然后操作下一个区间</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100005</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">p</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line">&#125;q[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(p a,p b)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a.y!=b.y)<span class="keyword">return</span> a.y&lt;b.y;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> a.x&lt;b.x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,k,ans=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;k);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;q[i].x,&amp;q[i].y);</span><br><span class="line">&#125;</span><br><span class="line">sort(q,q+n,cmp);</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;c;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;i++)c.push_back(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> tmp=upper_bound(c.begin(),c.end(),q[i].x)-c.begin();</span><br><span class="line"><span class="keyword">if</span>(tmp!=<span class="number">0</span>)&#123;</span><br><span class="line">c.erase(c.begin()+tmp<span class="number">-1</span>);</span><br><span class="line">c.push_back(q[i].y);</span><br><span class="line">ans++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 贪心 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>poj 1328 Radar Installation（贪心，线段交集）</title>
      <link href="/2018/09/15/poj%201328%20Radar%20Installation%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%8C%E7%BA%BF%E6%AE%B5%E4%BA%A4%E9%9B%86%EF%BC%89/"/>
      <url>/2018/09/15/poj%201328%20Radar%20Installation%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%8C%E7%BA%BF%E6%AE%B5%E4%BA%A4%E9%9B%86%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://poj.org/problem?id=1328" rel="external nofollow noopener noreferrer" target="_blank">http://poj.org/problem?id=1328</a></p><p>Time Limit: 1000MS        Memory Limit: 10000K</p><p>Assume the coasting is an infinite straight line. Land is in one side of coasting, sea in the other. Each small island is a point locating in the sea side. And any radar installation, locating on the coasting, can only cover d distance, so an island in the sea can be covered by a radius installation, if the distance between them is at most d. </p><p>We use Cartesian coordinate system, defining the coasting is the x-axis. The sea side is above x-axis, and the land side below. Given the position of each island in the sea, and given the distance of the coverage of the radar installation, your task is to write a program to find the minimal number of radar installations to cover all the islands. Note that the position of an island is represented by its x-y coordinates. </p><p><img src="http://poj.org/images/1328_1.jpg" alt=""><br><strong>Figure A Sample Input of Radar Installations</strong></p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The input consists of several test cases. The first line of each case contains two integers n (1&lt;=n&lt;=1000) and d, where n is the number of islands in the sea and d is the distance of coverage of the radar installation. This is followed by n lines each containing two integers representing the coordinate of the position of each island. Then a blank line follows to separate the cases. </p><p>The input is terminated by a line containing pair of zeros </p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each test case output one line consisting of the test case number followed by the minimal number of radar installations needed. “-1” installation means no solution for that case.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">-3</span> <span class="number">1</span></span><br><span class="line"><span class="number">2</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">0</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="number">0</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Case</span> <span class="number">1</span>: <span class="number">2</span></span><br><span class="line"><span class="keyword">Case</span> <span class="number">2</span>: <span class="number">1</span></span><br></pre></td></tr></table></figure><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给一条直线，直线一侧有一些小岛，要在直线上放最少个数的半径为r的雷达，覆盖所有小岛</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>思路肯定是贪心，但是怎么贪心才能保证是最优的</p><p>如果直接画圆来贪心的满足各个岛屿的话，圆的位置其实是不好确定的，直接先满足最高的点然后平移圆不一定是最优策略，所以不妨反过来想：</p><p>以岛屿为圆心画圆，然后记录圆与直线相交的区间，只要雷达放在这个区间内，那么这个岛屿就一定可以被包含</p><p>这样问题就变的简单了，用所得的区间按照左端点从小到大排序，从第一个开始，如果和第二个区间有交集，那么这两个岛屿可以共用一个雷达，更新交集，然后同理看第三个区间，直到没有交集，就要增加一个雷达，记录新的区间</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;algorithm&gt;</span></span><br><span class="line"><span class="comment">#include &lt;cstdio&gt;</span></span><br><span class="line"><span class="comment">#include &lt;cstdlib&gt;</span></span><br><span class="line"><span class="comment">#include &lt;cstring&gt;</span></span><br><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include &lt;fstream&gt;</span></span><br><span class="line"><span class="comment">#include &lt;map&gt;</span></span><br><span class="line"><span class="comment">#include &lt;queue&gt;</span></span><br><span class="line"><span class="comment">#include &lt;cstring&gt;</span></span><br><span class="line"><span class="comment">#include &lt;set&gt;</span></span><br><span class="line"><span class="comment">#include &lt;cmath&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">const <span class="keyword">int</span> N=<span class="number">1005</span>;</span><br><span class="line">struct <span class="string">q&#123;</span></span><br><span class="line"><span class="string">    double l,r;</span></span><br><span class="line"><span class="string">&#125;</span><span class="string">q[N]</span>;</span><br><span class="line">bool cmp(struct <span class="keyword">q</span> q1,struct <span class="keyword">q</span> q2)&#123;</span><br><span class="line">    <span class="keyword">return</span> q1.l&lt;q2.l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> main()&#123;</span><br><span class="line">    <span class="keyword">int</span> n,r;</span><br><span class="line">    <span class="keyword">int</span> cas=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;r)&amp;&amp;(n||r))&#123;</span><br><span class="line">        double a,b;</span><br><span class="line">        <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            scanf(<span class="string">"%lf%lf"</span>,&amp;a,&amp;b);</span><br><span class="line">            <span class="keyword">if</span>(b&gt;r)flag=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="string">q[i]</span>.l=a*<span class="number">1.0</span>-<span class="keyword">sqrt</span>(r*r-b*b);</span><br><span class="line">                <span class="string">q[i]</span>.r=a*<span class="number">1.0</span>+<span class="keyword">sqrt</span>(r*r-b*b);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">            <span class="keyword">printf</span>(<span class="string">"Case %d: -1\n"</span>,++cas);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">sort</span>(<span class="keyword">q</span>,<span class="keyword">q</span>+n,cmp);</span><br><span class="line">        double ll=<span class="string">q[0]</span>.l,rr=<span class="string">q[0]</span>.r;</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="string">q[i]</span>.l&gt;rr)&#123;</span><br><span class="line">                ans++;</span><br><span class="line">                ll=<span class="string">q[i]</span>.l;rr=<span class="string">q[i]</span>.r;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                ll=<span class="string">q[i]</span>.l;</span><br><span class="line">                rr=min(rr,<span class="string">q[i]</span>.r);</span><br><span class="line">            &#125;   </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">printf</span>(<span class="string">"Case %d: %d\n"</span>,++cas,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 贪心 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>D.xor序列 -- 牛客练习赛26（线性基）</title>
      <link href="/2018/09/14/D.xor%E5%BA%8F%E5%88%97%20--%20%E7%89%9B%E5%AE%A2%E7%BB%83%E4%B9%A0%E8%B5%9B26%EF%BC%88%E7%BA%BF%E6%80%A7%E5%9F%BA%EF%BC%89/"/>
      <url>/2018/09/14/D.xor%E5%BA%8F%E5%88%97%20--%20%E7%89%9B%E5%AE%A2%E7%BB%83%E4%B9%A0%E8%B5%9B26%EF%BC%88%E7%BA%BF%E6%80%A7%E5%9F%BA%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="https://www.nowcoder.com/acm/contest/180/D" rel="external nofollow noopener noreferrer" target="_blank">https://www.nowcoder.com/acm/contest/180/D</a></p><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>小a有n个数，他提出了一个很有意思的问题：他想知道对于任意的x, y，能否将x与这n个数中的任意多个数异或任意多次后变为y</p><h3 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述:"></a>输入描述:</h3><p>第一行为一个整数n，表示元素个数<br>第二行一行包含n个整数，分别代表序列中的元素<br>第三行为一个整数Q，表示询问次数<br>接下来Q行，每行两个数x,y，含义如题所示   </p><h3 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述:"></a>输出描述:</h3><p>输出Q行，若x可以变换为y，输出“YES”，否则输出“NO”</p><h3 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例1</h3><p>输入</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">6 </span><span class="number">7</span> </span><br><span class="line"><span class="symbol">2 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">8</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">YES</span></span><br><span class="line"><span class="literal">YES</span></span><br><span class="line"><span class="literal">NO</span></span><br></pre></td></tr></table></figure><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>对于(6,7)来说，6可以先和3异或，再和2异或<br>对于(2,1)来说，2可以和3异或<br>对于(3,8)来说，3不论如何都不能变换为8   </p><h3 id="备注"><a href="#备注" class="headerlink" title="备注:"></a>备注:</h3><p>对于100%的数据，n,Q&lt;=10^5<br>保证所有运算均在int范围内</p><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>刚开始写线性基，随便写点啥吧</p><p>线性基就是把一组数转化成一个集合，新集合里所有数能相互异或得到原集合的所有相互异或得到的值，且线性基是满足这一条件的最小集合</p><p>随便举个例子，一个线性基大概长这个样子：（p[i]表示第i位为1）</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>??????   p[<span class="number">6</span>]</span><br><span class="line"><span class="number">01</span>?????   p[<span class="number">5</span>]</span><br><span class="line"><span class="number">001</span>????   p[<span class="number">4</span>]</span><br><span class="line"><span class="number">0001</span>???   p[<span class="number">3</span>]</span><br><span class="line"><span class="number">00001</span>??   p[<span class="number">2</span>]</span><br><span class="line"><span class="number">000001</span>?   p[<span class="number">1</span>]</span><br><span class="line"><span class="number">0000001</span>   p[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="number">0</span>表示这位没有，？表示这位是<span class="number">0</span>或<span class="number">1</span></span><br></pre></td></tr></table></figure><p>构造方法如下：</p><p>对每一个数c从高位到低位扫，扫到第i位为1时，若pi不存在，则pi=c并结束此数的扫描，否则令c=c^pi</p><p>把这个题目转化一下，假设集合里的n个数任取几个异或可以得到a，那么要判断x^a=y能否成立，移项一下就是判断a=x^y能否成立，所以题目就是求x^y任意异或这n个数能不能得到0</p><p>线性基的本质是贪心的思想</p><p>假设已经用n个数构造好了一组线性基，a=x^y最高位是第k位，那么找p[k]，因为p[k-i]的第k位都是0，所以如果要转化成0，必须异或上p[k]这个数，所以就更新a，a=a^p[k]，继续往下匹配</p><p>如果p[k]不存在，那么更新p[k]，p[k]=a;</p><p>那么要把第k位变成0，为什么不能异或p[k+i]呢，因为这样p[k+i]位是1，异或之后虽然p[k]位顺心如意的变成了0，但是p[k+i]却变成了1，而且继续往低位找这个1就绝对不可能被消掉了</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100005</span>;</span><br><span class="line">LL p[<span class="number">61</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(LL x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">60</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>((x&gt;&gt;i)&amp;<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!p[i])&#123;</span><br><span class="line">                p[i]=x;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> x^=p[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    LL c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;c);</span><br><span class="line">        f(c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        LL x,y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;x,&amp;y);</span><br><span class="line">        x=x^y;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">60</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">if</span>((x&gt;&gt;i)&amp;<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(!p[i])<span class="keyword">break</span>;</span><br><span class="line">                x=x^p[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(x==<span class="number">0</span>)<span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 贪心 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 贪心 </tag>
            
            <tag> 线性基 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>B.烟花 -- 牛客练习赛26（概率dp）</title>
      <link href="/2018/09/14/B.%E7%83%9F%E8%8A%B1%20--%20%E7%89%9B%E5%AE%A2%E7%BB%83%E4%B9%A0%E8%B5%9B26%EF%BC%88%E6%A6%82%E7%8E%87dp%EF%BC%89/"/>
      <url>/2018/09/14/B.%E7%83%9F%E8%8A%B1%20--%20%E7%89%9B%E5%AE%A2%E7%BB%83%E4%B9%A0%E8%B5%9B26%EF%BC%88%E6%A6%82%E7%8E%87dp%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="https://www.nowcoder.com/acm/contest/180/B" rel="external nofollow noopener noreferrer" target="_blank">https://www.nowcoder.com/acm/contest/180/B</a></p><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>小a有个烟花，每个烟花代表着互不相同的颜色，对于第i个烟花，它有pi的概率点燃，现在小a要去点燃它们，他想知道产生颜色的期望个数 及 产生恰好产生k种颜色的概率</p><h3 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述:"></a>输入描述:</h3><p>第一行两个整数n,k<br>接下来一行n个数，第i个数pi表示第i个烟花被点燃的概率</p><h3 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述:"></a>输出描述:</h3><p>输出有两行<br>第一行表示产生不同颜色的期望个数<br>第二行表示产生恰好k种颜色的概率<br>以换行符分割  </p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>输入</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">2</span></span><br><span class="line"><span class="number">0.5</span> <span class="number">0.25</span> <span class="number">0.75</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1<span class="selector-class">.5000</span></span><br><span class="line">0<span class="selector-class">.4062</span></span><br></pre></td></tr></table></figure><h3 id="备注"><a href="#备注" class="headerlink" title="备注:"></a>备注:</h3><p>对于30%的数据：n&lt;=6,k&lt;=n<br>对于100%的数据：<code>n&lt;=10^5,k&lt;=2*10^2</code><br>输出均保留4位小数,若你的答案误差与std不超过即为正确</p><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>第一问产生不同颜色的期望个数为：∑pi</p><p>第二问产生恰好k种颜色的概率：</p><p>用概率dp做，dp[i][j]表示前i个烟花恰好有j个点燃，根据第i个烟花点燃和没点燃的可能获得状态转移方程如下：<br><code>dp[i][j]=dp[i-1][j-1]*pi+dp[i-1][j]*(1-pi)</code></p><p>初始化dp[0][0]=1，0个烟花点燃0个概率是1，dp[0][i]=0，0个烟花点燃i个概率是0</p><p>还要初始化一下dp[i][0]的情况，就是i个烟花点燃0个，读入的时候累乘一下就行</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line">using namespace std<span class="comment">;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> N=<span class="number">100005</span><span class="comment">;</span></span><br><span class="line">double p[N],dp[N][<span class="number">300</span>]<span class="comment">;</span></span><br><span class="line"><span class="built_in">int</span> main()&#123;</span><br><span class="line">    <span class="built_in">int</span> n,k<span class="comment">;</span></span><br><span class="line">    scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;k)<span class="comment">;</span></span><br><span class="line">    double sum=<span class="number">0</span><span class="comment">;</span></span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span><span class="comment">;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">1</span><span class="comment">;i&lt;=n;i++)&#123;</span></span><br><span class="line">        scanf(<span class="string">"%lf"</span>,&amp;p[i])<span class="comment">;</span></span><br><span class="line">        sum+=p[i]<span class="comment">;</span></span><br><span class="line">        dp[<span class="number">0</span>][i]=<span class="number">0</span><span class="comment">;</span></span><br><span class="line">        dp[i][<span class="number">0</span>]=(<span class="number">1</span>-p[i])*dp[i<span class="number">-1</span>][<span class="number">0</span>]<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">1</span><span class="comment">;i&lt;=n;i++)</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> j=<span class="number">1</span><span class="comment">;j&lt;=k;j++)</span></span><br><span class="line">            dp[i][j]=dp[i<span class="number">-1</span>][j<span class="number">-1</span>]*p[i]+(<span class="number">1</span>-p[i])*dp[i<span class="number">-1</span>][j]<span class="comment">;</span></span><br><span class="line">    printf(<span class="string">"%.4lf\n%.4lf\n"</span>,sum,dp[n][k])<span class="comment">;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> dp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dp </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Best Solver -- ACM-ICPC 2015 Shenyang（推公式，广义斐波那契）</title>
      <link href="/2018/09/13/Best%20Solver/"/>
      <url>/2018/09/13/Best%20Solver/</url>
      <content type="html"><![CDATA[<p><a href="https://nanti.jisuanke.com/t/29121" rel="external nofollow noopener noreferrer" target="_blank">https://nanti.jisuanke.com/t/29121</a></p><p><img src="/2018/09/13/Best Solver/2.png" alt=""></p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">7</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">46337</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">46337</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">46337</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">46337</span></span><br><span class="line"><span class="symbol">21 </span><span class="number">46337</span></span><br><span class="line"><span class="symbol">321 </span><span class="number">46337</span></span><br><span class="line"><span class="symbol">4321 </span><span class="number">46337</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Case</span> <span class="meta">#1: 97</span></span><br><span class="line"><span class="keyword">Case</span> <span class="meta">#2: 969</span></span><br><span class="line"><span class="keyword">Case</span> <span class="meta">#3: 16537</span></span><br><span class="line"><span class="keyword">Case</span> <span class="meta">#4: 969</span></span><br><span class="line"><span class="keyword">Case</span> <span class="meta">#5: 40453</span></span><br><span class="line"><span class="keyword">Case</span> <span class="meta">#6: 10211</span></span><br><span class="line"><span class="keyword">Case</span> <span class="meta">#7: 17947</span></span><br></pre></td></tr></table></figure><h3 id="题目来源"><a href="#题目来源" class="headerlink" title="题目来源"></a>题目来源</h3><p>ACM-ICPC 2015 Shenyang Preliminary Contest</p><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p><img src="/2018/09/13/Best Solver/3.png" alt="">￼，求[y]%m</p><p>m&lt;=46337且为质数，x&lt;2^32</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>先凑个新的整数数列an出来，如下图：</p><p><img src="/2018/09/13/Best Solver/1.png" alt="">￼</p><p>由a0=2  a1=10  a2=98  a3=970  a4=9602  a5=95050</p><p>递推得<code>an=10*an-1-an-2</code></p><p>又因为an%m且m不大 所以找an的循环结（为什么有循环结？？！按题目m不大猜的。。）</p><p>然后求(2^x-1)对应的是循环中的哪个，那个值减一即为整数部分</p><p>2333333t了 233333a了 不用加欧拉函数的优化还快了一点点(#ﾟДﾟ)。。？？？迷啊迷</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long </span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">233333</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> p,f[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">f[<span class="number">1</span>]=<span class="number">10</span>;f[<span class="number">2</span>]=<span class="number">98</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;;i++)&#123;</span><br><span class="line">f[i]=(<span class="number">10</span>*f[i<span class="number">-1</span>]%p-f[i<span class="number">-2</span>]+p)%p;</span><br><span class="line"><span class="keyword">if</span>(f[i<span class="number">-2</span>]%p==<span class="number">2</span>&amp;&amp;f[i<span class="number">-1</span>]%p==<span class="number">10</span>)<span class="keyword">return</span> i<span class="number">-2</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">int phi(int x)&#123;</span></span><br><span class="line"><span class="comment">int ans=x;</span></span><br><span class="line"><span class="comment">for(int i=2;i*i&lt;=x;i++)&#123;</span></span><br><span class="line"><span class="comment">if(x%i==0)&#123;</span></span><br><span class="line"><span class="comment">ans=ans/i*(i-1);</span></span><br><span class="line"><span class="comment">while(x%i==0)x/=i;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">if(x&gt;1)ans=ans/x*(x-1);</span></span><br><span class="line"><span class="comment">return ans;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line"><span class="comment">// a=a%m;</span></span><br><span class="line"><span class="comment">// b=b%phi(m);</span></span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)&#123;</span><br><span class="line">            ans=ans*a%m;</span><br><span class="line">            b--;</span><br><span class="line">        &#125;</span><br><span class="line">        a=a*a%m;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=t;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;p);</span><br><span class="line"><span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line"><span class="keyword">int</span> cur=init();</span><br><span class="line"><span class="keyword">int</span> ans=(qpow(<span class="number">2</span>,x,cur)+<span class="number">1</span>)%cur;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Case #%d: %d\n"</span>,i,(f[ans]<span class="number">-1</span>+p)%p);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推公式 </tag>
            
            <tag> 斐波那契 </tag>
            
            <tag> 循环结 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>cf 1008D Pave the Parallelepiped --（容斥，gcd，推公式）</title>
      <link href="/2018/09/13/cf%201008D%20Pave%20the%20Parallelepiped%20--%EF%BC%88%E5%AE%B9%E6%96%A5%EF%BC%8Cgcd%EF%BC%8C%E6%8E%A8%E5%85%AC%E5%BC%8F%EF%BC%89/"/>
      <url>/2018/09/13/cf%201008D%20Pave%20the%20Parallelepiped%20--%EF%BC%88%E5%AE%B9%E6%96%A5%EF%BC%8Cgcd%EF%BC%8C%E6%8E%A8%E5%85%AC%E5%BC%8F%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/problemset/problem/1008/D" rel="external nofollow noopener noreferrer" target="_blank">http://codeforces.com/problemset/problem/1008/D</a></p><p>time limit per test2 seconds<br>memory limit per test256 megabytes</p><p>You are given a rectangular parallelepiped with sides of positive integer lengths<br>A, B and C.Find the number of different groups of three integers (a, b, c) such that 1≤a≤b≤c and parallelepiped A×B×C can be paved with parallelepipeds a×b×c. Note, that all small parallelepipeds have to be rotated in the same direction.</p><p>For example, parallelepiped 1×5×6 can be divided into parallelepipeds 1×3×5, but can not be divided into parallelepipeds 1×2×3.</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The first line contains a single integer t (1≤t≤10^5) — the number of test cases.Each of the next t lines contains three integers A, B and C (1<br>≤A,B,C≤10^5) — the sizes of the parallelepiped.</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each test case, print the number of different groups of three points that satisfy all given conditions.</p><p>Example</p><h3 id="input"><a href="#input" class="headerlink" title="input"></a>input</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">6</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">2</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">100 </span><span class="number">100</span> <span class="number">100</span></span><br></pre></td></tr></table></figure><h3 id="output"><a href="#output" class="headerlink" title="output"></a>output</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">165</span></span><br></pre></td></tr></table></figure><h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><p>In the first test case, rectangular parallelepiped (1,1,1) can be only divided into rectangular parallelepiped with sizes (1,1,1).</p><p>In the second test case, rectangular parallelepiped (1,6,1) can be divided into rectangular parallelepipeds with sizes (1,1,1), (1,1,2), (1,1,3) and (1,1,6).</p><p>In the third test case, rectangular parallelepiped (2,2,2) can be divided into rectangular parallelepipeds with sizes (1,1,1), (1,1,2), (1,2,2) and (2,2,2).</p><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给(A,B,C)，求无序三元组(a,b,c)满足<code>a|A,b|B,c|C</code>的种数，一共T组数据，T,A,B,C≤105</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>首先上一个小结论：从n个元素里允许重复地选择r个元素的方案数是C(r,n+r−1)</p><p>证明：设xi为n个元素里第i个元素的个数，则有方程x1+x2+……+xn=r，即n元一次方程非负整数解的个数，高中数学问题(｡･ω･｡)，<br>（x1+1）+（x2+1）+…+(xn+1)=n+r，隔板法得C(r,n+r−1)</p><p>考虑把所有因数分组，使得每一组的因数都不同，将其分为7组，用二进制状态s表示：第1位为1表示这个因数为A的因数，第2位为1表示这个因数为B的因数，第3位为1表示这个因数为C的因数 ，cnt[s]表示状态为s的因数的个数，用（gcd+容斥）求，然后abc枚举状态，先判断是否合法（是否ABC的因数都存在），合法就算组合数，use[i]表示三个数中状态为i的数有几个</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">100005</span>;</span><br><span class="line"><span class="keyword">int</span> n,q[MAXN],m,cnt[<span class="number">10</span>],use[<span class="number">10</span>],fac[MAXN];</span><br><span class="line"><span class="function">LL <span class="title">C</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)res*=(n-i+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)res/=i;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>((a&amp;<span class="number">1</span>)&amp;&amp;(b&amp;<span class="number">2</span>)&amp;&amp;(c&amp;<span class="number">4</span>))<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>((a&amp;<span class="number">1</span>)&amp;&amp;(c&amp;<span class="number">2</span>)&amp;&amp;(b&amp;<span class="number">4</span>))<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>((b&amp;<span class="number">1</span>)&amp;&amp;(a&amp;<span class="number">2</span>)&amp;&amp;(c&amp;<span class="number">4</span>))<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>((b&amp;<span class="number">1</span>)&amp;&amp;(c&amp;<span class="number">2</span>)&amp;&amp;(a&amp;<span class="number">4</span>))<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>((c&amp;<span class="number">1</span>)&amp;&amp;(a&amp;<span class="number">2</span>)&amp;&amp;(b&amp;<span class="number">4</span>))<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>((c&amp;<span class="number">1</span>)&amp;&amp;(b&amp;<span class="number">2</span>)&amp;&amp;(a&amp;<span class="number">4</span>))<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b==<span class="number">0</span>?a:gcd(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//预处理每个数的因数个数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;MAXN;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;MAXN;j+=i)</span><br><span class="line">            fac[j]++;</span><br><span class="line">    <span class="keyword">int</span> T,X,Y,Z;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    LL ans;</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;X,&amp;Y,&amp;Z);</span><br><span class="line">        m=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> xy=gcd(X,Y),yz=gcd(Y,Z),xz=gcd(X,Z);</span><br><span class="line">        <span class="keyword">int</span> xyz=gcd(xy,Z);</span><br><span class="line">        <span class="comment">//计算每种状态的因数个数</span></span><br><span class="line">        cnt[<span class="number">7</span>]=fac[xyz];<span class="comment">//111</span></span><br><span class="line">        cnt[<span class="number">6</span>]=fac[yz]-fac[xyz];<span class="comment">//110</span></span><br><span class="line">        cnt[<span class="number">5</span>]=fac[xz]-fac[xyz];<span class="comment">//101</span></span><br><span class="line">        cnt[<span class="number">4</span>]=fac[Z]-fac[xz]-fac[yz]+fac[xyz];<span class="comment">//100</span></span><br><span class="line">        cnt[<span class="number">3</span>]=fac[xy]-fac[xyz];<span class="comment">//011</span></span><br><span class="line">        cnt[<span class="number">2</span>]=fac[Y]-fac[yz]-fac[xy]+fac[xyz];<span class="comment">//010</span></span><br><span class="line">        cnt[<span class="number">1</span>]=fac[X]-fac[xy]-fac[xz]+fac[xyz];<span class="comment">//001</span></span><br><span class="line">        ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> a=<span class="number">1</span>;a&lt;<span class="number">8</span>;a++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> b=a;b&lt;<span class="number">8</span>;b++)</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> c=b;c&lt;<span class="number">8</span>;c++)</span><br><span class="line">                    <span class="keyword">if</span>(check(a,b,c))&#123;<span class="comment">//检查合法</span></span><br><span class="line">                        <span class="built_in">memset</span>(use,<span class="number">0</span>,<span class="keyword">sizeof</span>(use));</span><br><span class="line">                        use[a]++;use[b]++;use[c]++;</span><br><span class="line">                        LL tmp=<span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">                            <span class="keyword">if</span>(use[i])</span><br><span class="line">                            tmp*=C(cnt[i]+use[i]<span class="number">-1</span>,use[i]);<span class="comment">//组合数计算</span></span><br><span class="line">                        <span class="keyword">if</span>(tmp&gt;<span class="number">0</span>)ans+=tmp;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gcd </tag>
            
            <tag> 推公式 </tag>
            
            <tag> 容斥 </tag>
            
            <tag> cf </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Teemo&#39;s formula（推公式）</title>
      <link href="/2018/09/13/Teemo&#39;s%20formula%EF%BC%88%E6%8E%A8%E5%85%AC%E5%BC%8F%EF%BC%89/"/>
      <url>/2018/09/13/Teemo&#39;s%20formula%EF%BC%88%E6%8E%A8%E5%85%AC%E5%BC%8F%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="https://nanti.jisuanke.com/t/29324" rel="external nofollow noopener noreferrer" target="_blank">https://nanti.jisuanke.com/t/29324</a></p><p>Teemo has a formula and he want to calculate it quickly.</p><p>The formula is <img src="http://latex.codecogs.com/gif.latex?%5Csum_%7Bi%3D1%7D%5E%7Bn%7Dk%5E%7B2%7DC_%7Bn%7D%5E%7Bk%7D" alt="">.</p><p>As the result may be very large, please output the result mod 1000000007.</p><h3 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h3><p>The input contains several test cases, and the first line is a positive integer T indicating the number of test cases which is up to 10^5.</p><p>For each test case, the first line contains an integer n(1&lt;=n&lt;=10^9).</p><h3 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h3><p>For each test case, output a line containing an integer that indicates the answer.</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">24</span></span><br></pre></td></tr></table></figure><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p><img src="http://latex.codecogs.com/gif.latex?%5Csum_%7Bi%3D1%7D%5E%7Bn%7Dk%5E%7B2%7DC_%7Bn%7D%5E%7Bk%7D" alt=""></p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>先上结论，<code>n*(n+1)*2^(n-2)</code></p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Σ[(k^<span class="number">2</span>)*C(<span class="built_in">n</span>,k)]=Σ[k*(k-<span class="number">1</span>)*C(<span class="built_in">n</span>,k)]+Σ[k*C(<span class="built_in">n</span>,k)])</span><br><span class="line"></span><br><span class="line">Σ[k(k-<span class="number">1</span>)*C(<span class="built_in">n</span>,k)]=Σ(<span class="built_in">n</span>(<span class="comment">n-1</span>)*[C(<span class="built_in">n</span>-<span class="number">2</span>,k)]=<span class="built_in">n</span>(<span class="comment">n-1</span>)*<span class="number">2</span>^(<span class="built_in">n</span>-<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">Σ[k*C(<span class="built_in">n</span>,k)])=Σ[<span class="built_in">n</span>*C(<span class="built_in">n</span>-<span class="number">1</span>,k)])=<span class="built_in">n</span>*<span class="number">2</span>^(<span class="built_in">n</span>-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">Σ[(k^<span class="number">2</span>)*C(<span class="built_in">n</span>,k)]=<span class="built_in">n</span>(<span class="comment">n-1</span>)*<span class="number">2</span>^(<span class="built_in">n</span>-<span class="number">2</span>)+<span class="built_in">n</span>*<span class="number">2</span>^(<span class="built_in">n</span>-<span class="number">1</span>)=<span class="built_in">n</span>*(<span class="built_in">n</span>+<span class="number">1</span>)*<span class="number">2</span>^(<span class="built_in">n</span>-<span class="number">2</span>)</span><br></pre></td></tr></table></figure><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;deque&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;numeric&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;limits&gt;</span></span></span><br><span class="line">using namespace std<span class="comment">;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> N=<span class="number">100005</span><span class="comment">;</span></span><br><span class="line"><span class="meta">#define LL long long</span></span><br><span class="line"><span class="keyword">const</span> LL p=<span class="number">1000000007</span><span class="comment">;</span></span><br><span class="line"></span><br><span class="line">LL qpow(LL a,LL b)&#123;</span><br><span class="line">    LL ans=<span class="number">1</span><span class="comment">;</span></span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)&#123;</span><br><span class="line">            ans=ans*a%p<span class="comment">;</span></span><br><span class="line">            b--<span class="comment">;</span></span><br><span class="line">        &#125;</span><br><span class="line">        a=a*a%p<span class="comment">;</span></span><br><span class="line">        b&gt;&gt;=<span class="number">1</span><span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans<span class="comment">;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">int</span> main()&#123;</span><br><span class="line">    <span class="built_in">int</span> t<span class="comment">;</span></span><br><span class="line">    scanf(<span class="string">"%d"</span>,&amp;t)<span class="comment">;</span></span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        LL n<span class="comment">;</span></span><br><span class="line">        scanf(<span class="string">"%lld"</span>,&amp;n)<span class="comment">;</span></span><br><span class="line">        LL res=(qpow(<span class="number">2</span>,n<span class="number">-2</span>)*(n*(n+<span class="number">1</span>)%p))%p<span class="comment">;</span></span><br><span class="line">        printf(<span class="string">"%lld\n"</span>,res)<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推公式 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Fence Building -- ACM-ICPC 2017 Asia Urumqi（欧拉公式，分割平面，大组合数）</title>
      <link href="/2018/09/13/Fence%20Building%20--%20ACM-ICPC%202017%20Asia%20Urumqi%EF%BC%88%E6%AC%A7%E6%8B%89%E5%85%AC%E5%BC%8F%EF%BC%8C%E5%88%86%E5%89%B2%E5%B9%B3%E9%9D%A2%EF%BC%8C%E5%A4%A7%E7%BB%84%E5%90%88%E6%95%B0%EF%BC%89/"/>
      <url>/2018/09/13/Fence%20Building%20--%20ACM-ICPC%202017%20Asia%20Urumqi%EF%BC%88%E6%AC%A7%E6%8B%89%E5%85%AC%E5%BC%8F%EF%BC%8C%E5%88%86%E5%89%B2%E5%B9%B3%E9%9D%A2%EF%BC%8C%E5%A4%A7%E7%BB%84%E5%90%88%E6%95%B0%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="https://nanti.jisuanke.com/t/19939" rel="external nofollow noopener noreferrer" target="_blank">https://nanti.jisuanke.com/t/19939</a><br><img src="https://res.jisuanke.com/img/upload/20171219/40b0664b58afd8a8681063b2e63ffd46d77fb902.png" alt=""></p><p>Farmer John owns a farm. He first builds a circle fence. Then, he will choose n points and build some straight fences connecting them. Next, he will feed a cow in each region so that cows cannot play with each other without breaking the fences. In order to feed more cows, he also wants to have as many regions as possible. However, he is busy building fences now, so he needs your help to determine what is the maximum number of cows he can feed if he chooses these n points properly.</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The first line contains an integer 1≤T≤100000, the number of test cases. For each test case, there is one line that contains an integer n. It is guaranteed that 1≤T≤10^5 and 1≤n≤10^18.</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each test case, you should output a line ”Case #i: ans” where i is the test caseS number, starting from 1 and ans is the remainder of the maximum number of cows farmer John can feed when divided by 10^9 + 7.</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Case</span> <span class="meta">#1: 1</span></span><br><span class="line"><span class="keyword">Case</span> <span class="meta">#2: 4</span></span><br><span class="line"><span class="keyword">Case</span> <span class="meta">#3: 16</span></span><br></pre></td></tr></table></figure><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给一个圆，在圆周上找n个点，连线，将圆划分区域的最大值</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>多面体欧拉公式：</p><blockquote><p>V+F-E=X(P)，V是多面体P的顶点个数，F是多面体P的面数，E是多面体P的棱的条数，X(P)是多面体P的欧拉示性数</p></blockquote><p>平面欧拉公式：V-E+F=2，（V、E、F表示简单几何体的顶点数、边数、面数），即 点-边+面=2</p><p>证明见度娘～<a href="https://baike.baidu.com/item/%E6%AC%A7%E6%8B%89%E5%85%AC%E5%BC%8F/92066?fr=aladdin" rel="external nofollow noopener noreferrer" target="_blank">欧拉公式</a></p><p>对于这题来说，圆周上每四个点可以在圆内产生一个新的交叉点，所以点数为<code>c(n,4)+n</code></p><p>每两个点可以产生一条边，形成交点处额外贡献两个边，所以加上<code>2*c(n,4)</code>，边数为<code>n+2*c(n,4)+c(n,2)</code></p><p>要减去外面的大区域1，所以ans为（边-点+1）即C(n,4)+C(n,2)+1</p><p>因为这题n是1e18，所以要用卢卡斯定理大组合数模版一下</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> LL p=<span class="number">1000000007</span>;</span><br><span class="line"><span class="function">LL <span class="title">qpow</span><span class="params">(LL a,LL b)</span></span>&#123;</span><br><span class="line">    LL ans=<span class="number">1</span>;</span><br><span class="line">    a%=p;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)&#123;</span><br><span class="line">            ans=ans*a%p;</span><br><span class="line">            b--;</span><br><span class="line">        &#125;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">        a=a*a%p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">C</span><span class="params">(LL n,LL m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(m&gt;n)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    LL ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        LL a=(n+i-m)%p;</span><br><span class="line">        LL b=i%p;</span><br><span class="line">        ans=ans*(a*qpow(b,p<span class="number">-2</span>)%p)%p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">lucas</span><span class="params">(LL n,LL m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(m==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> C(n%p,m%p)*lucas(n/p,m/p)%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=t;i++)&#123;</span><br><span class="line">        LL n;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">        LL ans=(lucas(n,<span class="number">4</span>)+lucas(n,<span class="number">2</span>)+<span class="number">1</span>)%p;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case #%d: %lld\n"</span>,i,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推公式 </tag>
            
            <tag> 组合数 </tag>
            
            <tag> 分割平面 </tag>
            
            <tag> 欧拉公式 </tag>
            
            <tag> 卢卡斯定理 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Sum of the Line -- ACM-ICPC 2017 Asia Urumqi（容斥，平方和，逆元）</title>
      <link href="/2018/09/13/Sum%20of%20the%20Line/"/>
      <url>/2018/09/13/Sum%20of%20the%20Line/</url>
      <content type="html"><![CDATA[<p><a href="https://nanti.jisuanke.com/t/28970" rel="external nofollow noopener noreferrer" target="_blank">https://nanti.jisuanke.com/t/28970</a></p><p><img src="/2018/09/13/Sum of the Line/1.png" alt=""></p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>求1-n中与n互质的数的平方和</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>把这个题的代码改改就能交了<br><a href="https://leflacon.github.io/2018/09/13/hdu4059/">hdu 4059 The Boss on Mars（容斥，四次方和，逆元）</a></p><p>思路和上面那个hdu4059一毛一样：转化为求1-n中与n不互质的数的平方的和，所以要先筛出素因子，然后利用容斥原理求解</p><p>下面是具体做法：</p><p>首先抛一个平方和公式<code>1^2+2^2+...+n^2=n*(n+1)*(2*n+1)/6</code><br>公式里有个除以6，求逆元费马小定理一下，除以6就是乘以pow(6,p-2)%p</p><p>getnum(n)那个函数就是用来求平方和，然后就是容斥了</p><p>举个例子，比如n=6，素因子是2，3，存入vector中，然后ans=1^2+2^2+3^2+4^2+5^2+6^2，接下来枚举状态 [1,2^2)，即01，10，11，（第i位为1表示取第i个素因子），a记录当前状态素因子个数来确定容斥正负号，now记录当前状态素因子之积，那么答案就是：<code>ans=ans-2^2*(3^2+2^2+1^2)-3^2*(2^2+1^2)+6^2*(1^2)</code>，getnum(n/now)这个很巧妙的把该因子所有的倍数都算上了，2^2*(3^2+2^2+1^2)也就是2和2的所有倍数的平方和（6^2+4^2+2^2）</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> p=<span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1000005</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">100000005</span>;</span><br><span class="line">LL inv6,n;</span><br><span class="line"><span class="keyword">int</span> prime[N],ji;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="built_in">vector</span>&lt;LL&gt;v;</span><br><span class="line"><span class="function">LL <span class="title">qpow</span><span class="params">(LL a,LL b)</span></span>&#123;</span><br><span class="line">    LL ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)&#123;</span><br><span class="line">            ans=(ans*a)%p;</span><br><span class="line">            b--;</span><br><span class="line">        &#125;</span><br><span class="line">        b/=<span class="number">2</span>;</span><br><span class="line">        a=a*a%p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">inv6=qpow(<span class="number">6L</span>L,p<span class="number">-2</span>);</span><br><span class="line">ji=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="literal">false</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i*i&lt;=MAXN;i++)&#123;<span class="comment">//埃筛素数</span></span><br><span class="line"><span class="keyword">if</span>(vis[i])<span class="keyword">continue</span>;</span><br><span class="line">prime[ji++]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>*i;j&lt;N;j+=i)vis[j]=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">getnum</span><span class="params">(LL n)</span></span>&#123;</span><br><span class="line"><span class="comment">//1^2+2^2+...+n^2=n*(n+1)*(2*n+1)/6</span></span><br><span class="line">LL ans;</span><br><span class="line">ans=(n*(n+<span class="number">1</span>)%p*(<span class="number">2</span>*n+<span class="number">1</span>)%p)%p;</span><br><span class="line">ans=(ans*inv6)%p;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">v.clear();</span><br><span class="line">LL tmp=n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;ji;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(tmp%prime[i]==<span class="number">0</span>)&#123;</span><br><span class="line">v.push_back(prime[i]);</span><br><span class="line"><span class="keyword">while</span>(tmp%prime[i]==<span class="number">0</span>)tmp/=prime[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(tmp&gt;<span class="number">1</span>)v.push_back(tmp);</span><br><span class="line">LL ans=getnum(n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;(<span class="number">1</span>&lt;&lt;v.size());i++)&#123;</span><br><span class="line"><span class="keyword">int</span> a=<span class="number">0</span>;</span><br><span class="line">LL now=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;v.size();j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i&amp;(<span class="number">1</span>&lt;&lt;j))&#123;</span><br><span class="line">a++;</span><br><span class="line">now=now*v[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">LL res=qpow(now,<span class="number">2L</span>L)*(getnum(n/now)%p)%p;</span><br><span class="line"><span class="keyword">if</span>(a&amp;<span class="number">1</span>)ans=(ans-res+p)%p;</span><br><span class="line"><span class="keyword">else</span> ans=(ans+res+p)%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">    solve();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逆元 </tag>
            
            <tag> 容斥 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 4059 The Boss on Mars（与n互质的数的四次方的和）</title>
      <link href="/2018/09/13/hdu4059/"/>
      <url>/2018/09/13/hdu4059/</url>
      <content type="html"><![CDATA[<p>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 32768/32768 K (Java/Others)<br><a href="http://acm.hdu.edu.cn/showproblem.php?pid=4059" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=4059</a></p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>On Mars, there is a huge company called ACM (A huge Company on Mars), and it’s owned by a younger boss.</p><p>Due to no moons around Mars, the employees can only get the salaries per-year. There are n employees in ACM, and it’s time for them to get salaries from their boss. All employees are numbered from 1 to n. With the unknown reasons, if the employee’s work number is k, he can get k^4 Mars dollars this year. So the employees working for the ACM are very rich.</p><p>Because the number of employees is so large that the boss of ACM must distribute too much money, he wants to fire the people whose work number is co-prime with n next year. Now the boss wants to know how much he will save after the dismissal.</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The first line contains an integer T indicating the number of test cases. (1 ≤ T ≤ 1000) Each test case, there is only one integer n, indicating the number of employees in ACM. (1 ≤ n ≤ 10^8)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each test case, output an integer indicating the money the boss can save. Because the answer is so large, please module the answer with 1,000,000,007.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">82</span></span><br><span class="line"><span class="number">354</span></span><br></pre></td></tr></table></figure><h3 id="Hint"><a href="#Hint" class="headerlink" title="Hint"></a>Hint</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Case1: sum=1+3<span class="emphasis">*3*</span>3*3=82</span><br><span class="line">Case2: sum=1+2<span class="emphasis">*2*</span>2<span class="emphasis">*2+3*</span>3<span class="emphasis">*3*</span>3+4<span class="emphasis">*4*</span>4*4=354</span><br></pre></td></tr></table></figure><h3 id="Author"><a href="#Author" class="headerlink" title="Author"></a>Author</h3><p>ZHANG, Chao</p><h3 id="Source"><a href="#Source" class="headerlink" title="Source"></a>Source</h3><p>2011 Asia Dalian Regional Contest</p><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>求1-n中与n互质的数的四次方的和</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>这题的思路是：转化为求1-n中与n不互质的数的四次方的和，所以要先筛出素因子，然后利用容斥原理求解</p><p>下面是具体做法：</p><p>首先抛一个<strong>四次方求和公式</strong></p><p><img src="/2018/09/13/hdu4059/1.png" alt=""></p><p>推导过程如下：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">(x+<span class="number">1</span>)^<span class="number">5</span>=x^<span class="number">5</span>+<span class="number">5</span>*x^<span class="number">4</span>+<span class="number">10</span>*x^<span class="number">3</span>+<span class="number">10</span>*x^<span class="number">2</span>+<span class="number">5</span>*x+<span class="number">1</span></span><br><span class="line"></span><br><span class="line">然后从x=<span class="number">1</span>开始列出n个式子</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>^<span class="number">5</span>=(<span class="number">1</span>+<span class="number">1</span>)^<span class="number">5</span>=<span class="number">1</span>^<span class="number">5</span>+<span class="number">5</span>*<span class="number">1</span>^<span class="number">4</span>+<span class="number">10</span>*<span class="number">1</span>^<span class="number">3</span>+<span class="number">10</span>*<span class="number">1</span>^<span class="number">2</span>+<span class="number">5</span>*<span class="number">1</span>^<span class="number">1</span>+<span class="number">1</span>;</span><br><span class="line"><span class="number">3</span>^<span class="number">5</span>=(<span class="number">2</span>+<span class="number">1</span>)^<span class="number">5</span>=<span class="number">2</span>^<span class="number">5</span>+<span class="number">5</span>*<span class="number">2</span>^<span class="number">4</span>+<span class="number">10</span>*<span class="number">2</span>^<span class="number">3</span>+<span class="number">10</span>*<span class="number">2</span>^<span class="number">2</span>+<span class="number">5</span>*<span class="number">2</span>^<span class="number">1</span>+<span class="number">1</span>;</span><br><span class="line">……</span><br><span class="line">(n+<span class="number">1</span>)^<span class="number">5</span>=(n+<span class="number">1</span>)^<span class="number">5</span>=n^<span class="number">5</span>+<span class="number">5</span>*n^<span class="number">4</span>+<span class="number">10</span>*n^<span class="number">3</span>+<span class="number">10</span>*n^<span class="number">2</span>+<span class="number">5</span>*n^<span class="number">1</span>+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">叠加得：</span><br><span class="line">(n+<span class="number">1</span>)^<span class="number">5</span>=<span class="number">1</span>+<span class="number">5</span>*(<span class="number">1</span>^<span class="number">4</span>+<span class="number">2</span>^<span class="number">4</span>+……n^<span class="number">4</span>)+<span class="number">10</span>*(<span class="number">1</span>^<span class="number">3</span>+<span class="number">2</span>^<span class="number">3</span>+……+n^<span class="number">3</span>)+<span class="number">10</span>*(<span class="number">1</span>^<span class="number">2</span>+<span class="number">2</span>^<span class="number">2</span>+……+n^<span class="number">2</span>)+<span class="number">5</span>*(<span class="number">1</span>+<span class="number">2</span>+……+n)+n</span><br><span class="line"></span><br><span class="line">再代入</span><br><span class="line">(<span class="number">1</span>^<span class="number">3</span>+<span class="number">2</span>^<span class="number">3</span>+……n^<span class="number">3</span>)=(n+<span class="number">1</span>)^<span class="number">2</span>*n^<span class="number">2</span>/<span class="number">4</span>，</span><br><span class="line">(<span class="number">1</span>^<span class="number">2</span>+<span class="number">2</span>^<span class="number">2</span>+……n^<span class="number">2</span>)=n*(n+<span class="number">1</span>)*(<span class="number">2</span>*n+<span class="number">1</span>)/<span class="number">6</span>，</span><br><span class="line">(<span class="number">1</span>+<span class="number">2</span>+……+n)=n*(n+<span class="number">1</span>)/<span class="number">2</span></span><br><span class="line"></span><br><span class="line">即得</span><br><span class="line">(<span class="number">1</span>^<span class="number">4</span>+<span class="number">2</span>^<span class="number">4</span>+……+n^<span class="number">4</span>)=n*(n+<span class="number">1</span>)*(<span class="number">2</span>n+<span class="number">1</span>)*(<span class="number">3</span>*n*n+<span class="number">3</span>*n<span class="number">-1</span>)/<span class="number">30</span>;</span><br></pre></td></tr></table></figure><p>公式里有个除以30，那么显然要用到逆元的知识了，费马小定理一下，除以30就是乘以<code>pow(30,p-2)%p</code></p><p>getnum(n)那个函数就是用来求四次方和的，写的时候括号来括号去的要小心0.0，反正我偷懒写一行然后wa了几次。。下次还是分开写清楚点。。（补上分开写的了，不过注释掉了）</p><p>然后就是容斥了</p><p>来举个例子吧，比如n=6，素因子是2，3，存入vector中，然后ans=1^4+2^4+3^4+4^4+5^4+6^4=2275，接下来枚举状态 [1,2^2)，即01，10，11，（第i位为1表示取第i个素因子），a记录当前状态素因子个数来确定容斥正负号，now记录当前状态素因子之积，那么答案就是：<code>ans=ans-2^4*(3^4+2^4+1^4)-3^4*(2^4+1^4)+6^4*(1^4)</code>，getnum(n/now)这个很巧妙的把该因子所有的倍数都算上了，2^4*(3^4+2^4+1^4)也就是2和2的所有倍数的四次方和（6^4+4^4+2^4）</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> p=<span class="number">1000000007</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100005</span>;</span><br><span class="line">LL inv30,n;</span><br><span class="line"><span class="keyword">int</span> prime[N],ji;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="built_in">vector</span>&lt;LL&gt;v;</span><br><span class="line"><span class="function">LL <span class="title">qpow</span><span class="params">(LL a,LL b)</span></span>&#123;</span><br><span class="line">    LL ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)&#123;</span><br><span class="line">            ans=(ans*a)%p;</span><br><span class="line">            b--;</span><br><span class="line">        &#125;</span><br><span class="line">        b/=<span class="number">2</span>;</span><br><span class="line">        a=a*a%p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">inv30=qpow(<span class="number">30L</span>L,p<span class="number">-2</span>);</span><br><span class="line">ji=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="literal">false</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;N;i++)&#123;<span class="comment">//埃筛素数</span></span><br><span class="line"><span class="keyword">if</span>(vis[i])<span class="keyword">continue</span>;</span><br><span class="line">prime[ji++]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>*i;j&lt;N;j+=i)vis[j]=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">getnum</span><span class="params">(LL n)</span></span>&#123;</span><br><span class="line"><span class="comment">//(1^4+2^4+……+n^4)=n*(n+1)*(2n+1)*(3*n*n+3*n-1)/30</span></span><br><span class="line"></span><br><span class="line">LL ans;</span><br><span class="line">ans=(n*(n+<span class="number">1</span>)%p*(<span class="number">2</span>*n+<span class="number">1</span>)%p*((<span class="number">3</span>*n*n)%p+(<span class="number">3</span>*n<span class="number">-1</span>)%p))%p;</span><br><span class="line">ans=(ans*inv30)%p;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*分开写的版本</span></span><br><span class="line"><span class="comment">LL ans;</span></span><br><span class="line"><span class="comment">ans=(n*((n+1)%p))%p;</span></span><br><span class="line"><span class="comment">ans=(ans*((2*n+1)%p))%p;</span></span><br><span class="line"><span class="comment">ans=(ans*((3*n*n)%p+(3*n-1)%p))%p;</span></span><br><span class="line"><span class="comment">ans=(ans*inv30)%p;</span></span><br><span class="line"><span class="comment">return ans;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">v.clear();</span><br><span class="line">LL tmp=n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;ji;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(tmp%prime[i]==<span class="number">0</span>)&#123;</span><br><span class="line">v.push_back(prime[i]);</span><br><span class="line"><span class="keyword">while</span>(tmp%prime[i]==<span class="number">0</span>)tmp/=prime[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(tmp&gt;<span class="number">1</span>)v.push_back(tmp);</span><br><span class="line">LL ans=getnum(n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;(<span class="number">1</span>&lt;&lt;v.size());i++)&#123;</span><br><span class="line"><span class="keyword">int</span> a=<span class="number">0</span>;</span><br><span class="line">LL now=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;v.size();j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i&amp;(<span class="number">1</span>&lt;&lt;j))&#123;</span><br><span class="line">a++;</span><br><span class="line">now=now*v[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">LL res=qpow(now,<span class="number">4L</span>L)*(getnum(n/now)%p)%p;</span><br><span class="line"><span class="keyword">if</span>(a&amp;<span class="number">1</span>)ans=(ans-res+p)%p;</span><br><span class="line"><span class="keyword">else</span> ans=(ans+res+p)%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">    solve();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逆元 </tag>
            
            <tag> 容斥 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1502 Regular Words（dp，java高精度）</title>
      <link href="/2018/09/09/hdu%201502%20Regular%20Words%EF%BC%88dp%EF%BC%8Cjava%E9%AB%98%E7%B2%BE%E5%BA%A6%EF%BC%89/"/>
      <url>/2018/09/09/hdu%201502%20Regular%20Words%EF%BC%88dp%EF%BC%8Cjava%E9%AB%98%E7%B2%BE%E5%BA%A6%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1502" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1502</a></p><p>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)</p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>Consider words of length 3n over alphabet {A, B, C} . Denote the number of occurences of A in a word a as A(a) , analogously let the number of occurences of B be denoted as B(a), and the number of occurenced of C as C(a) . </p><p>Let us call the word w regular if the following conditions are satisfied: </p><p>A(w)=B(w)=C(w) ;<br>if c is a prefix of w , then A(c)&gt;= B(c) &gt;= C(c) .<br>For example, if n = 2 there are 5 regular words: AABBCC , AABCBC , ABABCC , ABACBC and ABCABC . </p><p>Regular words in some sense generalize regular brackets sequences (if we consider two-letter alphabet and put similar conditions on regular words, they represent regular brackets sequences). </p><p>Given n , find the number of regular words.</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>There are mutiple cases in the input file. </p><p>Each case contains n (0 &lt;= n &lt;= 60 ). </p><p>There is an empty line after each case.</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>Output the number of regular words of length 3n . </p><p>There should be am empty line after each case.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="number">42</span></span><br></pre></td></tr></table></figure><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>ABC三个字母每个字母n个，排列成一个长度为3*n的串，要求任意前缀满足，A的个数大于等于B的个数大于等于C的个数，即A(c)&gt;= B(c) &gt;= C(c) ，求方法数</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>dp[i][j][k]表示当前串由i个A，j个B，k个C组成的方法数   </p><p>状态转移方程为 <code>dp[i][j][k] = dp[i-1][j][k] + dp[i][j-1][k] + dp[i][j][k-1]</code></p><p>初始化dp[0][0][0]=1，每一项加的时候判断一下是否合法即可</p><p>这题需要高精度，就用java写了</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">import java.io.*;  </span><br><span class="line">import java.math.*;</span><br><span class="line">import java.util.*;</span><br><span class="line"> </span><br><span class="line">public class Main &#123;</span><br><span class="line">    public static void main(String<span class="string">[]</span> args) &#123;</span><br><span class="line">        Scanner cin=new Scanner(System.in);</span><br><span class="line">        BigInteger dp<span class="string">[]</span><span class="string">[]</span><span class="string">[]</span>=new BigInteger<span class="string">[65]</span><span class="string">[65]</span><span class="string">[65]</span>;</span><br><span class="line">        dp<span class="string">[0]</span><span class="string">[0]</span><span class="string">[0]</span>=BigInteger.valueOf(<span class="number">1</span>);</span><br><span class="line">        for(int i=<span class="number">1</span>;i&lt;=<span class="number">60</span>;i++) &#123;</span><br><span class="line">        for(int j=<span class="number">0</span>;j&lt;=i;j++) &#123;</span><br><span class="line">        for(int k=<span class="number">0</span>;k&lt;=j;k++) &#123;</span><br><span class="line">        dp<span class="string">[i]</span><span class="string">[j]</span><span class="string">[k]</span>=BigInteger.valueOf(<span class="number">0</span>);</span><br><span class="line">        if(i&gt;j)dp<span class="string">[i]</span><span class="string">[j]</span><span class="string">[k]</span>=dp<span class="string">[i]</span><span class="string">[j]</span><span class="string">[k]</span>.add(dp<span class="string">[i-1]</span><span class="string">[j]</span><span class="string">[k]</span>);</span><br><span class="line">        if(j&gt;k)dp<span class="string">[i]</span><span class="string">[j]</span><span class="string">[k]</span>=dp<span class="string">[i]</span><span class="string">[j]</span><span class="string">[k]</span>.add(dp<span class="string">[i]</span><span class="string">[j-1]</span><span class="string">[k]</span>);</span><br><span class="line">        if(k&gt;<span class="number">0</span>)dp<span class="string">[i]</span><span class="string">[j]</span><span class="string">[k]</span>=dp<span class="string">[i]</span><span class="string">[j]</span><span class="string">[k]</span>.add(dp<span class="string">[i]</span><span class="string">[j]</span><span class="string">[k-1]</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        int n;</span><br><span class="line">        while(cin.hasNext()) &#123;</span><br><span class="line">        n=cin.nextInt();</span><br><span class="line">        System.out.println(dp<span class="string">[n]</span><span class="string">[n]</span><span class="string">[n]</span>);</span><br><span class="line">        System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        cin.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> dp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java高精度 </tag>
            
            <tag> dp </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1013 Digital Roots（数根公式推导）</title>
      <link href="/2018/09/09/hdu1013%E6%95%B0%E6%A0%B9/"/>
      <url>/2018/09/09/hdu1013%E6%95%B0%E6%A0%B9/</url>
      <content type="html"><![CDATA[<p>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)</p><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1013" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1013</a></p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>The digital root of a positive integer is found by summing the digits of the integer. If the resulting value is a single digit then that digit is the digital root. If the resulting value contains two or more digits, those digits are summed and the process is repeated. This is continued as long as necessary to obtain a single digit.</p><p>For example, consider the positive integer 24. Adding the 2 and the 4 yields a value of 6. Since 6 is a single digit, 6 is the digital root of 24. Now consider the positive integer 39. Adding the 3 and the 9 yields 12. Since 12 is not a single digit, the process must be repeated. Adding the 1 and the 2 yeilds 3, a single digit and also the digital root of 39.</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The input file will contain a list of positive integers, one per line. The end of the input will be indicated by an integer value of zero.</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each integer in the input, output its digital root on a separate line of the output.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><p>24<br>39<br>0</p><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><p>6<br>3</p><h3 id="Source"><a href="#Source" class="headerlink" title="Source"></a>Source</h3><p>Greater New York 2000</p><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>先放个百度百科数根定义：</p><blockquote><p>数根(又称数字根Digital root)是自然数的一种性质，换句话说，每个自然数都有一个数根</p></blockquote><p>数根是将一正整数的各个位数相加(即横向相加)，若加完后的值大于等于10的话，则继续将各位数进行横向相加直到其值小于十为止，或是，将一数字重复做数字和，直到其值小于十为止，则所得的值为该数的数根。例如54817的数根为7，因为5+4+8+1+7=25，25大于10则再加一次，2+5=7，7小于十，则7为54817的数根</p><p>再放个结论：</p><blockquote><p>for(int i=0;i&lt;s.length();i++)ans+=(s[i]-‘0’);<br>printf(“%d\n”,1+(ans-1)%9);</p><p>即每位数相加的结果记为ans, 1+(ans-1)%9 即为所求</p></blockquote><p>最后放个证明：</p><blockquote><p>按题意得：<br><img src="/2018/09/09/hdu1013数根/1.png" alt=""></p><p>因为有<img src="/2018/09/09/hdu1013数根/2.png" alt=""></p><p>所以原式等于<br><img src="/2018/09/09/hdu1013数根/3.png" alt=""></p><p>处理一下即推出上面的结论</p></blockquote><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line">using namespace std<span class="comment">;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> main()&#123;</span><br><span class="line">    <span class="built_in">string</span> s<span class="comment">;</span></span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;s)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s==<span class="string">"0"</span>)<span class="built_in">break</span><span class="comment">;</span></span><br><span class="line">        <span class="built_in">int</span> ans=<span class="number">0</span><span class="comment">;</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span><span class="comment">;i&lt;s.length();i++)ans+=(s[i]-'0');</span></span><br><span class="line">        printf(<span class="string">"%d\n"</span>,<span class="number">1</span>+(ans<span class="number">-1</span>)%<span class="number">9</span>)<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数根 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 5973 Game of Taking Stones（威佐夫博弈，java大数，二分求高精度根号）</title>
      <link href="/2018/09/09/hdu%205973%20Game%20of%20Taking%20Stones%EF%BC%88%E5%A8%81%E4%BD%90%E5%A4%AB%E5%8D%9A%E5%BC%88%EF%BC%8Cjava%E5%A4%A7%E6%95%B0%EF%BC%8C%E4%BA%8C%E5%88%86%E6%B1%82%E9%AB%98%E7%B2%BE%E5%BA%A6%E6%A0%B9%E5%8F%B7%EF%BC%89/"/>
      <url>/2018/09/09/hdu%205973%20Game%20of%20Taking%20Stones%EF%BC%88%E5%A8%81%E4%BD%90%E5%A4%AB%E5%8D%9A%E5%BC%88%EF%BC%8Cjava%E5%A4%A7%E6%95%B0%EF%BC%8C%E4%BA%8C%E5%88%86%E6%B1%82%E9%AB%98%E7%B2%BE%E5%BA%A6%E6%A0%B9%E5%8F%B7%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5973" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=5973</a></p><p>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/65536 K (Java/Others)</p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>Two people face two piles of stones and make a game. They take turns to take stones. As game rules, there are two different methods of taking stones: One scheme is that you can take any number of stones in any one pile while the alternative is to take the same amount of stones at the same time in two piles. In the end, the first person taking all the stones is winner.Now,giving the initial number of two stones, can you win this game if you are the first to take stones and both sides have taken the best strategy?</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>Input contains multiple sets of test data.Each test data occupies one line,containing two non-negative integers a andb,representing the number of two stones.a and b are not more than 10^100.</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each test data,output answer on one line.1 means you are the winner,otherwise output 0.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">2 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">8 </span><span class="number">4</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">7</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="Source"><a href="#Source" class="headerlink" title="Source"></a>Source</h3><p>2016ACM/ICPC亚洲区大连站-重现赛（感谢大连海事大学）</p><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>首先这是个威佐夫博弈裸题 判断<code>(b-a)*((√5+1)/2)==a</code>是否成立即可，麻烦在于又加了大数</p><p>刚开始直接用之前算过的1000位黄金分割数 <a href="https://leflacon.github.io/2018/08/22/计算黄金分割数小数点后1000位/">计算黄金分割数小数点后1000位</a> 交了一发，然后wa了？？？黑人问号。。</p><p>然后查了网上的写法，是二分求高精度√5，具体见代码</p><p>跑500次二分精确度只能到两百多位，那为啥那个精确到一千位的数不行么（我当时跑了10000次循环来着）。。猜测可能是赋值问题吧emmmmmm。。不管了</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">import java.io.*;  </span><br><span class="line">import java.math.*;</span><br><span class="line">import java.util.*;</span><br><span class="line"> </span><br><span class="line">public class Main &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Scanner <span class="attribute">cin</span>=new Scanner(System.<span class="keyword">in</span>);</span><br><span class="line">        BigDecimal a,b,tmp,hj;</span><br><span class="line">        BigDecimal <span class="attribute">l</span>=BigDecimal.valueOf(2),r=BigDecimal.valueOf(3);</span><br><span class="line">        <span class="keyword">for</span>(int <span class="attribute">i</span>=0;i&lt;500;i++) &#123;</span><br><span class="line">        BigDecimal <span class="attribute">m</span>=l.add(r).divide(BigDecimal.valueOf(2));</span><br><span class="line">        <span class="keyword">if</span>(m.multiply(m).compareTo(BigDecimal.valueOf(5))&lt;0)<span class="attribute">l</span>=m;</span><br><span class="line">        <span class="keyword">else</span> <span class="attribute">r</span>=m;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="attribute">hj</span>=l.add(BigDecimal.valueOf(1)).divide(BigDecimal.valueOf(2));</span><br><span class="line">        <span class="keyword">while</span>(cin.hasNext()) &#123;</span><br><span class="line">        <span class="attribute">a</span>=cin.nextBigDecimal();</span><br><span class="line">        <span class="attribute">b</span>=cin.nextBigDecimal();</span><br><span class="line">        <span class="keyword">if</span>(a.compareTo(b)&gt;0) &#123;</span><br><span class="line">        <span class="attribute">tmp</span>=a;a=b;b=tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="attribute">a</span>=a.setScale(0,BigDecimal.ROUND_DOWN);</span><br><span class="line">        <span class="attribute">b</span>=b.subtract(a).multiply(hj);</span><br><span class="line">        <span class="attribute">b</span>=b.setScale(0,BigDecimal.ROUND_DOWN);</span><br><span class="line">        <span class="keyword">if</span>(a.compareTo(b)==0)System.out.println(<span class="string">"0"</span>);</span><br><span class="line">        <span class="keyword">else</span> System.out.println(<span class="string">"1"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        cin.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 博弈论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java高精度 </tag>
            
            <tag> 威佐夫博弈 </tag>
            
            <tag> 二分 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 5047 Sawtooth（java大数，分割平面问题）</title>
      <link href="/2018/09/08/hdu%205047%20Sawtooth%EF%BC%88java%E5%A4%A7%E6%95%B0%EF%BC%8C%E5%88%86%E5%89%B2%E5%B9%B3%E9%9D%A2%E9%97%AE%E9%A2%98%EF%BC%89/"/>
      <url>/2018/09/08/hdu%205047%20Sawtooth%EF%BC%88java%E5%A4%A7%E6%95%B0%EF%BC%8C%E5%88%86%E5%89%B2%E5%B9%B3%E9%9D%A2%E9%97%AE%E9%A2%98%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/65536 K (Java/Others)</p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>Think about a plane:</p><p>● One straight line can divide a plane into two regions.<br>● Two lines can divide a plane into at most four regions.<br>● Three lines can divide a plane into at most seven regions.<br>● And so on…</p><p>Now we have some figure constructed with two parallel rays in the same direction, joined by two straight segments. It looks like a character “M”. You are given N such “M”s. What is the maximum number of regions that these “M”s can divide a plane ?</p><p><img src="http://acm.hdu.edu.cn/data/images/C537-1006-1.jpg" alt=""></p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The first line of the input is T (1 ≤ T ≤ 100000), which stands for the number of test cases you need to solve.</p><p>Each case contains one single non-negative integer, indicating number of “M”s. (0 ≤ N ≤ 1012)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each test case, print a line “Case #t: ”(without quotes, t means the index of the test case) at the beginning. Then an integer that is the maximum number of regions N the “M” figures can divide.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Case</span> <span class="meta">#1: 2</span></span><br><span class="line"><span class="keyword">Case</span> <span class="meta">#2: 19</span></span><br></pre></td></tr></table></figure><h3 id="Source"><a href="#Source" class="headerlink" title="Source"></a>Source</h3><p>2014 ACM/ICPC Asia Regional Shanghai Online</p><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>如图有n个“M”，求能把矩形分成几块</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p><code>ans=8*n*n-7*n+1</code></p><p>首先n条直线可以把平面分成<code>n*(n+1)/2+1</code>个区域，那么对于<code>4*n</code>条直线来说，可以分成<code>2*n*(4*n+1)+1</code>个区域，一个“M”延长出去后，最多会多9块，也就是说因为“M”型的特殊性，每次会少<code>9*n</code>个块，所以答案为<code>8*n*n-7*n+1</code></p><p>其余各种类型分割平面见这个传送门，学习了学习了∑(ﾟДﾟ) <a href="https://blog.csdn.net/qq_34131212/article/details/78043679" rel="external nofollow noopener noreferrer" target="_blank">折线分割平面问题总结</a></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;  </span><br><span class="line"><span class="keyword">import</span> java.math.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> &#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner <span class="built_in">cin</span>=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> t;</span><br><span class="line">        t=<span class="built_in">cin</span>.nextInt();</span><br><span class="line">        BigInteger n,ans;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=t;i++) &#123;</span><br><span class="line">        n=<span class="built_in">cin</span>.nextBigInteger();</span><br><span class="line">        ans=n.multiply(BigInteger.valueOf(<span class="number">8</span>)).multiply(n);</span><br><span class="line">        ans=ans.subtract(n.multiply(BigInteger.valueOf(<span class="number">7</span>)));</span><br><span class="line">        ans=ans.add(BigInteger.valueOf(<span class="number">1</span>));</span><br><span class="line">        System.out.println(<span class="string">"Case #"</span>+i+<span class="string">": "</span>+ans.toString());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cin</span>.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> java高精度 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java高精度 </tag>
            
            <tag> 分割平面 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 5050 Divided Land（java大数，二进制）</title>
      <link href="/2018/09/07/hdu5050/"/>
      <url>/2018/09/07/hdu5050/</url>
      <content type="html"><![CDATA[<p>Time Limit: 8000/4000 MS (Java/Others)    Memory Limit: 65536/65536 K (Java/Others)</p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>It’s time to fight the local despots and redistribute the land. There is a rectangular piece of land granted from the government, whose length and width are both in binary form. As the mayor, you must segment the land into multiple squares of equal size for the villagers. What are required is there must be no any waste and each single segmented square land has as large area as possible. The width of the segmented square land is also binary.</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The first line of the input is T (1 ≤ T ≤ 100), which stands for the number of test cases you need to solve.</p><p>Each case contains two binary number represents the length L and the width W of given land. (0 &lt; L, W ≤ 21000)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each test case, print a line “Case #t: ”(without quotes, t means the index of the test case) at the beginning. Then one number means the largest width of land that can be divided from input data. And it will be show in binary. Do not have any useless number or space.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">10 </span><span class="number">100</span></span><br><span class="line"><span class="symbol">100 </span><span class="number">110</span></span><br><span class="line"><span class="symbol">10010 </span><span class="number">1100</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Case</span> <span class="meta">#1: 10</span></span><br><span class="line"><span class="keyword">Case</span> <span class="meta">#2: 10</span></span><br><span class="line"><span class="keyword">Case</span> <span class="meta">#3: 110</span></span><br></pre></td></tr></table></figure><h3 id="Source"><a href="#Source" class="headerlink" title="Source"></a>Source</h3><p>2014 ACM/ICPC Asia Regional Shanghai Online</p><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>a,b两个二进制边长，分成大小相等的小正方形，即求gcd(a,b)</p><p>java二进制都封装好了T^T太好用了吧</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;  </span><br><span class="line"><span class="keyword">import</span> java.math.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> &#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner <span class="built_in">cin</span>=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> t;</span><br><span class="line">        t=<span class="built_in">cin</span>.nextInt();</span><br><span class="line">        BigInteger a,b;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=t;i++) &#123;</span><br><span class="line">        a=<span class="built_in">cin</span>.nextBigInteger(<span class="number">2</span>);</span><br><span class="line">        b=<span class="built_in">cin</span>.nextBigInteger(<span class="number">2</span>);</span><br><span class="line">        System.out.println(<span class="string">"Case #"</span>+i+<span class="string">": "</span>+a.gcd(b).toString(<span class="number">2</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> java高精度 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java高精度 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1212 Big Number（java大数取模）</title>
      <link href="/2018/09/07/hdu1212/"/>
      <url>/2018/09/07/hdu1212/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1212" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1212</a></p><p>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)</p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>As we know, Big Number is always troublesome. But it’s really important in our ACM. And today, your task is to write a program to calculate A mod B.</p><p>To make the problem easier, I promise that B will be smaller than 100000.</p><p>Is it too hard? No, I work it out in 10 minutes, and my program contains less than 25 lines.</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The input contains several test cases. Each test case consists of two positive integers A and B. The length of A will not exceed 1000, and B will be smaller than 100000. Process to the end of file.</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each test case, you have to ouput the result of A mod B.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">2 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">12 </span><span class="number">7</span></span><br><span class="line"><span class="symbol">152455856554521 </span><span class="number">3250</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">1521</span></span><br></pre></td></tr></table></figure><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>求A%B，A的长度不超过1000，B小于100000</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><p>【c++】</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;s&gt;&gt;n)&#123;</span><br><span class="line">        <span class="keyword">int</span> ans=s[<span class="number">0</span>]-<span class="string">'0'</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;s.length();i++)ans=(ans*<span class="number">10</span>+s[i]-<span class="string">'0'</span>)%n;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>【java】</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;  </span><br><span class="line"><span class="keyword">import</span> java.math.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> &#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner <span class="built_in">cin</span>=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        BigInteger a,b;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">cin</span>.hasNext()) &#123;</span><br><span class="line">        a=<span class="built_in">cin</span>.nextBigInteger();</span><br><span class="line">        b=<span class="built_in">cin</span>.nextBigInteger();</span><br><span class="line">        System.out.println(a.remainder(b));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> java高精度 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java高精度 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 6222 Heron and His Triangle（海伦公式，打表找规律，java大数）</title>
      <link href="/2018/09/07/hdu%206222%20Heron%20and%20His%20Triangle%EF%BC%88%E6%89%93%E8%A1%A8%E6%8E%A8%E5%85%AC%E5%BC%8F%EF%BC%8Cjava%E5%A4%A7%E6%95%B0%EF%BC%89/"/>
      <url>/2018/09/07/hdu%206222%20Heron%20and%20His%20Triangle%EF%BC%88%E6%89%93%E8%A1%A8%E6%8E%A8%E5%85%AC%E5%BC%8F%EF%BC%8Cjava%E5%A4%A7%E6%95%B0%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 262144/262144 K (Java/Others)</p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>A triangle is a Heron’s triangle if it satisfies that the side lengths of it are consecutive integers t-1, t, t+ 1 and thatits area is an integer. Now, for given n you need to find a Heron’s triangle associated with the smallest t bigger<br>than or equal to n.</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The input contains multiple test cases. The first line of a multiple input is an integer T (1 ≤ T ≤ 30000) followedby T lines. Each line contains an integer N (1 ≤ N ≤ 10^30).</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each test case, output the smallest t in a line. If the Heron’s triangle required does not exist, output -1.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><h3 id="Source"><a href="#Source" class="headerlink" title="Source"></a>Source</h3><p>2017ACM/ICPC亚洲区沈阳站-重现赛（感谢东北大学）</p><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>三角形三边为t-1,t,t+1，且面积为整数</p><p>给定一个n，找出大于等于n的最小的t</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>求面积这题用海伦公式：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">p=<span class="comment">(a+b+c)</span>/<span class="number">2</span></span><br><span class="line">S=√p<span class="comment">(p-a)</span><span class="comment">(p-b)</span><span class="comment">(p-c)</span></span><br></pre></td></tr></table></figure><p>然后写个c++打表找满足的t</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">10000</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">double</span> t=i,p=t*<span class="number">3</span>/<span class="number">2</span>,s=p*(p-t)*(p-t<span class="number">-1</span>)*(p-t+<span class="number">1</span>);</span><br><span class="line">        LL tmp=<span class="built_in">sqrt</span>(s);</span><br><span class="line">        <span class="keyword">if</span>(tmp*tmp==s)<span class="built_in">printf</span>(<span class="string">"%d "</span>,i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到序列：(2) 4 14 52 194 724 2702……</p><p>这里2也满足式子，但是1，2，3不能构成三角形，不过2在推公式时候可以用一下</p><p>发现递推式<code>f[n]=4*f[n-1]-f[n-2]</code></p><p>然后10^30就是java大数搞一搞了</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;  </span><br><span class="line"><span class="keyword">import</span> java.math.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> &#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner <span class="built_in">cin</span>=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        BigInteger f[]=<span class="keyword">new</span> BigInteger[<span class="number">105</span>];</span><br><span class="line">        f[<span class="number">1</span>]=BigInteger.valueOf(<span class="number">4</span>);f[<span class="number">2</span>]=BigInteger.valueOf(<span class="number">14</span>);       </span><br><span class="line">        BigInteger tmp=BigInteger.valueOf(<span class="number">10</span>);</span><br><span class="line">        <span class="keyword">int</span> ji=<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">while</span>(f[ji].compareTo(tmp.<span class="built_in">pow</span>(<span class="number">30</span>))&lt;=<span class="number">0</span>) &#123;</span><br><span class="line">        ji++;</span><br><span class="line">        f[ji]=f[ji<span class="number">-1</span>].multiply(BigInteger.valueOf(<span class="number">4</span>)).subtract(f[ji<span class="number">-2</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> t;</span><br><span class="line">        t=<span class="built_in">cin</span>.nextInt();</span><br><span class="line">        <span class="keyword">while</span>(t--&gt;<span class="number">0</span>) &#123;</span><br><span class="line">        BigInteger n=<span class="built_in">cin</span>.nextBigInteger();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=ji;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(n.compareTo(f[i])&lt;=<span class="number">0</span>) &#123;</span><br><span class="line">        System.out.println(f[i]);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> java高精度 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java高精度 </tag>
            
            <tag> 推公式 </tag>
            
            <tag> 海伦公式 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 2054 A == B ?（java高精度）</title>
      <link href="/2018/09/06/hdu2054/"/>
      <url>/2018/09/06/hdu2054/</url>
      <content type="html"><![CDATA[<p>Time Limit: 1000/1000 MS (Java/Others)    Memory Limit: 32768/32768 K (Java/Others)</p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>Give you two numbers A and B, if A is equal to B, you should print “YES”, or print “NO”.</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>each test case contains two numbers A and B.</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>for each case, if A is equal to B, you should print “YES”, or print “NO”.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">NO</span></span><br><span class="line"><span class="literal">YES</span></span><br><span class="line"><span class="literal">YES</span></span><br><span class="line"><span class="literal">NO</span></span><br></pre></td></tr></table></figure><hr><p>虽然样例给的都是整数，但是题目里说给的是两个数，所以有小数。。用BigDecimal就行</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;  </span><br><span class="line"><span class="keyword">import</span> java.math.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> &#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner <span class="built_in">cin</span>=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        BigDecimal a,b;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">cin</span>.hasNext()) &#123;</span><br><span class="line">        a=<span class="built_in">cin</span>.nextBigDecimal();</span><br><span class="line">        b=<span class="built_in">cin</span>.nextBigDecimal();</span><br><span class="line">        <span class="keyword">if</span>(a.compareTo(b)==<span class="number">0</span>)System.out.println(<span class="string">"YES"</span>);</span><br><span class="line">        <span class="keyword">else</span> System.out.println(<span class="string">"NO"</span>);      </span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> java高精度 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java高精度 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 4523 威威猫系列故事——过生日（java大数）</title>
      <link href="/2018/09/06/hdu%204523%20%E5%A8%81%E5%A8%81%E7%8C%AB%E7%B3%BB%E5%88%97%E6%95%85%E4%BA%8B%E2%80%94%E2%80%94%E8%BF%87%E7%94%9F%E6%97%A5%EF%BC%88java%E5%A4%A7%E6%95%B0%EF%BC%89/"/>
      <url>/2018/09/06/hdu%204523%20%E5%A8%81%E5%A8%81%E7%8C%AB%E7%B3%BB%E5%88%97%E6%95%85%E4%BA%8B%E2%80%94%E2%80%94%E8%BF%87%E7%94%9F%E6%97%A5%EF%BC%88java%E5%A4%A7%E6%95%B0%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=4523" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=4523</a></p><p>Time Limit: 500/200 MS (Java/Others)    Memory Limit: 65535/32768 K (Java/Others)</p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>　　2月29号是威威猫的生日，由于这个日子非常特殊，4年才一次，所以生日这天许多朋友都前往威威猫家祝贺他的生日。<br>　　大家给威威猫买了一个非常大非常大的蛋糕，蛋糕的形状是一个有n条边的凸多边形，可是威威猫的审美观有一点奇怪，他只喜欢有m条边的蛋糕，所以他要伙伴们把这个蛋糕切p次，然后给他一个只有m条边的新蛋糕。这下大家急了，这不是坑爹吗，审美观崎岖作怪。<br>　　假设蛋糕可看成一个平面含n条边的凸多边形，每一刀必须沿直线切下去，p刀之后能给威威猫切出一个m条边的蛋糕吗？</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>多组测试数据，每组占一行，包含3个整数n, m, p（含义如上）。<br>[Technical Specification]<br>3 &lt;= n &lt;= 10^100<br>0 &lt; m &lt;= 10^100<br>0 &lt;= p &lt;= 10^100</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>每组测试数据，如果能够切出威威猫喜欢的蛋糕，请输出”YES”，否则请输出”NO”；<br>每组数据输出一行。</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">4 </span><span class="number">5</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">YES</span></span><br></pre></td></tr></table></figure><h3 id="Hint"><a href="#Hint" class="headerlink" title="Hint"></a>Hint</h3><p>Sample对应的示意图如下：<br><img src="http://acm.hdu.edu.cn/data/images/4523-1.jpg" alt=""></p><h3 id="Source"><a href="#Source" class="headerlink" title="Source"></a>Source</h3><p>2013腾讯编程马拉松初赛第四场（3月24日）</p><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>切一刀最多可以少n-3条边或者多1条边，所以就是判断m是否在[3，n+p]范围内</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;  </span><br><span class="line"><span class="keyword">import</span> java.math.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> &#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner <span class="built_in">cin</span>=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        BigInteger n,m,p;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">cin</span>.hasNextBigInteger()) &#123;</span><br><span class="line">        n=<span class="built_in">cin</span>.nextBigInteger();</span><br><span class="line">        m=<span class="built_in">cin</span>.nextBigInteger();</span><br><span class="line">        p=<span class="built_in">cin</span>.nextBigInteger();</span><br><span class="line">        <span class="keyword">if</span>(m.compareTo(BigInteger.valueOf(<span class="number">3</span>))&gt;=<span class="number">0</span>&amp;&amp;m.compareTo(n.add(p))&lt;=<span class="number">0</span>)System.out.println(<span class="string">"YES"</span>);</span><br><span class="line">        <span class="keyword">else</span> System.out.println(<span class="string">"NO"</span>);      </span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> java高精度 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java高精度 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 5920 Ugly Problem（贪心，java大数）</title>
      <link href="/2018/09/06/hdu%205920%20Ugly%20Problem%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%8Cjava%E5%A4%A7%E6%95%B0%EF%BC%89/"/>
      <url>/2018/09/06/hdu%205920%20Ugly%20Problem%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%8Cjava%E5%A4%A7%E6%95%B0%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/65536 K (Java/Others)</p><p>Special Judge</p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>Everyone hates ugly problems.</p><p>You are given a positive integer. You must represent that number by sum of palindromic numbers.</p><p>A palindromic number is a positive integer such that if you write out that integer as a string in decimal without leading zeros, the string is an palindrome. For example, 1 is a palindromic number and 10 is not.</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>In the first line of input, there is an integer T denoting the number of test cases.</p><p>For each test case, there is only one line describing the given integer s (1≤s≤10^1000).</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each test case, output “Case #x:” on the first line where x is the number of that test case starting from 1. Then output the number of palindromic numbers you used, n, on one line. n must be no more than 50. en output n lines, each containing one of your palindromic numbers. Their sum must be exactly s.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">18</span></span><br><span class="line"><span class="number">1000000000000</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Case</span> <span class="meta">#1:</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="keyword">Case</span> <span class="meta">#2:</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">999999999999</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="Hint"><a href="#Hint" class="headerlink" title="Hint"></a>Hint</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">9 </span>+ <span class="number">9</span> = <span class="number">18</span></span><br><span class="line"><span class="symbol">999999999999 </span>+ <span class="number">1</span> = <span class="number">1000000000000</span></span><br></pre></td></tr></table></figure><h3 id="Source"><a href="#Source" class="headerlink" title="Source"></a>Source</h3><p>2016中国大学生程序设计竞赛（长春）-重现赛</p><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给一个数n，把它分成50个以内回文数，这些回文数的和等于n</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>题目竟然叫ugly problem。。果然不beautiful。。wa了好多次。。c++的话大概是要再写一个高精度减法</p><p>思路是构造的时候贪心的去构造，对一个数x来说，先取他的前（len+1）/2 位，记为l，然后再复制（len/2）位记为r，（这两个式子对奇偶都适用）</p><p>如果生成的这个长度相同的数now比x小，那么直接更新x，用新的x重复上诉操作</p><p>如果生成的now比x大，那么就把l-1，用新的l来算出r和now</p><p>举个例子：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="number">654321</span></span><br><span class="line">则一开始l=<span class="number">654</span>，这样r=<span class="number">456</span>，now=<span class="number">654456</span>，但是<span class="number">654456</span>&gt;<span class="number">654321</span>，</span><br><span class="line">所以l--，l=<span class="number">653</span>，r=<span class="number">356</span>，now=<span class="number">653356</span>，更新x，x=<span class="number">654321</span><span class="number">-653356</span>=<span class="number">965</span>，</span><br><span class="line">l=<span class="number">96</span>，r=<span class="number">9</span>，now=<span class="number">969</span>，<span class="number">969</span>&gt;<span class="number">965</span>，l=<span class="number">95</span>，r=<span class="number">9</span>，now=<span class="number">959</span>，</span><br><span class="line">x=<span class="number">965</span><span class="number">-959</span>=<span class="number">6</span>，跳出while，存入最后一个<span class="number">6</span></span><br></pre></td></tr></table></figure></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">import java.io.*;  </span><br><span class="line">import java.math.*;</span><br><span class="line">import java.util.*;</span><br><span class="line"> </span><br><span class="line">public class Main &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Scanner <span class="attribute">cin</span>=new Scanner(System.<span class="keyword">in</span>);</span><br><span class="line">        int t;</span><br><span class="line">        <span class="attribute">t</span>=cin.nextInt();</span><br><span class="line">        BigInteger <span class="attribute">x</span>=BigInteger.valueOf(0),num,jian;</span><br><span class="line">        String <span class="attribute">s</span>=<span class="literal">null</span>,r=null,l=null,now=null;</span><br><span class="line">        String ans[]=new String[55];</span><br><span class="line">        <span class="keyword">for</span>(int <span class="attribute">cas</span>=1;cas&lt;=t;cas++) &#123;</span><br><span class="line">            int <span class="attribute">ji</span>=0;</span><br><span class="line">            <span class="attribute">x</span>=cin.nextBigInteger();</span><br><span class="line">            System.out.println(<span class="string">"Case #"</span>+cas+<span class="string">":"</span>);</span><br><span class="line">            <span class="attribute">s</span>=x.toString();</span><br><span class="line">            int <span class="attribute">len</span>=s.length();</span><br><span class="line">            <span class="attribute">now</span>=s.substring(0,(len+1)/2);</span><br><span class="line">            <span class="attribute">num</span>=new BigInteger(now);</span><br><span class="line">            <span class="keyword">while</span>(x.compareTo(BigInteger.valueOf(11))&gt;=0) &#123;</span><br><span class="line">                <span class="attribute">l</span>=num.toString();</span><br><span class="line">                <span class="attribute">r</span>=<span class="string">""</span>;</span><br><span class="line">                <span class="keyword">for</span>(int <span class="attribute">i</span>=len/2-1;i&gt;=0;i--)r=r+l.charAt(i);</span><br><span class="line">                <span class="attribute">now</span>=l+r;</span><br><span class="line">                <span class="attribute">jian</span>=new BigInteger(now);</span><br><span class="line">                <span class="keyword">if</span>(x.compareTo(jian)&gt;=0) &#123;</span><br><span class="line">                    <span class="attribute">x</span>=x.subtract(jian);</span><br><span class="line">                    ans[ji++]=now;</span><br><span class="line">                    <span class="attribute">s</span>=x.toString();</span><br><span class="line">                    <span class="attribute">len</span>=s.length();</span><br><span class="line">                    <span class="attribute">now</span>=s.substring(0,(len+1)/2);</span><br><span class="line">                    <span class="attribute">num</span>=new BigInteger(now);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="attribute">num</span>=num.subtract(BigInteger.valueOf(1));</span><br><span class="line">                &#125;                           </span><br><span class="line">            &#125;</span><br><span class="line">            int <span class="attribute">res</span>=x.intValue();</span><br><span class="line">            <span class="keyword">if</span>(res&gt;=10) &#123;</span><br><span class="line">                ans[ji++]=<span class="string">"9"</span>;</span><br><span class="line">                ans[ji++]=String.valueOf(res-9);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(res!=0)&#123;</span><br><span class="line">                ans[ji++]=String.valueOf(res);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(ji);</span><br><span class="line">            <span class="keyword">for</span>(int <span class="attribute">i</span>=0;i&lt;ji;i++)System.out.println(ans[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> java高精度 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 贪心 </tag>
            
            <tag> java高精度 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>java大数水题集 高精度</title>
      <link href="/2018/09/05/java%E5%A4%A7%E6%95%B4%E6%95%B0%E9%A2%98%E9%9B%86/"/>
      <url>/2018/09/05/java%E5%A4%A7%E6%95%B4%E6%95%B0%E9%A2%98%E9%9B%86/</url>
      <content type="html"><![CDATA[<p>自从有一次用java写一个卡特兰数<a href="https://leflacon.github.io/2018/09/04/C.Catalan Square"> C. Catalan Square </a>的题之后，觉得再不写写java大整数就老了。。啊c++高精度模拟再见吧╮(￣▽￣””)╭</p><p>先水个几题感受一下～</p><hr><p>hdu 1002 <a href="https://leflacon.github.io/2018/09/04/hdu1002">A + B Problem II</a> 开头肯定是<s>万恶之源</s>a+b </p><p>hdu 1753 <a href="https://leflacon.github.io/2018/09/05/hdu1753">大明A+B</a>小数a+b</p><p>hdu 2054 <a href="https://leflacon.github.io/2018/09/06/hdu2054">A == B ?</a>判断两个大数（可能是小数）是否相等</p><p>hdu 1047 <a href="https://leflacon.github.io/2018/09/04/hdu1047">Integer Inquiry</a>很多大数相加</p><p>hdu 1212 <a href="https://leflacon.github.io/2018/09/07/hdu1212">Big Number</a>a%b </p><p>hdu 1042 <a href="https://leflacon.github.io/2018/09/04/hdu1042">N！</a>阶乘</p><p>hdu 1715 <a href="https://leflacon.github.io/2018/09/04/hdu1715">大菲波数</a>大斐波那契</p><p>hdu 1250 <a href="https://leflacon.github.io/2018/09/05/hdu1250">Hat’s Fibonacci</a>类似斐波那契</p><p>hdu 1316 <a href="https://leflacon.github.io/2018/09/05/hdu1316">How Many Fibs?</a>区间斐波那契</p><p>hdu 1063 <a href="https://leflacon.github.io/2018/09/05/hdu1063">Exponentiation</a>小数的n次方高精度</p><p>hdu 5050 <a href="https://leflacon.github.io/2018/09/07/hdu5050">Divided Land</a>二进制大数</p><p>还有些没那么那么水的题就不收录在这篇了，放在分类java–BigInteger下面了</p><hr>]]></content>
      
      <categories>
          
          <category> java高精度 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java高精度 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1753 大明A+B（java高精度小数）</title>
      <link href="/2018/09/05/hdu1753/"/>
      <url>/2018/09/05/hdu1753/</url>
      <content type="html"><![CDATA[<p>Time Limit: 3000/1000 MS (Java/Others)    Memory Limit: 32768/32768 K (Java/Others)</p><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1753" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1753</a></p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>话说，经过了漫长的一个多月，小明已经成长了许多，所以他改了一个名字叫“大明”。<br>这时他已经不是那个只会做100以内加法的那个“小明”了，现在他甚至会任意长度的正小数的加法。</p><p>现在，给你两个正的小数A和B，你的任务是代表大明计算出A+B的值。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>本题目包含多组测试数据，请处理到文件结束。<br>每一组测试数据在一行里面包含两个长度不大于400的正小数A和B。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>请在一行里面输出输出A+B的值，请输出最简形式。详细要求请见Sample Output。</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.1</span> <span class="number">2.9</span></span><br><span class="line"><span class="number">1.1111111111</span> <span class="number">2.3444323343</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">1.1</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">3.4555434454</span></span><br><span class="line"><span class="number">2.1</span></span><br></pre></td></tr></table></figure><hr><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;  </span><br><span class="line"><span class="keyword">import</span> java.math.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> &#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner <span class="built_in">cin</span>=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        BigDecimal a,b;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">cin</span>.hasNext()) &#123;</span><br><span class="line">        a=<span class="built_in">cin</span>.nextBigDecimal();</span><br><span class="line">        b=<span class="built_in">cin</span>.nextBigDecimal();</span><br><span class="line">            String ans=a.add(b).stripTrailingZeros().toPlainString();<span class="comment">//化简</span></span><br><span class="line">            System.out.println(ans);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> java高精度 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java高精度 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1316 How Many Fibs?（java大数，区间斐波那契）</title>
      <link href="/2018/09/05/hdu1316/"/>
      <url>/2018/09/05/hdu1316/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1316" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1316</a></p><p>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)</p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>Recall the definition of the Fibonacci numbers:<br>f1 := 1<br>f2 := 2<br>fn := fn-1 + fn-2 (n &gt;= 3) </p><p>Given two numbers a and b, calculate how many Fibonacci numbers are in the range [a, b]. </p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The input contains several test cases. Each test case consists of two non-negative integer numbers a and b. Input is terminated by a = b = 0. Otherwise, a &lt;= b &lt;= 10^100. The numbers a and b are given with no superfluous leading zeros.</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each test case output on a single line the number of Fibonacci numbers fi with a &lt;= fi &lt;= b. </p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">10 </span><span class="number">100</span></span><br><span class="line"><span class="symbol">1234567890 </span><span class="number">9876543210</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><h3 id="Source"><a href="#Source" class="headerlink" title="Source"></a>Source</h3><p>University of Ulm Local Contest 2000</p><hr><p>[a,b]区间内有多少个斐波那契数，a &lt;= b &lt;= 10^100</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;  </span><br><span class="line"><span class="keyword">import</span> java.math.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> &#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner <span class="built_in">cin</span>=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> ans;</span><br><span class="line">        BigInteger a,b;</span><br><span class="line">        BigInteger f[]=<span class="keyword">new</span> BigInteger[<span class="number">1005</span>];</span><br><span class="line">        f[<span class="number">1</span>]=BigInteger.valueOf(<span class="number">1</span>);</span><br><span class="line">        f[<span class="number">2</span>]=BigInteger.valueOf(<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;=<span class="number">1000</span>;i++)f[i]=f[i<span class="number">-1</span>].add(f[i<span class="number">-2</span>]);</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">cin</span>.hasNextBigInteger()) &#123;</span><br><span class="line">        ans=<span class="number">0</span>;</span><br><span class="line">        a=<span class="built_in">cin</span>.nextBigInteger();</span><br><span class="line">        b=<span class="built_in">cin</span>.nextBigInteger();</span><br><span class="line">        <span class="keyword">if</span>(a.compareTo(BigInteger.valueOf(<span class="number">0</span>))==<span class="number">0</span>&amp;&amp;b.compareTo(BigInteger.valueOf(<span class="number">0</span>))==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">1000</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(a.compareTo(f[i])&lt;=<span class="number">0</span>&amp;&amp;b.compareTo(f[i])&gt;=<span class="number">0</span>)ans++;</span><br><span class="line">        <span class="keyword">if</span>(b.compareTo(f[i])&lt;<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">            System.out.println(ans);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> java高精度 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java高精度 </tag>
            
            <tag> 斐波那契 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1063 Exponentiation（java高精度）</title>
      <link href="/2018/09/05/hdu1063/"/>
      <url>/2018/09/05/hdu1063/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1063" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1063</a><br>Time Limit: 2000/500 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)</p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>Problems involving the computation of exact values of very large magnitude and precision are common. For example, the computation of the national debt is a taxing experience for many computer systems. </p><p>This problem requires that you write a program to compute the exact value of Rn where R is a real number ( 0.0 &lt; R &lt; 99.999 ) and n is an integer such that 0 &lt; n &lt;= 25. </p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The input will consist of a set of pairs of values for R and n. The R value will occupy columns 1 through 6, and the n value will be in columns 8 and 9.</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>The output will consist of one line for each line of input giving the exact value of R^n. Leading zeros should be suppressed in the output. Insignificant trailing zeros must not be printed. Don’t print the decimal point if the result is an integer.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">95.123</span> <span class="number">12</span></span><br><span class="line"><span class="number">0.4321</span> <span class="number">20</span></span><br><span class="line"><span class="number">5.1234</span> <span class="number">15</span></span><br><span class="line"><span class="number">6.7592</span>  <span class="number">9</span></span><br><span class="line"><span class="number">98.999</span> <span class="number">10</span></span><br><span class="line"><span class="number">1.0100</span> <span class="number">12</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">548815620517731830194541<span class="selector-class">.899025343415715973535967221869852721</span></span><br><span class="line"><span class="selector-class">.00000005148554641076956121994511276767154838481760200726351203835429763013462401</span></span><br><span class="line">43992025569<span class="selector-class">.928573701266488041146654993318703707511666295476720493953024</span></span><br><span class="line">29448126<span class="selector-class">.764121021618164430206909037173276672</span></span><br><span class="line">90429072743629540498<span class="selector-class">.107596019456651774561044010001</span></span><br><span class="line">1<span class="selector-class">.126825030131969720661201</span></span><br></pre></td></tr></table></figure><h3 id="Source"><a href="#Source" class="headerlink" title="Source"></a>Source</h3><p>East Central North America 1988</p><hr><p>求R^n，( 0.0 &lt; R &lt; 99.999，0 &lt; n &lt;= 25 )</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;  </span><br><span class="line"><span class="keyword">import</span> java.math.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> &#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner <span class="built_in">cin</span>=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">cin</span>.hasNext()) &#123;</span><br><span class="line">        BigDecimal ans=<span class="built_in">cin</span>.nextBigDecimal();</span><br><span class="line">            <span class="keyword">int</span> n=<span class="built_in">cin</span>.nextInt();</span><br><span class="line">            String res=ans.<span class="built_in">pow</span>(n).stripTrailingZeros().toPlainString();<span class="comment">//整数去掉小数点和后面的0</span></span><br><span class="line">            <span class="keyword">if</span>(res.startsWith(<span class="string">"0"</span>))&#123;</span><br><span class="line">            res=res.substring(<span class="number">1</span>);<span class="comment">//从第一位开始取，即去前导0</span></span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(res);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> java高精度 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java高精度 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1250 Hat&#39;s Fibonacci（java大数）</title>
      <link href="/2018/09/05/hdu1250/"/>
      <url>/2018/09/05/hdu1250/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1250" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1250</a></p><p>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)</p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>A Fibonacci sequence is calculated by adding the previous two members the sequence, with the first two members being both 1.<br>F(1) = 1, F(2) = 1, F(3) = 1,F(4) = 1, F(n&gt;4) = F(n - 1) + F(n-2) + F(n-3) + F(n-4)<br>Your task is to take a number as input, and print that Fibonacci number.</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>Each line will contain an integers. Process to end of file.</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each case, output the result in a line.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">100</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4203968145672990846840663646</span></span><br></pre></td></tr></table></figure><h3 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h3><p>No generated Fibonacci number in excess of 2005 digits will be in the test data, ie. F(20) = 66526 has 5 digits.</p><hr><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;  </span><br><span class="line"><span class="keyword">import</span> java.math.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> &#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner <span class="built_in">cin</span>=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        BigInteger []f=<span class="keyword">new</span> BigInteger[<span class="number">10005</span>];</span><br><span class="line">        f[<span class="number">1</span>]=BigInteger.valueOf(<span class="number">1</span>);</span><br><span class="line">        f[<span class="number">2</span>]=BigInteger.valueOf(<span class="number">1</span>);</span><br><span class="line">        f[<span class="number">3</span>]=BigInteger.valueOf(<span class="number">1</span>);</span><br><span class="line">        f[<span class="number">4</span>]=BigInteger.valueOf(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">5</span>;i&lt;=<span class="number">10000</span>;i++) &#123;</span><br><span class="line">            f[i]=f[i<span class="number">-1</span>].add(f[i<span class="number">-2</span>].add(f[i<span class="number">-3</span>].add(f[i<span class="number">-4</span>])));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">cin</span>.hasNext()) &#123;</span><br><span class="line">            n=<span class="built_in">cin</span>.nextInt();</span><br><span class="line">            System.out.println(f[n]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> java高精度 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java高精度 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1715 大菲波数（java大数）</title>
      <link href="/2018/09/04/hdu1715/"/>
      <url>/2018/09/04/hdu1715/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1715" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1715</a></p><p>Time Limit: 1000/1000 MS (Java/Others)    Memory Limit: 32768/32768 K (Java/Others)</p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>Fibonacci数列，定义如下：<br>f(1)=f(2)=1<br>f(n)=f(n-1)+f(n-2) n&gt;=3。<br>计算第n项Fibonacci数值。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>输入第一行为一个整数N，接下来N行为整数Pi（1&lt;=Pi&lt;=1000）。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出为N行，每行为对应的f(Pi)。</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><hr><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;  </span><br><span class="line"><span class="keyword">import</span> java.math.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> &#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner <span class="built_in">cin</span>=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        BigInteger []f=<span class="keyword">new</span> BigInteger[<span class="number">1005</span>];</span><br><span class="line">        f[<span class="number">1</span>]=BigInteger.valueOf(<span class="number">1</span>);</span><br><span class="line">        f[<span class="number">2</span>]=BigInteger.valueOf(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;=<span class="number">1000</span>;i++) &#123;</span><br><span class="line">            f[i]=f[i<span class="number">-1</span>].add(f[i<span class="number">-2</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> t=<span class="built_in">cin</span>.nextInt(),n;</span><br><span class="line">        <span class="keyword">while</span>(t--&gt;<span class="number">0</span>) &#123;</span><br><span class="line">            n=<span class="built_in">cin</span>.nextInt();</span><br><span class="line">            System.out.println(f[n]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> java高精度 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java高精度 </tag>
            
            <tag> 斐波那契 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1047 Integer Inquiry（java大数）</title>
      <link href="/2018/09/04/hdu1047/"/>
      <url>/2018/09/04/hdu1047/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1047" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1047</a></p><p>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)</p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>One of the first users of BIT’s new supercomputer was Chip Diller. He extended his exploration of powers of 3 to go from 0 to 333 and he explored taking various sums of those numbers.<br>“This supercomputer is great,” remarked Chip. “I only wish Timothy were here to see these results.” (Chip moved to a new apartment, once one became available on the third floor of the Lemon Sky apartments on Third Street.) </p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The input will consist of at most 100 lines of text, each of which contains a single VeryLongInteger. Each VeryLongInteger will be 100 or fewer characters in length, and will only contain digits (no VeryLongInteger will be negative). </p><p>The final input line will contain a single zero on a line by itself.</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>Your program should output the sum of the VeryLongIntegers given in the input. </p><p>This problem contains multiple test cases!</p><p>The first line of a multiple input is an integer N, then a blank line followed by N input blocks. Each input block is in the format indicated in the problem description. There is a blank line between input blocks.</p><p>The output format consists of N output blocks. There is a blank line between output blocks.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">123456789012345678901234567890</span></span><br><span class="line"><span class="number">123456789012345678901234567890</span></span><br><span class="line"><span class="number">123456789012345678901234567890</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">370370367037037036703703703670</span></span><br></pre></td></tr></table></figure><h3 id="Source"><a href="#Source" class="headerlink" title="Source"></a>Source</h3><p>East Central North America 1996</p><hr><p>最多100个100个字符那么长的大数相加</p><p>最后一行不多一个换行</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><pre><code>import java.io.*; import java.math.*;import java.util.*;public class Main {    public static void main(String[] args){        Scanner cin=new Scanner(System.in);        int t;        BigInteger ans,a;        t=cin.nextInt();        while(t--&gt;0){            ans=BigInteger.valueOf(0);            while(cin.hasNextBigInteger()) {                a=cin.nextBigInteger();                if(!a.equals(BigInteger.valueOf(0))) {                    ans=ans.add(a);                }                else {                    System.out.println(ans);                    if(t&gt;0)System.out.println(&quot;&quot;);                    break;                }            }        }    }}</code></pre>]]></content>
      
      <categories>
          
          <category> java高精度 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java高精度 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1042 N!（Java大整数，阶乘）</title>
      <link href="/2018/09/04/hdu1042/"/>
      <url>/2018/09/04/hdu1042/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1042" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1042</a></p><p>Time Limit: 10000/5000 MS (Java/Others)    Memory Limit: 262144/262144 K (Java/Others)</p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>Given an integer N(0 ≤ N ≤ 10000), your task is to calculate N!</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>One N in one line, process to the end of file.</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each N, output N! in one line.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure><hr><p>一路写水题的感觉真的好舒服0.0</p><p>不过这个题wa到怀疑人生啊。。直到我发现0的阶乘竟然是0！</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;  </span><br><span class="line"><span class="keyword">import</span> java.math.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> &#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner <span class="built_in">cin</span>=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        BigInteger []a=<span class="keyword">new</span> BigInteger[<span class="number">10005</span>];</span><br><span class="line">        a[<span class="number">0</span>]=BigInteger.valueOf(<span class="number">1</span>);</span><br><span class="line">        a[<span class="number">1</span>]=BigInteger.valueOf(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">10000</span>;i++) &#123;</span><br><span class="line">            a[i]=a[i<span class="number">-1</span>].multiply(BigInteger.valueOf(i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">cin</span>.hasNext()) &#123;</span><br><span class="line">            n=<span class="built_in">cin</span>.nextInt();</span><br><span class="line">            System.out.println(a[n]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> java高精度 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java高精度 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1002 A + B Problem II（java大数）</title>
      <link href="/2018/09/04/hdu1002/"/>
      <url>/2018/09/04/hdu1002/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1002" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1002</a></p><p>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)</p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>I have a very simple problem for you. Given two integers A and B, your job is to calculate the Sum of A + B.</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The first line of the input contains an integer T(1&lt;=T&lt;=20) which means the number of test cases. Then T lines follow, each line consists of two positive integers, A and B. Notice that the integers are very large, that means you should not process them by using 32-bit integer. You may assume the length of each integer will not exceed 1000.</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each test case, you should output two lines. The first line is “Case #:”, # means the number of the test case. The second line is the an equation “A + B = Sum”, Sum means the result of A + B. Note there are some spaces int the equation. Output a blank line between two test cases.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">112233445566778899 </span><span class="number">998877665544332211</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Case</span> <span class="number">1</span>:</span><br><span class="line"><span class="number">1</span> + <span class="number">2</span> = <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Case</span> <span class="number">2</span>:</span><br><span class="line"><span class="number">112233445566778899</span> + <span class="number">998877665544332211</span> = <span class="number">1111111111111111110</span></span><br></pre></td></tr></table></figure><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>a+b 长度小于1000</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><p>pe了无数次。。只好去网上找代码，最后一行没有附加换行。。</p><pre><code>import java.io.*;  import java.math.*;import java.util.*;public class Main{    public static void main(String[] args){        Scanner cin=new Scanner(System.in);        int t;        BigInteger a,b,c;        t=cin.nextInt();        for(int i=1;i&lt;=t;i++){            a=cin.nextBigInteger();            b=cin.nextBigInteger();            c=a.add(b);            System.out.println(&quot;Case &quot;+i+&quot;:&quot;);            System.out.println(a+&quot; + &quot;+b+&quot; = &quot;+c);            if(i&lt;t)System.out.println();        }    }}</code></pre>]]></content>
      
      <categories>
          
          <category> java高精度 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java高精度 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>C. Catalan Square -- Nordic Collegiate Programming Contest 2014（java大数，卡特兰数）</title>
      <link href="/2018/09/04/C.Catalan%20Square/"/>
      <url>/2018/09/04/C.Catalan%20Square/</url>
      <content type="html"><![CDATA[<p>题目里公式太多了0.0，懒得贴题目了直接抛链接吧<br><a href="https://nanti.jisuanke.com/t/30371" rel="external nofollow noopener noreferrer" target="_blank">https://nanti.jisuanke.com/t/30371</a></p><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>求卡特兰数的第n+1项，n范围[0,5000]</p><p>通项公式：<br><code>f(n)=C(n,2n)/(n+1)=(2n)!/((n!)*(n+1)!)=C(n,2n)-C(n+1,2n)</code></p><p>递推公式：<br><code>f(n)=f(n-1)*(4*n-2)/(n+1)</code></p><p>1,1,2,5,14,42,132,429,1430……</p><hr><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">import <span class="keyword">java.io.*; </span> </span><br><span class="line">import <span class="keyword">java.math.*;</span></span><br><span class="line"><span class="keyword">import </span><span class="keyword">java.util.*;</span></span><br><span class="line"><span class="keyword"> </span></span><br><span class="line">public class Main&#123;</span><br><span class="line">public static void main(String[] args)&#123;</span><br><span class="line"><span class="keyword">Scanner </span>cin=new <span class="keyword">Scanner(System.in);</span></span><br><span class="line"><span class="keyword"></span><span class="keyword">BigInteger </span>[]a=new <span class="keyword">BigInteger[5005];</span></span><br><span class="line"><span class="keyword"></span><span class="keyword">BigInteger </span>start=new <span class="keyword">BigInteger("1");</span></span><br><span class="line"><span class="keyword"></span>a[<span class="number">0</span>]=start<span class="comment">;</span></span><br><span class="line">a[<span class="number">1</span>]=start<span class="comment">;</span></span><br><span class="line">for(int i=<span class="number">2</span><span class="comment">;i&lt;5005;i++)&#123;</span></span><br><span class="line">Integer <span class="built_in">t1</span>=i+<span class="number">1</span><span class="comment">;</span></span><br><span class="line">Integer <span class="built_in">t2</span>=<span class="number">4</span>*i-2<span class="comment">; </span></span><br><span class="line"><span class="keyword">BigInteger </span><span class="built_in">k1</span>=new <span class="keyword">BigInteger(t1.toString());</span></span><br><span class="line"><span class="keyword"></span><span class="keyword">BigInteger </span>k2=new <span class="keyword">BigInteger(t2.toString());</span></span><br><span class="line"><span class="keyword"></span>a[i]=(a[i-1].<span class="keyword">multiply(k2)).divide(k1);</span></span><br><span class="line"><span class="keyword"></span>&#125;</span><br><span class="line">while(cin.hasNext())&#123;</span><br><span class="line">int n = cin.nextInt()<span class="comment">;</span></span><br><span class="line">System.out.println(a[n])<span class="comment">;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> java高精度 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java高精度 </tag>
            
            <tag> 卡特兰数 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>A. Too Rich -- ACM Changchun 2015（贪心，dfs，回溯）</title>
      <link href="/2018/08/31/A.%20Too%20Rich/"/>
      <url>/2018/08/31/A.%20Too%20Rich/</url>
      <content type="html"><![CDATA[<p><a href="https://nanti.jisuanke.com/t/30416" rel="external nofollow noopener noreferrer" target="_blank">https://nanti.jisuanke.com/t/30416</a></p><p>You are a rich person, and you think your wallet is too heavy and full now. So you want to give me some money by buying a lovely pusheen sticker which costs p dollars from me. To make your wallet lighter, you decide to pay exactly p dollars by as many coins and/or banknotes as possible.</p><p>For example, if p = 17 and you have two 10 coins, four 5 coins, and eight 1 coins, you will pay it by two 5 coins and seven 1 coins. But this task is incredibly hard since you are too rich and the sticker is too expensive and pusheen is too lovely, please write a program to calculate the best solution.</p><h3 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h3><p>The first line contains an integer T indicating the total number of test cases.</p><p>Each test case is a line with 11 integers p, c1, c5, c10, c20, c50, c100, c200, c500, c1000, c2000, specifying the price of the pusheen sticker, and the number of coins and banknotes in each denomination. The number ci means how many coins/banknotes in denominations of ii dollars in your wallet.</p><p>• 200001≤T≤20000</p><p>• 0≤p≤10^9</p><p>• ci≤100000</p><h3 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h3><p>For each test case, please output the maximum number of coins and/or banknotes he can pay for exactly p dollars in a line. If you cannot pay for exactly p dollars, please simply output ‘-1’.</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">17</span> <span class="number">8</span> <span class="number">4</span> <span class="number">2</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">100</span> <span class="number">99</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">2015</span> <span class="number">9</span> <span class="number">8</span> <span class="number">7</span> <span class="number">6</span> <span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">9</span> </span><br><span class="line"><span class="number">-1</span> </span><br><span class="line"><span class="number">36</span></span><br></pre></td></tr></table></figure><h3 id="题目来源"><a href="#题目来源" class="headerlink" title="题目来源"></a>题目来源</h3><p>ACM Changchun 2015</p><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>有面值1,5,10,20,50,100,200,500,1000,2000的硬币各若干，问你能不能用最多的硬币凑出p元，能的话输出最多硬币数，不能的话输出-1，</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>如果要保证硬币数最多的话，肯定是要让小面值的硬币尽可能的多，所以肯定是用贪心的思路去求解，有两种贪心的思路，一种是从小面值硬币开始看能不能凑成p元，还有一种是从大面值开始看能不能凑出money-p元（money是硬币能凑成的总钱数）</p><p>考虑一下这种情况：<code>60=10+50=20+20+20</code>，假设刚好只有10，20，20，20，50这五个硬币，从小面值开始取，如果10已取，那么只能找50，是无法保证最优的，所以这里考虑到回溯，如果开始取第二种硬币后，第一种硬币个数大于0，那么我就假设第一种硬币少取一个，用新状态继续dfs</p><p>但是仔细一想这也有个问题啊，因为是在所有可行解里找最小的，如果要你用2000个1元和1个2000元凑2001元，那么一开始贪心的取2000个1元硬币，然后一个一个减要dfs到什么时候0.0，所以这就是这题的另一个特点，硬币面值差比较大</p><p>所以不如用第二种贪心的思路，既然要求用最多的硬币凑成p，那不如求用最少的硬币凑成（money-p），这样就是从最大面值开始贪心，然后回溯</p><p>a[i]存的是给定的硬币数，b[i]存的是当前取的第i种硬币的个数，dfs（m，cur，res），m表示当前还需要凑的钱，cur表示当前轮到使用的硬币是哪种，res表示当前需要的硬币个数</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1000005</span>;</span><br><span class="line">LL coin[<span class="number">10</span>]=&#123;<span class="number">1</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">20</span>,<span class="number">50</span>,<span class="number">100</span>,<span class="number">200</span>,<span class="number">500</span>,<span class="number">1000</span>,<span class="number">2000</span>&#125;,a[<span class="number">10</span>],b[<span class="number">10</span>],ans;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(LL m,<span class="keyword">int</span> cur,<span class="keyword">int</span> res)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(m==<span class="number">0</span>)&#123;</span><br><span class="line">        ans=ans&gt;res?res:ans;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cur==<span class="number">-1</span>)<span class="keyword">return</span>;</span><br><span class="line">    b[cur]=a[cur]&gt;(m/coin[cur])?(m/coin[cur]):a[cur];</span><br><span class="line">    dfs(m-coin[cur]*b[cur],cur<span class="number">-1</span>,res+b[cur]);</span><br><span class="line">    <span class="keyword">if</span>(b[cur]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        b[cur]--;</span><br><span class="line">        dfs(m-coin[cur]*b[cur],cur<span class="number">-1</span>,res+b[cur]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t,p;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;p);</span><br><span class="line">        LL money=<span class="number">0</span>,geshu=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">            geshu+=a[i];</span><br><span class="line">            money+=coin[i]*a[i];      </span><br><span class="line">        &#125;</span><br><span class="line">        money-=p;</span><br><span class="line">        <span class="keyword">if</span>(money&lt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            ans=INF;</span><br><span class="line">            dfs(money,<span class="number">9</span>,<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span>(ans==INF)<span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,geshu-ans);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 搜索 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 贪心 </tag>
            
            <tag> dfs </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>wxpy -- 用 Python 玩微信</title>
      <link href="/2018/08/30/wxpy/"/>
      <url>/2018/08/30/wxpy/</url>
      <content type="html"><![CDATA[<p>在csdn公众号上看见的，感觉好妙，而且操作简单，这就去玩诶嘿</p><p><img src="/2018/08/30/wxpy/9.png" alt=""></p><hr><h2 id="安装wxpy"><a href="#安装wxpy" class="headerlink" title="安装wxpy"></a>安装wxpy</h2><ul><li><p>安装pip（python包管理工具）<br>打开终端，输入<code>sudo easy_install pip</code></p></li><li><p>安装wxpy<br>装好pip之后继续在终端输入<code>suso pip3 install -U wxpy</code></p><blockquote><p>（这里如果是python3的话就写pip3，2的话就写pip2，查找python版本的办法是在终端输入<code>python -V</code>（大写））</p></blockquote></li></ul><h2 id="用wxpy愉快的玩耍"><a href="#用wxpy愉快的玩耍" class="headerlink" title="用wxpy愉快的玩耍"></a>用wxpy愉快的玩耍</h2><ul><li>导入模块，初始化机器人（会扫一个二维码登陆微信）</li></ul><p><img src="/2018/08/30/wxpy/1.png" alt=""></p><p>官方文档里说最好用小号试0.0，但是我没有小号啊，直接大号玩0.0，被微信web封也拦不住我(￣Д￣)ﾉ</p><ul><li>拿基友来做实验 (=´∀｀)人(´∀｀=)</li></ul><p>新建一个变量就好了，随便记录一下，涂掉的是微信昵称</p><p><img src="/2018/08/30/wxpy/2.png" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@bot.register()   </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_others</span><span class="params">(msg)</span>:</span>   </span><br><span class="line">print(msg)</span><br></pre></td></tr></table></figure><p>然后有了上面这段就会print实时消息了，这样就能直接在python上实现最基本的收发消息了，奇妙啊，然后继续试了一大堆乱七八糟的功能，官方文档真的说的相当详细了，传送门放下面啦～</p><hr><h2 id="wxpy传送门"><a href="#wxpy传送门" class="headerlink" title="wxpy传送门"></a>wxpy传送门</h2><p style="background-color:rgba(221,204,222,0.7)">官方文档：<a href="https://wxpy.readthedocs.io/zh/latest/index.html" rel="external nofollow noopener noreferrer" target="_blank">wxpy: 用 Python 玩微信</a><br><br>github地址：<a href="https://github.com/youfou/wxpy" rel="external nofollow noopener noreferrer" target="_blank">微信机器人 / 可能是最优雅的微信个人号 API ✨✨</a></p><hr>]]></content>
      
      <categories>
          
          <category> 瞎折腾(=ﾟωﾟ)ﾉ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信 </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>文章阅读次数显示：Counter not initialized! See more at consoleerr msg的解决办法</title>
      <link href="/2018/08/29/hexo5/"/>
      <url>/2018/08/29/hexo5/</url>
      <content type="html"><![CDATA[<p>按照网上的leancloud教程配置下来，但是就是显示<code>Counter not initialized! See more at consoleerr msg</code></p><p>然后百度查到了这篇文章：<a href="https://leaferx.online/2018/02/11/lc-security" rel="external nofollow noopener noreferrer" target="_blank">Leancloud访客统计插件重大安全漏洞修复指南</a></p><p>猜测应该和next升级版啥的或者安全性有关，就按照这篇文章里说的配置了各种，</p><p>装了「leancloud-counter-security」这个插件，本以为能解决了的，然而还是显示那句英文(#ﾟДﾟ)</p><p>拖了好几天没解决，然后有一次在主题配置文件里乱翻终于发现了问题0.0，然后就是乱搞出奇迹了。。。这里放上我的解决办法</p><hr><p>首先打开主题配置文件_config.yml，next下的那个，搜索<code>valine:</code>（虽然这个是基于leancloud的评论系统的和阅读量无关，但是在这里发现了很重要的一段话0.0）</p><p><img src="/2018/08/29/hexo5/1.png" alt=""></p><p>可以看见visitor那一项后面有一段话，我把它截出来了，如下：</p><figure class="highlight mizar"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">leancloud-counter-security <span class="keyword">is</span> <span class="keyword">not</span> supported <span class="keyword">for</span> <span class="keyword">now</span>. When visitor <span class="keyword">is</span> <span class="keyword">set</span> to <span class="keyword">be</span> true,</span><br><span class="line"> appid <span class="keyword">and</span> appkey are recommended to <span class="keyword">be</span> the same <span class="keyword">as</span> leancloud_visitors' <span class="keyword">for</span> counter </span><br><span class="line"> <span class="keyword">compatibility</span>. Article reading statistic https://valine.js.org/visitor.html</span><br><span class="line"></span><br><span class="line">目前不支持leancloud-counter-security。 当访问者设置为true时，建议appid和appkey与</span><br><span class="line">leancloud_visitors相同，以实现计数器兼容性。 文章阅读统计https://valine.js.org/visitor.html</span><br></pre></td></tr></table></figure><p style="background-color:rgba(219,233,243,0.8)">这里说「leancloud-counter-security」这个插件是不支持的，我原来visitor设置的是false，然后把它改成了ture</p><hr><p>然后在_config.yml里搜索<code>leancloud_visitors:</code>，如图：</p><p><img src="/2018/08/29/hexo5/2.png" alt=""></p><p>这里这段话如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">If you don't care about security in lc counter and just want to <span class="keyword">use</span> it directly</span><br><span class="line">(<span class="keyword">without</span> hexo-leancloud-counter-<span class="keyword">security</span> <span class="keyword">plugin</span>), <span class="keyword">set</span> the <span class="string">`security`</span> <span class="keyword">to</span> <span class="string">`false`</span>.</span><br><span class="line"></span><br><span class="line">如果您不关心lc计数器的安全性，只想直接使用它（没有hexo-leancloud-counter-<span class="keyword">security</span>插件），</span><br><span class="line">将<span class="string">`security`</span>设置为<span class="string">`false`</span>。</span><br></pre></td></tr></table></figure><p>security这项，我原来设置的就是true，不知道有没有关系，此处只是放上我的设置而已</p><hr><p>然后打开leancloud，打开这个项目，存储–Counter–其他–权限设置：</p><p><img src="/2018/08/29/hexo5/3.png" alt=""></p><p style="background-color:rgba(219,233,243,0.8)">原来跟着那篇文章把add_fields这一项设了指定用户，然后现在改成了所有用户，虽然这样或许会对安全性有影响0.0，但是管他呢反正能用了先这样再说Σ（ﾟдﾟlll）</p><hr><p>设置了上面这两个，重新hexo-clean-g-d之后就可以发现阅读量正常显示了，但是这都是在上面那篇别人博客里的文章设置完成且仍出现此问题的情况下设置的，所以不清楚是不是二者相互作用的结果0.0</p>]]></content>
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> leancloud </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo下各种博客美化和功能插件汇总（内附本博客css样式）</title>
      <link href="/2018/08/29/blog2.0/"/>
      <url>/2018/08/29/blog2.0/</url>
      <content type="html"><![CDATA[<hr><p>自从开始捣鼓hexo也有十几天了，有了点基本功能之后就走上了博客美化的不归路 ◡ ヽ(`Д´)ﾉ ┻━┻ ，这个过程简直是摸爬滚打，各种看不懂各种试效果，而且百度对hexo似乎不是很友好啊，一般的教程都是csdn和简书之类的会放在前面，而且nexT主题还更新了，有些老的教程配置就没法用，还得看官方文档啥的0.0，这篇博客大概记录一下一些问题和几个汇总链接</p><p><img src="/2018/08/29/blog2.0/zx.gif" alt=""></p><hr><p style="background-color:rgba(219,233,243,0.7)"><strong>「目录」</strong> </p><p style="background-color:rgba(219,233,243,0.7)">【博客美化和功能插件汇总】<br>包括背景和背景动态效果，各种样式设置，递交搜索引擎，评论功能，阅读数，置顶……反正新手上手需要的，大佬的博客里都有</p><p style="background-color:rgba(219,233,243,0.7)">【捕捉一只会聊天的看板娘live2d】</p><p style="background-color:rgba(219,233,243,0.7)">【访客小地球插件revolvermaps】</p><p style="background-color:rgba(219,233,243,0.7)">【给hexo设置不同的背景图片（随机或轮播）】</p><p style="background-color:rgba(219,233,243,0.7)">【在菜单栏添加新页面with新图标】</p><p style="background-color:rgba(219,233,243,0.7)">【其他杂七杂八的记录】<br>1.npm无法装插件，549 throw err的解决办法<br>2.hexo g时报错Template render error: unexpected token: &gt;<br>3.文章阅读次数显示：Counter not initialized! See more at consoleerr msg<br></p><hr><h2 id="博客美化和功能插件汇总"><a href="#博客美化和功能插件汇总" class="headerlink" title="博客美化和功能插件汇总"></a><p style="background-color:rgba(219,233,243,0.7)">博客美化和功能插件汇总</p></h2><h3 id="hexo大佬的教程"><a href="#hexo大佬的教程" class="headerlink" title="hexo大佬的教程"></a><p style="background-color:rgba(239,221,236,0.7)">hexo大佬的教程</p></h3><p>最前面肯定要放上大佬的这篇：<a href="https://reuixiy.github.io/technology/computer/computer-aided-art/2017/06/09/hexo-next-optimization.html" rel="external nofollow noopener noreferrer" target="_blank"><strong>打造个性超赞博客Hexo+NexT+GitHubPages的超深度优化</strong></a></p><p>next主题升级可能出现的一些问题和解决：<a href="https://www.suyi123.com/2018/04/26/next%E4%B8%BB%E9%A2%98%E5%8D%87%E7%BA%A76-0/" rel="external nofollow noopener noreferrer" target="_blank">next主题升级6.0</a></p><p>其他还有很多，因为内容有重复就懒的放了，总之只要获得一个大佬的博客，那么通过他的友链，友链的友链，友链的友链的友链……你就能获得一堆大佬的博客啦～可以去控制台或者通过网页源代码看看那些好看的博客的秘密，虽然大佬们一般是不会留下踪迹的╮(￣▽￣””)╭</p><p>总之要先看完第一篇懂个大概才行，不然真的是一头雾水，之前不知道「themes/next/source/css/_custom/custom.styl」这个文件是next专门留给用户自定义样式的，以至于跟着别的教程改了一点点不知道哪里的样式设置的源码0.0，要改回来就不方便了，下面也放上我的css样式设置，有些是参考大佬的，没有写很多0.0硬学css，有点乱而且有些地方其实不知道实际是否存在相应对象 _ (:з」∠)_ 都是保存刷新看效果试出来的</p><h3 id="我的custom-styl（现在的可能有改动）"><a href="#我的custom-styl（现在的可能有改动）" class="headerlink" title="我的custom.styl（现在的可能有改动）"></a><p style="background-color:rgba(239,221,236,0.7)">我的custom.styl（现在的可能有改动）</p></h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Custom styles.</span></span><br><span class="line"><span class="comment">// 主页文章添加阴影效果</span></span><br><span class="line"> <span class="selector-class">.post</span> &#123;</span><br><span class="line">   <span class="attribute">margin</span>: <span class="number">19px</span> <span class="number">0px</span> <span class="number">45px</span> <span class="number">0px</span>;<span class="comment">//外框离外外框距离</span></span><br><span class="line">   <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">30px</span> <span class="number">5px</span> <span class="number">30px</span>;<span class="comment">//文字离外框距离</span></span><br><span class="line">   -webkit-<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">5</span>);</span><br><span class="line">   -moz-<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">5</span>);</span><br><span class="line">   <span class="attribute">background</span>: rgba(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.65</span>) none repeat scroll <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">// 页面背景图</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: url(https://hbimg.b0.upaiyun.com/fe7343d213869361a4428c581278d427e3d2b0aa9725-Os4lwD_fw658);</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    <span class="attribute">background-attachment</span>:fixed;</span><br><span class="line">    <span class="attribute">background-position</span>:<span class="number">50%</span> <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-size</span>: cover;   </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 页面最顶部的横线</span></span><br><span class="line"><span class="selector-class">.headband</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">1.5px</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: linear-gradient(<span class="number">90deg</span>, <span class="number">#e3cae4</span> <span class="number">0%</span>, <span class="number">#ffffff</span> <span class="number">15%</span>, <span class="number">#d6ceff</span> <span class="number">30%</span>, <span class="number">#e3cae4</span> <span class="number">44%</span>, <span class="number">#afc4e0</span> <span class="number">58%</span>, <span class="number">#d2e4fd</span> <span class="number">72%</span>, <span class="number">#d1d1ef</span> <span class="number">86%</span>, <span class="number">#e3cae4</span> <span class="number">100%</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 页面顶部行高</span></span><br><span class="line"><span class="selector-class">.header</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 页面留白更改</span></span><br><span class="line"><span class="selector-class">.header-inner</span> &#123;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.posts-expand</span> &#123;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-meta</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span> <span class="number">0px</span> <span class="number">0px</span> <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.post-button</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 站点名背景</span></span><br><span class="line"><span class="selector-class">.brand</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: rgba(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 站点名字体</span></span><br><span class="line"><span class="selector-class">.site-title</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: Times;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">38px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#222222</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 站点子标题</span></span><br><span class="line"><span class="selector-class">.site-subtitle</span>&#123;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">11px</span>;</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 去除页面底部页码上面的横线</span></span><br><span class="line"><span class="selector-class">.pagination</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 去掉图片边框</span></span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.post-gallery</span> <span class="selector-class">.post-gallery-img</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-title</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: Times;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">26px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">    <span class="attribute">letter-spacing</span>: <span class="number">1px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 文章的描述description</span></span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-meta</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#666</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// [Read More]按钮样式</span></span><br><span class="line"><span class="selector-class">.post-button</span> <span class="selector-class">.btn</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#3f3f3f</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#7f7f7f</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.post-button</span> <span class="selector-class">.btn</span>:hover &#123;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#7f7f7f</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 去除在页面文章之间的分割线</span></span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-eof</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: rgba(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 去除页面底部页码上面的横线</span></span><br><span class="line"><span class="selector-class">.pagination</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 右下角返回顶部按钮样式</span></span><br><span class="line"><span class="selector-class">.back-to-top</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#373737</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.back-to-top</span><span class="selector-class">.back-to-top-on</span> &#123;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 分类页面</span></span><br><span class="line"><span class="selector-class">.post-block</span><span class="selector-class">.page</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.category-all-page</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: -<span class="number">80px</span> <span class="number">0px</span> <span class="number">40px</span> <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">0px</span> rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>);</span><br><span class="line">    <span class="attribute">background-color</span>: rgba(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.5</span>);</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">80px</span> <span class="number">20px</span> <span class="number">100px</span> <span class="number">40px</span>;<span class="comment">//上右下左</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 选中文字部分的样式</span></span><br><span class="line">::selection &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fced6d</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#222222</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 侧栏</span></span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: rgba(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.5</span>);</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sidebar-inner</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 自定义页脚跳动的心样式</span></span><br><span class="line">@keyframes heartAnimate &#123;</span><br><span class="line">    0%,100%&#123;<span class="attribute">transform</span>:scale(<span class="number">1</span>);&#125;</span><br><span class="line">    10%,30%&#123;<span class="attribute">transform</span>:scale(<span class="number">0.9</span>);&#125;</span><br><span class="line">    20%,40%,60%,80%&#123;<span class="attribute">transform</span>:scale(<span class="number">1.1</span>);&#125;</span><br><span class="line">    50%,70%&#123;<span class="attribute">transform</span>:scale(<span class="number">1.1</span>);&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#heart</span> &#123;</span><br><span class="line">    <span class="attribute">animation</span>: heartAnimate <span class="number">1s</span> ease-in-out infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.with-love</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: rgba(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.5</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 文章底部评论</span></span><br><span class="line"><span class="selector-class">.comments</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">0px</span> rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.75</span>);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">80px</span> <span class="number">0px</span> <span class="number">40px</span> <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span> <span class="number">10px</span> <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.post-toc</span> <span class="selector-class">.nav</span> <span class="selector-class">.nav-child</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 侧栏</span></span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: inset <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">0px</span> rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>);</span><br><span class="line">    <span class="attribute">background-color</span>: rgba(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.6</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sidebar-inner</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 侧栏顶部文字</span></span><br><span class="line"><span class="selector-class">.sidebar-nav</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#7f7f7f</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sidebar-nav</span> <span class="selector-tag">li</span>:hover &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#222222</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sidebar-nav</span> <span class="selector-class">.sidebar-nav-active</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#222222</span>;</span><br><span class="line">    <span class="attribute">border-bottom-color</span>: <span class="number">#7f7f7f</span>;</span><br><span class="line">    <span class="attribute">border-bottom-width</span>: <span class="number">1.5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sidebar-nav</span> <span class="selector-class">.sidebar-nav-active</span>:hover &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#626262</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 侧栏站点概况行高</span></span><br><span class="line"><span class="selector-class">.site-overview</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 侧栏头像（圆形以及旋转效果）</span></span><br><span class="line"><span class="selector-class">.site-author-image</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> inset rgb(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">transition</span>: transform <span class="number">1.0s</span> ease-out;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">img</span>:hover &#123;</span><br><span class="line">    <span class="attribute">transform</span>: rotateZ(<span class="number">360deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">img</span>:hover &#123;</span><br><span class="line">    <span class="attribute">transform</span>: initial;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 侧栏站点作者名</span></span><br><span class="line"><span class="selector-class">.site-author-name</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="comment">//font-family: Times;</span></span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#626262</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 侧栏站点描述</span></span><br><span class="line"><span class="selector-class">.site-description</span> &#123;</span><br><span class="line">    <span class="attribute">letter-spacing</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">13px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#656565</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 侧栏站点文章、分类、标签</span></span><br><span class="line"><span class="selector-class">.site-state</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.3</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.site-state-item</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">1.5px</span> solid <span class="number">#7f7f7f</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 自定义的侧栏时间样式</span></span><br><span class="line"><span class="selector-id">#days</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#7f7f7f</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">13px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="获取十六进制的颜色"><a href="#获取十六进制的颜色" class="headerlink" title="获取十六进制的颜色"></a><p style="background-color:rgba(239,221,236,0.7)">获取十六进制的颜色</p></h3><p>rgb（0，0，0）这种常识就不说了</p><p>然后还有一种rgba（0，0，0，0）最后一位是设置透明度的，1是不透0是全透</p><p>最后一种就是用十六进制表示，可以看到代码里很多都是这种，下面就讲一下 <strong>「利用chrome浏览器的取十六进制色方法」</strong></p><p>1.右键——检查  </p><p><img src="/2018/08/29/blog2.0/3.png" alt=""></p><p>2.在下图的位置输入color然后回车，会跳到冒号后，输入red再回车，这时候会出现一个红色小方块，点击左侧任何网页里的地方，就可以获得这个地方的颜色，还有一个上下的箭头，就可以获得rgba了  </p><p><img src="/2018/08/29/blog2.0/4.png" alt="">   </p><p><img src="/2018/08/29/blog2.0/5.png" alt="">   </p><hr><h3 id="关于css里的padding和margin"><a href="#关于css里的padding和margin" class="headerlink" title="关于css里的padding和margin"></a><p style="background-color:rgba(239,221,236,0.7)">关于css里的padding和margin</p></h3><p>还是记录一下吧，margin和padding我一开始也分不清，多设置了几次就发现效果了，如下图：  </p><p><img src="/2018/08/29/blog2.0/2.png" alt="">  </p><p>可以看见一个文章框，对于post这部分来说margin设置的是文字矩形到阴影框的距离，padding设置的是两个阴影框之间的距离</p><hr><h2 id="捕捉一只会聊天的看板娘live2d"><a href="#捕捉一只会聊天的看板娘live2d" class="headerlink" title="捕捉一只会聊天的看板娘live2d"></a><p style="background-color:rgba(219,233,243,0.7)">捕捉一只会聊天的看板娘live2d</p></h2><p>这个花了好久才捕捉成功 ಥ_ಥ 因为一开始啥都不会么。。</p><blockquote><p>github地址：<a href="https://github.com/EYHN/hexo-helper-live2d" rel="external nofollow noopener noreferrer" target="_blank">hexo-helper-live2d</a><br>这个是没有聊天功能的，效果如下：</p></blockquote><p><img src="/2018/08/29/blog2.0/6.png" alt=""></p><blockquote><p>github地址：<a href="https://github.com/galnetwen/Live2D" rel="external nofollow noopener noreferrer" target="_blank">Live2D</a><br>教程：<a href="https://haremu.com/p/205" rel="external nofollow noopener noreferrer" target="_blank">Live2D！把可爱的看板娘捕捉到你的博客去吧</a><br><a href="https://imjad.cn/archives/lab/add-dynamic-poster-girl-with-live2d-to-your-blog-02" rel="external nofollow noopener noreferrer" target="_blank">给博客添加能动的看板娘(Live2D)-将其添加到网页上吧</a><br>实现的效果和本站的看板娘差不多，就不贴图了，不过我的live2d出处不是这个0.0</p></blockquote><p>不懂html一开始没懂啥叫把代码放到合适的位置0.0，然后看了一下别人的网页源代码，在一大片代码中搜索live2d就知道啦～结合教程很好上手</p><hr><h2 id="访客小地球插件revolvermaps"><a href="#访客小地球插件revolvermaps" class="headerlink" title="访客小地球插件revolvermaps"></a><p style="background-color:rgba(219,233,243,0.7)">访客小地球插件revolvermaps</p></h2><p>写在另一篇博客里了，放上传送门，效果见右侧侧栏站点概览下方</p><p><a href="https://leflacon.github.io/2018/08/29/hexo3/">给hexo添加访客小地球插件revolvermaps</a></p><hr><h2 id="给hexo设置不同的背景图片（随机或轮播）"><a href="#给hexo设置不同的背景图片（随机或轮播）" class="headerlink" title="给hexo设置不同的背景图片（随机或轮播）"></a><p style="background-color:rgba(219,233,243,0.7)">给hexo设置不同的背景图片（随机或轮播）</p></h2><p>理论上随机和轮播是两种：</p><p>第一种是轮播：用 <a href="https://github.com/jquery-backstretch/jquery-backstretch" rel="external nofollow noopener noreferrer" target="_blank">jquery-backstretch</a>，这种方法的特点是可以选择自己喜欢的图片进行轮播，但是比下面那个方法麻烦，我太菜了还没研究清楚，这里就不讲了</p><p>第二种是随机：用了个相当简单投机取巧的方法，偶然一试竟然还真的可以，只要刷新一下就能换张图，具体操作是只要获得一个随机图片的接口，然后在custom.styl里连上就行了，</p><p><img src="/2018/08/29/blog2.0/10.png" alt=""></p><p>各种随机图片的API写在了这篇博客里：<a href="https://leflacon.github.io/2018/08/29/hexo4/">几个随机图片API接口(给hexo设置随机背景图片)</a></p><hr><h2 id="在菜单栏添加新页面with新图标"><a href="#在菜单栏添加新页面with新图标" class="headerlink" title="在菜单栏添加新页面with新图标"></a><p style="background-color:rgba(219,233,243,0.7)">在菜单栏添加新页面with新图标</p></h2><p>开始的时候是想给自己做一个类似说说的页面，<s>实现很草率</s>(/ω＼)，就直接把leancloud的评论功能拿来当说说用，所以这样就需要在菜单栏新建一个页面了，操作如下：</p><h3 id="生成新的自定义页面"><a href="#生成新的自定义页面" class="headerlink" title="生成新的自定义页面"></a>生成新的自定义页面</h3><p>输入<code>sudo hexo new page &quot;nothing&quot;</code></p><p>然后在source下就会有一个nothing文件夹生成，打开之后自己编辑那个index.md页面就行了</p><h3 id="把新页面添加到菜单栏"><a href="#把新页面添加到菜单栏" class="headerlink" title="把新页面添加到菜单栏"></a>把新页面添加到菜单栏</h3><p>打开主题配置文件，找到menu那一块，如下配置：</p><p><img src="/2018/08/29/blog2.0/13.png" alt=""></p><p>说说: /nothing || star</p><p>第一项是显示的名字，第二项是对应的页面名，第三项是图标</p><p>next主题的图标来自Font Awesome，相当方便，只要在图标库里找到那个图标，然后直接输入图标名字即可，附上图标库链接 <a href="http://www.fontawesome.com.cn/faicons/" rel="external nofollow noopener noreferrer" target="_blank">http://www.fontawesome.com.cn/faicons/</a></p><hr><h2 id="其他杂七杂八的记录："><a href="#其他杂七杂八的记录：" class="headerlink" title="其他杂七杂八的记录："></a><p style="background-color:rgba(219,233,243,0.7)">其他杂七杂八的记录：</p></h2><hr><h3 id="npm无法装插件，549-throw-err的解决办法"><a href="#npm无法装插件，549-throw-err的解决办法" class="headerlink" title="npm无法装插件，549 throw err的解决办法"></a><p style="background-color:rgba(239,221,236,0.7)">npm无法装插件，549 throw err的解决办法</p></h3><p>有一次玩着玩着不小心把npm给玩坏了一直报错,没法install也没法uninstall，当时没截图，在历史记录里找到了一个开头：<br><code>module.js:549 throw err; ^ Error: Cannot find module……</code><br>把npm删了重装就好了0.0，下次用npm装插件的时候再也不强退了，这玩意儿似乎不好折腾</p><hr><h3 id="hexo-g时报错Template-render-error-unexpected-token-gt"><a href="#hexo-g时报错Template-render-error-unexpected-token-gt" class="headerlink" title="hexo g时报错Template render error: unexpected token: &gt;"></a><p style="background-color:rgba(239,221,236,0.7)">hexo g时报错Template render error: unexpected token: &gt;</p></h3><p>Template render error: (unknown path) [Line 28, Column 143]<br>  unexpected token: &gt;</p><p>如下图：</p><p><img src="/2018/08/29/blog2.0/11.png" alt=""></p><p>查了一下原因是因为md文件里有一些未转义字符报的奇奇怪怪的错，找了一下还真是，就因为我那篇里用了一个这样的颜文字 </p><p><img src="/2018/08/29/blog2.0/12.png" alt=""></p><p>编译的时候是不允许两对包起来的大括号这种形式的出现的，而且后来改成了注释掉的形式还是报错0.0实在是。。解决办法当然是把这个删了就好了</p><hr><h3 id="文章阅读次数显示：Counter-not-initialized-See-more-at-consoleerr-msg"><a href="#文章阅读次数显示：Counter-not-initialized-See-more-at-consoleerr-msg" class="headerlink" title="文章阅读次数显示：Counter not initialized! See more at consoleerr msg"></a><p style="background-color:rgba(239,221,236,0.7)">文章阅读次数显示：Counter not initialized! See more at consoleerr msg</p></h3><p>放个传送门，一个瞎折腾的方法0.0</p><p><a href="https://leflacon.github.io/2018/08/29/hexo5/">文章阅读次数显示：Counter not initialized! See more at consoleerr msg的解决办法</a></p><hr><p>其他问题好像还有一些吧，一时没记录也想不起来，以后或许会更新吧(￣Д￣)ﾉ唉天天放着控制台里的错不管，好愧疚0.0，好晚了不写了睡了睡了</p><hr>]]></content>
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> css </tag>
            
            <tag> live2d </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>几个随机图片API接口(给hexo设置随机背景图片)</title>
      <link href="/2018/08/29/hexo4/"/>
      <url>/2018/08/29/hexo4/</url>
      <content type="html"><![CDATA[<p style="background-color:rgba(221,204,222,0.7)">在custom.styl里设置一下body的background属性就行，在另一篇关于hexo的博客里有写<br></p><p><a href="https://unsplash.it/1600/900?random" rel="external nofollow noopener noreferrer" target="_blank">https://unsplash.it/1600/900?random</a>（据说国内加载略慢，我试了一下还好都差不多）</p><p><a href="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" rel="external nofollow noopener noreferrer" target="_blank">https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture</a>（必应每日图片）<br><a href="https://uploadbeta.com/api/pictures/random" rel="external nofollow noopener noreferrer" target="_blank">https://uploadbeta.com/api/pictures/random</a>（必应图库，一些风景图人物图什么的，都是现代风格）</p><p><a href="https://source.unsplash.com/random" rel="external nofollow noopener noreferrer" target="_blank">https://source.unsplash.com/random</a>（风格同上，但这个的图尺寸不是大图）</p><p style="background-color:rgba(221,204,222,0.7)">下面是几个二次元的,都差不多ヽ(´o｀（大部分都在本地测试过，可以放心食用），但是以下这些唯一的问题就是。。有些图片质量参差不齐。。所以要想完全和自己口味的话还是自己做一个吧，有开源代码<br></p><p>首先最牛逼的大概就是<a href="http://ikmoe.com/8548.html" rel="external nofollow noopener noreferrer" target="_blank"><strong>「漫月API」</strong></a>了，一直被模仿从未被超越那种╮(￣▽￣””)╭，但是现在关了，大概过几个月会开</p><p><a href="https://www.xwboke.cn/api/api.php" rel="external nofollow noopener noreferrer" target="_blank">https://www.xwboke.cn/api/api.php</a> （出处被不小心遗忘在风中了，对不住了0.0）</p><p><a href="https://img.xjh.me/random_img.php" rel="external nofollow noopener noreferrer" target="_blank">https://img.xjh.me/random_img.php</a> <a href="https://www.xjh.me/3069.html?replytocom=4888" rel="external nofollow noopener noreferrer" target="_blank">出处(・ω・)ノ</a></p><p><a href="http://www.dmoe.cc/random.php" rel="external nofollow noopener noreferrer" target="_blank">http://www.dmoe.cc/random.php</a>（1000+）<a href="http://www.dmoe.cc/" rel="external nofollow noopener noreferrer" target="_blank">出处(・ω・)ノ</a></p><p><a href="http://acg.bakayun.cn/randbg.php" rel="external nofollow noopener noreferrer" target="_blank">http://acg.bakayun.cn/randbg.php</a>（6000+ | 东方project可选 | 多尺寸）<a href="http://acg.bakayun.cn/" rel="external nofollow noopener noreferrer" target="_blank">出处(・ω・)ノ</a></p><p><a href="https://acg.yanwz.cn/api.php" rel="external nofollow noopener noreferrer" target="_blank">https://acg.yanwz.cn/api.php</a> (400+) <a href="https://acg.yanwz.cn/" rel="external nofollow noopener noreferrer" target="_blank">出处(・ω・)ノ</a></p><p><a href="http://moece.cc/apl/img.php" rel="external nofollow noopener noreferrer" target="_blank">http://moece.cc/apl/img.php</a>（433+）<a href="http://moece.cc/" rel="external nofollow noopener noreferrer" target="_blank">出处(・ω・)ノ</a></p><p><a href="https://random.52ecy.cn/random.php" rel="external nofollow noopener noreferrer" target="_blank">https://random.52ecy.cn/random.php</a> (8000+) <a href="https://random.52ecy.cn/" rel="external nofollow noopener noreferrer" target="_blank">出处(・ω・)ノ</a>！！这个我用不了，当前接口需要认证啥的emmmmm</p><p><a href="https://acg.moedragon.com/api.php" rel="external nofollow noopener noreferrer" target="_blank">https://acg.moedragon.com/api.php</a> (1000+) <a href="https://acg.moedragon.com/" rel="external nofollow noopener noreferrer" target="_blank">出处(・ω・)ノ</a></p><p><a href="http://api.3ewl.cc/acg/img.php" rel="external nofollow noopener noreferrer" target="_blank">http://api.3ewl.cc/acg/img.php</a>（1000+ | 尺寸可选） <a href="http://api.3ewl.cc/acg/" rel="external nofollow noopener noreferrer" target="_blank">出处(・ω・)ノ</a> 下面这篇是作者的博客<a href="http://www.3ewl.cc/324.html" rel="external nofollow noopener noreferrer" target="_blank">随机图片api–开源</a></p><p><a href="https://acg.toubiec.cn/random.php" rel="external nofollow noopener noreferrer" target="_blank">https://acg.toubiec.cn/random.php</a>（1000+） <a href="https://acg.toubiec.cn/" rel="external nofollow noopener noreferrer" target="_blank">出处(・ω・)ノ</a> 作者开源了 这篇博客里有介绍和源码 先蟹蟹大佬了<a href="https://www.toubiec.cn/164.html" rel="external nofollow noopener noreferrer" target="_blank">[项目]随机二次元图片API-已经开源</a></p><p style="background-color:rgba(221,204,222,0.7)">mark一下慢慢研究➡️ <a href="https://www.xhboke.com/14.html" rel="external nofollow noopener noreferrer" target="_blank">一个可在php中直接输出随机图片的API</a><br></p>]]></content>
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> api </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>给hexo添加访客小地球插件revolvermaps</title>
      <link href="/2018/08/29/hexo3/"/>
      <url>/2018/08/29/hexo3/</url>
      <content type="html"><![CDATA[<p>这个小插件是无意间看到的，感觉好神奇，就搞来用了<br>这是官网地址和官网截图：  </p><p><a href="https://www.revolvermaps.com/?target=setupgl" rel="external nofollow noopener noreferrer" target="_blank">revolvermaps——3D访客地图</a></p><p><img src="/2018/08/29/hexo3/7.png" alt=""></p><p>使用方法是先高级选项搞个自己喜欢的样式，然后复制那段html代码  </p><p><img src="/2018/08/29/hexo3/8.png" alt=""></p><p>然后找个你想放到的地方，因为放在了侧栏的最下方，所以就写一下放在侧栏的操作</p><p>打开<code>themes/next/layout/_custom/sidebar.swig</code>，在最后粘贴上复制的那段代码就可以了，重新编译一下打开侧栏就可以看到转转的访客地球了(・ω・)ノ</p><p><img src="/2018/08/29/hexo3/9.png" alt=""></p><p>现在小地球就在侧栏里，就不贴图了</p>]]></content>
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> revolvermaps </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1136 欧拉函数</title>
      <link href="/2018/08/23/1136%20%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/"/>
      <url>/2018/08/23/1136%20%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 0 难度：基础题 </p><p>对正整数n，欧拉函数是少于或等于n的数中与n互质的数的数目。此函数以其首名研究者欧拉命名，它又称为Euler’s totient function、φ函数、欧拉商数等。例如：φ(8) = 4（Phi(8) = 4），因为1,3,5,7均和8互质。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>输入一个数N。(2 &lt;= N &lt;= 10^9)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出Phi(n)。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">8</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>要求一个数欧拉函数，要先知道容斥是什么，这里就不写了</p><p>那么先随便举个例子比如 24 好了</p><p><code>24=2*2*2*3</code></p><p>2的倍数有：2，4，6，8，10，12，14，16，18，20，22，24<br>3的倍数有：3，66，9，12，15，18，21，24</p><p>那些既是2的倍数又是3的倍数的数就要靠容斥来处理了</p><p><code>phi(24)=24-24/2-24/3+24/(2*3)</code></p><p>这样一来就求好了 但是如果要写容斥分母要枚举啊好麻烦的 </p><p>所以这里有一个妙妙的等式(●°u°●)​ 」<br><code>phi(24)=24*(1-1/2-1/3+1/2*3)=24*(1-1/2)*(1-1/3)</code></p><p>所以只要找出n的质因子a，然后乘以（1-1/a）就好了,当然这里要通分一下方便操作</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">phi</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans=x;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i*i&lt;=x;i++)&#123;<span class="comment">//i*i&lt;=x！！！</span></span><br><span class="line"><span class="keyword">if</span>(x%i==<span class="number">0</span>)&#123;</span><br><span class="line">ans=ans/i*(i<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">while</span>(x%i==<span class="number">0</span>)x/=i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(x&amp;&amp;x!=<span class="number">1</span>)ans=ans/x*(x<span class="number">-1</span>);<span class="comment">//不要忘了这句！！</span></span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,phi(n));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 欧拉函数 </tag>
            
            <tag> 容斥 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1137 矩阵乘法</title>
      <link href="/2018/08/23/1137%20%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95/"/>
      <url>/2018/08/23/1137%20%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 0 难度：基础题 </p><p>给出2个N * N的矩阵M1和M2，输出2个矩阵相乘后的结果。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：1个数N，表示矩阵的大小(2 &lt;= N &lt;= 100)<br>第2 - N + 1行，每行N个数，对应M1的1行(0 &lt;= M1[i] &lt;= 1000)<br>第N + 2 - 2N + 1行，每行N个数，对应M2的1行(0 &lt;= M2[i] &lt;= 1000)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出共N行，每行N个数，对应M1 * M2的结果的一行。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">0</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">0 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">0</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>矩阵乘法基本操作</p><p>看了榜里别人的代码 如果直接一边乘一边输出的话就不用跑两遍了 会快很多</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">typedef</span> vector&lt;LL&gt;row;</span><br><span class="line"><span class="keyword">typedef</span> vector&lt;row&gt;mat;</span><br><span class="line">mat mul(mat a,mat b)&#123;</span><br><span class="line">mat c(a.<span class="built_in">size</span>(),row(b[<span class="number">0</span>].<span class="built_in">size</span>()));<span class="comment">//c的行数列数分别是a的行数，b的列数</span></span><br><span class="line"><span class="built_in">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a.<span class="built_in">size</span>();i++)&#123;<span class="comment">//a的第i行，b的第j列</span></span><br><span class="line"><span class="built_in">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;b.<span class="built_in">size</span>();j++)&#123;</span><br><span class="line"><span class="built_in">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;b[<span class="number">0</span>].<span class="built_in">size</span>();k++)</span><br><span class="line">c[i][j]=c[i][j]+a[i][k]*b[k][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> main()&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">scanf(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">mat m1(n,row(n)),m2(n,row(n));</span><br><span class="line"><span class="built_in">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="built_in">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)scanf(<span class="string">"%lld"</span>,&amp;m1[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="built_in">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)scanf(<span class="string">"%lld"</span>,&amp;m2[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">mat m=mul(m1,m2);</span><br><span class="line"><span class="built_in">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="built_in">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line"><span class="built_in">if</span>(j!=n<span class="number">-1</span>)printf(<span class="string">"%lld "</span>,m[i][j]);</span><br><span class="line"><span class="built_in">else</span> printf(<span class="string">"%lld\n"</span>,m[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>1174 区间中最大的数（RMQ，dp，线段树）</title>
      <link href="/2018/08/23/1174%20%E5%8C%BA%E9%97%B4%E4%B8%AD%E6%9C%80%E5%A4%A7%E7%9A%84%E6%95%B0%EF%BC%88RMQ%EF%BC%8Cdp%EF%BC%8C%E7%BA%BF%E6%AE%B5%E6%A0%91%EF%BC%89/"/>
      <url>/2018/08/23/1174%20%E5%8C%BA%E9%97%B4%E4%B8%AD%E6%9C%80%E5%A4%A7%E7%9A%84%E6%95%B0%EF%BC%88RMQ%EF%BC%8Cdp%EF%BC%8C%E7%BA%BF%E6%AE%B5%E6%A0%91%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 0 难度：基础题 </p><p>给出一个有N个数的序列，编号0 – N-1。进行Q次查询，查询编号i至j的所有数中，最大的数是多少。</p><p>例如: 1 7 6 3 1。i = 1, j = 3，对应的数为7 6 3，最大的数为7。（该问题也被称为RMQ问题）</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：1个数N，表示序列的长度。(2 &lt;= N &lt;= 10000)<br>第2 - N + 1行：每行1个数，对应序列中的元素。(0 &lt;= S[i] &lt;= 10^9)<br>第N + 2行：1个数Q，表示查询的数量。(2 &lt;= Q &lt;= 10000)<br>第N + 3 - N + Q + 2行：每行2个数，对应查询的起始编号i和结束编号j。(0 &lt;= i &lt;= j &lt;= N - 1)  </p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>共Q行，对应每一个查询区间的最大值。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">4</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>求区间最值，直接线段树水一发125ms</p><p>RMQ也跑了125ms</p><blockquote><p><strong>RMQ:</strong></p><p>dp[i][j]表示[i,i+2^j)个数中的最大值<br>初始化F[i,0]即为输入的第i个数<br>把dp[i][j]分成两段：</p><blockquote><p>[i,i+2^(j-1))<br>[i+2^(j-1),i+2^j)   </p></blockquote><p>状态转移方程：dp[i][j]=max(dp[i][j-1],dp[i+2^(j-1)][j-1])  </p><p>查询：<br>要查询[i,j],需要找到覆盖这个区间的两段<br>区间长度为(j-i+1)，取k=log2(j-i+1)<br>则ans=max(dp[i][k],dp[j-2^k+1][k])，也就是[i,i+2^k),[j-2^k+1,j+1)这两段 </p></blockquote><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><p>【线段树】</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson l,m,rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson m+1,r,rt&lt;&lt;1|1</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">200005</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> MAX[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">MAX[rt]=max(MAX[rt&lt;&lt;<span class="number">1</span>],MAX[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l==r)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;MAX[rt]);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">build(lson);</span><br><span class="line">build(rson);</span><br><span class="line">pushup(rt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> sc,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">MAX[rt]=sc;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m&gt;=p)update(p,sc,lson);</span><br><span class="line"><span class="keyword">else</span> update(p,sc,rson);</span><br><span class="line">pushup(rt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L&lt;=l&amp;&amp;R&gt;=r)&#123;</span><br><span class="line"><span class="keyword">return</span> MAX[rt];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(m&gt;=L)ans=max(ans,query(L,R,lson));</span><br><span class="line"><span class="keyword">if</span>(R&gt;m)ans=max(ans,query(L,R,rson));</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">build(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br><span class="line">a++;b++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,query(a,b,<span class="number">1</span>,n,<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>【RMQ】</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">10005</span>;</span><br><span class="line"><span class="keyword">int</span> dp[N][<span class="number">15</span>],n,m;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rmq</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;(<span class="number">1</span>&lt;&lt;j)&lt;=n;j++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i+(<span class="number">1</span>&lt;&lt;j)<span class="number">-1</span>&lt;=n)</span><br><span class="line">dp[i][j]=max(dp[i][j<span class="number">-1</span>],dp[i+(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>))][j<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;dp[i][<span class="number">0</span>]);</span><br><span class="line">rmq();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;l,&amp;r);</span><br><span class="line">l++;r++;</span><br><span class="line"><span class="keyword">int</span> k=<span class="built_in">log</span>(r-l+<span class="number">1</span>)/<span class="built_in">log</span>(<span class="number">2</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,max(dp[l][k],dp[r-(<span class="number">1</span>&lt;&lt;k)+<span class="number">1</span>][k]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dp </tag>
            
            <tag> 线段树 </tag>
            
            <tag> rmq </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1079 中国剩余定理</title>
      <link href="/2018/08/22/1079%20%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86/"/>
      <url>/2018/08/22/1079%20%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 0 难度：基础题 </p><p>一个正整数K，给出K Mod 一些质数的结果，求符合条件的最小的K。例如，K % 2 = 1, K % 3 = 2, K % 5 = 3。符合条件的最小的K = 23。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：1个数N表示后面输入的质数及模的数量。（2 &lt;= N &lt;= 10)<br>第2 - N + 1行，每行2个数P和M，中间用空格分隔，P是质数，M是K % P的结果。（2 &lt;= P &lt;= 100, 0 &lt;= K &lt; P)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出符合条件的最小的K。数据中所有K均小于10^9。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">23</span></span><br></pre></td></tr></table></figure><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给n对数，pi，mi表示k%pi=mi,问是否存在一个最小的k满足所有pi和mi</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>中国剩余定理 相当水的裸题 直接模版上就好了</p><p>先拿样例举例一下(・ω・)ノ</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">k%<span class="number">2</span>=<span class="number">1</span>      </span><br><span class="line">k%<span class="number">3</span>=<span class="number">2</span>  </span><br><span class="line">k%<span class="number">5</span>=<span class="number">3</span>  </span><br><span class="line"></span><br><span class="line">先构造一下下面这个东西，逆元搞一下</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>*<span class="number">5</span>*inv(<span class="number">3</span>*<span class="number">5</span>,<span class="number">2</span>)%<span class="number">2</span>=<span class="number">1</span>            <span class="number">1</span>*<span class="number">3</span>*<span class="number">5</span>*inv(<span class="number">3</span>*<span class="number">5</span>,<span class="number">2</span>)%<span class="number">2</span>=<span class="number">1</span></span><br><span class="line"><span class="number">2</span>*<span class="number">5</span>*inv(<span class="number">2</span>*<span class="number">5</span>,<span class="number">3</span>)%<span class="number">3</span>=<span class="number">1</span>     ==&gt;    <span class="number">2</span>*<span class="number">2</span>*<span class="number">5</span>*inv(<span class="number">2</span>*<span class="number">5</span>,<span class="number">3</span>)%<span class="number">3</span>=<span class="number">2</span> </span><br><span class="line"><span class="number">2</span>*<span class="number">3</span>*inv(<span class="number">2</span>*<span class="number">3</span>,<span class="number">5</span>)%<span class="number">5</span>=<span class="number">1</span>            <span class="number">3</span>*<span class="number">2</span>*<span class="number">3</span>*inv(<span class="number">2</span>*<span class="number">3</span>,<span class="number">5</span>)%<span class="number">5</span>=<span class="number">3</span></span><br><span class="line">  </span><br><span class="line">然后和上面式子一比 余数就这么出来啦</span><br><span class="line"></span><br><span class="line">令k1=<span class="number">1</span>*<span class="number">3</span>*<span class="number">5</span>*inv(<span class="number">3</span>*<span class="number">5</span>,<span class="number">2</span>),k2=<span class="number">2</span>*<span class="number">2</span>*<span class="number">5</span>*inv(<span class="number">2</span>*<span class="number">5</span>,<span class="number">3</span>),k3=<span class="number">3</span>*<span class="number">2</span>*<span class="number">3</span>*inv(<span class="number">2</span>*<span class="number">3</span>,<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">也就是</span><br><span class="line">k1%<span class="number">2</span>=<span class="number">1</span>,且k1是<span class="number">3</span>和<span class="number">5</span>的倍数</span><br><span class="line">k2%<span class="number">3</span>=<span class="number">2</span>,且k2是<span class="number">2</span>和<span class="number">5</span>的倍数</span><br><span class="line">k3%<span class="number">5</span>=<span class="number">3</span>,且k3是<span class="number">2</span>和<span class="number">3</span>的倍数</span><br><span class="line"></span><br><span class="line">令k=k1+k2+k3</span><br><span class="line"></span><br><span class="line">k%<span class="number">2</span>=k1%<span class="number">2</span>+k2%<span class="number">2</span>+k3%<span class="number">2</span>=<span class="number">1</span>+<span class="number">0</span>+<span class="number">0</span></span><br><span class="line">k%<span class="number">3</span>=k1%<span class="number">3</span>+k2%<span class="number">3</span>+k3%<span class="number">3</span>=<span class="number">0</span>+<span class="number">2</span>+<span class="number">0</span></span><br><span class="line">k%<span class="number">5</span>=k1%<span class="number">5</span>+k2%<span class="number">5</span>+k3%<span class="number">5</span>=<span class="number">0</span>+<span class="number">0</span>+<span class="number">3</span></span><br><span class="line"></span><br><span class="line">所以k就是要求的那个答案啦</span><br></pre></td></tr></table></figure><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> p=<span class="number">1000000007</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ex_gcd</span><span class="params">(LL a,LL b,LL &amp;x,LL &amp;y,LL &amp;d)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!b)&#123;</span><br><span class="line">    d=a;x=<span class="number">1</span>;y=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        ex_gcd(b,a%b,y,x,d);</span><br><span class="line">        y-=x*(a/b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">inv</span><span class="params">(LL t,LL p)</span></span>&#123;</span><br><span class="line">    LL d,x,y;</span><br><span class="line">    ex_gcd(t,p,x,y,d);</span><br><span class="line">    <span class="keyword">return</span> d==<span class="number">1</span>?(x%p+p)%p:<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">china</span><span class="params">(<span class="keyword">int</span> n,LL *a,LL *m)</span></span>&#123;</span><br><span class="line">    LL M=<span class="number">1</span>,ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)M*=m[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        LL w=M/m[i];</span><br><span class="line">        ret=(ret+w*inv(w,m[i])*a[i])%M;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (ret+M)%M;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">LL a[<span class="number">11</span>],m[<span class="number">11</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;m[i],&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,china(n,a,m));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 中国剩余定理 </tag>
            
            <tag> 逆元 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1181 质数中的质数（质数筛法,埃筛素数）</title>
      <link href="/2018/08/22/1181%20%E8%B4%A8%E6%95%B0%E4%B8%AD%E7%9A%84%E8%B4%A8%E6%95%B0%EF%BC%88%E8%B4%A8%E6%95%B0%E7%AD%9B%E6%B3%95,%E5%9F%83%E7%AD%9B%E7%B4%A0%E6%95%B0%EF%BC%89/"/>
      <url>/2018/08/22/1181%20%E8%B4%A8%E6%95%B0%E4%B8%AD%E7%9A%84%E8%B4%A8%E6%95%B0%EF%BC%88%E8%B4%A8%E6%95%B0%E7%AD%9B%E6%B3%95,%E5%9F%83%E7%AD%9B%E7%B4%A0%E6%95%B0%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>题目来源： Sgu<br>基准时间限制：1 秒 空间限制：131072 KB 分值: 0 难度：基础题 </p><p>如果一个质数，在质数列表中的编号也是质数，那么就称之为质数中的质数。例如：3 5分别是排第2和第3的质数，所以他们是质数中的质数。现在给出一个数N，求&gt;=N的最小的质数中的质数是多少（可以考虑用质数筛法来做）。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>输入一个数N(N &lt;= 10^6)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出&gt;=N的最小的质数中的质数。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">20</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">31</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>埃筛素数 </p><p>加个计数和break判断就行</p><p>j会爆int，要开long long</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1000233</span>;</span><br><span class="line"><span class="keyword">bool</span> prime[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,cnt=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="built_in">memset</span>(prime,<span class="literal">true</span>,<span class="keyword">sizeof</span>(prime));</span><br><span class="line">prime[<span class="number">1</span>]=<span class="literal">false</span>;</span><br><span class="line">prime[<span class="number">2</span>]=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span>(LL i=<span class="number">2</span>;i&lt;N;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(prime[i])&#123;</span><br><span class="line">cnt++;</span><br><span class="line"><span class="keyword">if</span>(prime[cnt]&amp;&amp;i&gt;=n)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,i);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(LL j=i*i;j&lt;N;j+=i)prime[j]=<span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 埃筛素数 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1183 编辑距离（dp，字符串）</title>
      <link href="/2018/08/22/1183%20%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB%EF%BC%88dp%EF%BC%8C%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%89/"/>
      <url>/2018/08/22/1183%20%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB%EF%BC%88dp%EF%BC%8C%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 0 难度：基础题 </p><p>编辑距离，又称Levenshtein距离（也叫做Edit Distance），是指两个字串之间，由一个转成另一个所需的最少编辑操作次数。许可的编辑操作包括将一个字符替换成另一个字符，插入一个字符，删除一个字符。</p><p>例如将kitten一字转成sitting：<br>sitten （k-&gt;s）<br>sittin （e-&gt;i）<br>sitting （-&gt;g）<br>所以kitten和sitting的编辑距离是3。俄罗斯科学家Vladimir Levenshtein在1965年提出这个概念。</p><p>给出两个字符串a,b，求a和b的编辑距离。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：字符串a(a的长度 &lt;= 1000)。<br>第2行：字符串b(b的长度 &lt;= 1000)。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出a和b的编辑距离</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">kitten</span></span><br><span class="line"><span class="attribute">sitting</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><hr><h3 id="提解："><a href="#提解：" class="headerlink" title="提解："></a>提解：</h3><p>dp[i][j]表示字符串a的[0,i)和字符串b的[0,j)的最小编辑距离</p><p>写出状态转移方程dp[i][j]=min(dp[i-1][j]+1,dp[i][j-1]+1,dp[i-1][j-1]+(a[i-1]==b[j-1]?0:1))</p><ul><li>dp[i-1][j]+1表示前[0,i-1)[0,j)已经相同，要改第i位</li><li>dp[i][j-1]+1表示前[0,i)[0,j-1)已经相同，要改第j位</li><li>dp[i-1][j-1]+(a[i-1]==b[j-1]?0:1）表示前[0,i-1)[0,j-1)已经相同，如果ai和bj相同就改其中一个</li></ul><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1005</span>;</span><br><span class="line"><span class="keyword">char</span> a[N],b[N],ans[N];</span><br><span class="line"><span class="keyword">int</span> dp[N][N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s%s"</span>,a,b);</span><br><span class="line"><span class="keyword">int</span> lena=<span class="built_in">strlen</span>(a),lenb=<span class="built_in">strlen</span>(b);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=lena;i++)dp[i][<span class="number">0</span>]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=lenb;i++)dp[<span class="number">0</span>][i]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=lena;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=lenb;j++)&#123;</span><br><span class="line">dp[i][j]=min(dp[i<span class="number">-1</span>][j]+<span class="number">1</span>,dp[i][j<span class="number">-1</span>]+<span class="number">1</span>);</span><br><span class="line">dp[i][j]=min(dp[i][j],dp[i<span class="number">-1</span>][j<span class="number">-1</span>]+(a[i<span class="number">-1</span>]==b[j<span class="number">-1</span>]?<span class="number">0</span>:<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dp[lena][lenb]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dp </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1185 威佐夫游戏 V2（高精度，乘法模拟）</title>
      <link href="/2018/08/22/1185%20%E5%A8%81%E4%BD%90%E5%A4%AB%E6%B8%B8%E6%88%8F%20V2%EF%BC%88%E9%AB%98%E7%B2%BE%E5%BA%A6%EF%BC%8C%E4%B9%98%E6%B3%95%E6%A8%A1%E6%8B%9F%EF%BC%89/"/>
      <url>/2018/08/22/1185%20%E5%A8%81%E4%BD%90%E5%A4%AB%E6%B8%B8%E6%88%8F%20V2%EF%BC%88%E9%AB%98%E7%B2%BE%E5%BA%A6%EF%BC%8C%E4%B9%98%E6%B3%95%E6%A8%A1%E6%8B%9F%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 0 难度：基础题 </p><p>有2堆石子。A B两个人轮流拿，A先拿。每次可以从一堆中取任意个或从2堆中取相同数量的石子，但不可不取。拿到最后1颗石子的人获胜。假设A B都非常聪明，拿石子的过程中不会出现失误。给出2堆石子的数量，问最后谁能赢得比赛。</p><p>例如：2堆石子分别为3颗和5颗。那么不论A怎样拿，B都有对应的方法拿到最后1颗。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：一个数T，表示后面用作输入测试的数的数量。（1 &lt;= T &lt;= 10000)<br>第2 - T + 1行：每行2个数分别是2堆石子的数量，中间用空格分隔。(1 &lt;= N &lt;= 10^18)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>共T行，如果A获胜输出A，如果B获胜输出B。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">5</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">4</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">9</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">B</span><br><span class="line"><span class="keyword">A</span></span><br><span class="line"><span class="keyword">A</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>很水的威佐夫博弈 想都没想直接LL一发然后wa了</p><p>因为n太大了，和黄金分割数相乘精度不够，所以要手动乘法模拟</p><p>把LL分成前9位q，后9位h</p><p>(sqrt(5)+1)/2的小数部分分成<code>x[3]={618033988,749894848,204586834}</code></p><p>如下模拟：(具体见代码)</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">      x0   x1   x2</span></span><br><span class="line"><span class="code">  *         q    h</span></span><br><span class="line">----------------------</span><br><span class="line"><span class="code">      x0*h x1*h x2*h</span></span><br><span class="line"><span class="code"> x0*q x1*q x2*q</span></span><br><span class="line">----------------------</span><br></pre></td></tr></table></figure><h3 id="附加："><a href="#附加：" class="headerlink" title="附加："></a>附加：</h3><p>这题还牵扯到另一个问题，这个27位小数从何而来，下面这个直接用根号求出的显然是不行的<code>x[3]={618033988,74989490,2525738871}</code>，那么如何在没有百度情况下获得高精度的黄金分割数呢？</p><p>补充在了这一篇中 <a href="https://leflacon.github.io/2018/08/22/%E8%AE%A1%E7%AE%97%E9%BB%84%E9%87%91%E5%88%86%E5%89%B2%E6%95%B0%E5%B0%8F%E6%95%B0%E7%82%B9%E5%90%8E100%E4%BD%8D/">计算黄金分割数小数点后几位</a></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line">LL x[<span class="number">3</span>]=&#123;<span class="number">618033988</span>,<span class="number">749894848</span>,<span class="number">204586834</span>&#125;;</span><br><span class="line"><span class="comment">//1.618033988,749894848,204586834</span></span><br><span class="line"><span class="keyword">const</span> LL p=<span class="number">1e9</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">LL a,b,t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;a,&amp;b);</span><br><span class="line"><span class="keyword">if</span>(a&gt;b)&#123;</span><br><span class="line">LL tmp=a;a=b;b=tmp;</span><br><span class="line">&#125;</span><br><span class="line">LL num=b-a;</span><br><span class="line">LL q=num/p,h=num%p;</span><br><span class="line">LL ans=x[<span class="number">2</span>]*h;</span><br><span class="line">ans=ans/p+x[<span class="number">1</span>]*h+x[<span class="number">2</span>]*q;</span><br><span class="line">ans=ans/p+x[<span class="number">0</span>]*h+x[<span class="number">1</span>]*q;</span><br><span class="line">ans=ans/p+x[<span class="number">0</span>]*q+num;</span><br><span class="line"><span class="keyword">if</span>(ans==a)<span class="built_in">printf</span>(<span class="string">"B\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"A\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 威佐夫博弈 </tag>
            
            <tag> 模拟 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>计算黄金分割数小数点后1000位（java大数，斐波那契，二分求根号5高精度）</title>
      <link href="/2018/08/22/%E8%AE%A1%E7%AE%97%E9%BB%84%E9%87%91%E5%88%86%E5%89%B2%E6%95%B0%E5%B0%8F%E6%95%B0%E7%82%B9%E5%90%8E1000%E4%BD%8D/"/>
      <url>/2018/08/22/%E8%AE%A1%E7%AE%97%E9%BB%84%E9%87%91%E5%88%86%E5%89%B2%E6%95%B0%E5%B0%8F%E6%95%B0%E7%82%B9%E5%90%8E1000%E4%BD%8D/</url>
      <content type="html"><![CDATA[<p style="background-color:rgba(219,233,243,0.8)">首先本文最初是为了精确计算黄金分割数小数点后27位写的，当时还不会java大数，所以写了个c++没有高精度的版本，java算了1000位，为了数据准确所以用了斐波那契和二分根号5两种写法对拍，1000位比对一致，和网上的结果也一致，可以放心食用</p><p>先放结果。。方便我打表</p><p><code>0.6180339887498948482045868343656381177203091798057628621354486227052604628189024497072072041893911374847540880753868917521266338622235369317931800607667263544333890865959395829056383226613199282902678806752087668925017116962070322210432162695486262963136144381497587012203408058879544547492461856953648644492410443207713449470495658467885098743394422125448770664780915884607499887124007652170575179788341662562494075890697040002812104276217711177780531531714101170466659914669798731761356006708748071013179523689427521948435305678300228785699782977834784587822891109762500302696156170025046433824377648610283831268330372429267526311653392473167111211588186385133162038400522216579128667529465490681131715993432359734949850904094762132229810172610705961164562990981629055520852479035240602017279974717534277759277862561943208275051312181562855122248093947123414517022373580577278616008688382952304592647878017889921990270776903895321968198615143780314997411069260886742962267575605231727775203536139362</code></p><hr><h2 id="c"><a href="#c" class="headerlink" title="c++"></a>c++</h2><h3 id="c-思路（斐波那契）："><a href="#c-思路（斐波那契）：" class="headerlink" title="c++思路（斐波那契）："></a>c++思路（斐波那契）：</h3><p>黄金分割数可以递归求得</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">n=<span class="number">1</span>    <span class="number">1</span>/(<span class="number">1</span>+<span class="number">1</span>)=<span class="number">1</span>/<span class="number">2</span></span><br><span class="line">n=<span class="number">2</span>    <span class="number">1</span>/(<span class="number">1</span>+<span class="number">1</span>/<span class="number">2</span>)=<span class="number">2</span>/<span class="number">3</span></span><br><span class="line">n=<span class="number">3</span>    <span class="number">1</span>/(<span class="number">1</span>+<span class="number">2</span>/<span class="number">3</span>)=<span class="number">3</span>/<span class="number">5</span></span><br><span class="line">n=<span class="number">4</span>    <span class="number">1</span>/(<span class="number">1</span>+<span class="number">3</span>/<span class="number">5</span>)=<span class="number">5</span>/<span class="number">8</span></span><br><span class="line">……</span><br><span class="line">n=i    f(i+<span class="number">1</span>)/f(i+<span class="number">2</span>)</span><br></pre></td></tr></table></figure><table><thead><tr><th>n</th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>……</th></tr></thead><tbody><tr><td>ans</td><td>0</td><td>1</td><td>1</td><td>2</td><td>3</td><td>5</td><td>8</td><td>13</td><td>21</td><td>……</td></tr></tbody></table><p>可以发现其实就是斐波那契数列的两个数相除，越往后越接近黄金分割数，据说从250项开始前100位就不变了，这样问题就解决了，只要手动模拟除法就可以让小数自己精确到天涯海角了</p><p>但是这样斐波那契第250项就很大了，c++的话肯定要开数组高精度来存的，所以c++代码里只计算到80位，这对于算黄金分割数小数点后27位是够用了的</p><h3 id="c-代码："><a href="#c-代码：" class="headerlink" title="c++代码："></a>c++代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line">LL f[<span class="number">105</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">f[<span class="number">0</span>]=<span class="number">0</span>;f[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;<span class="number">81</span>;i++)&#123;</span><br><span class="line">f[i]=f[i<span class="number">-1</span>]+f[i<span class="number">-2</span>];</span><br><span class="line">&#125;</span><br><span class="line">LL x=f[<span class="number">79</span>],y=f[<span class="number">80</span>];</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">101</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">28</span>;i++)&#123;</span><br><span class="line">a[i]=x/y;</span><br><span class="line">x=(x%y)*<span class="number">10</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;a[i];</span><br><span class="line"><span class="keyword">if</span>(i%<span class="number">9</span>==<span class="number">0</span>)<span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运算结果："><a href="#运算结果：" class="headerlink" title="运算结果："></a>运算结果：</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">0 </span><span class="number">618033988</span> <span class="number">749894848</span> <span class="number">204586834</span></span><br></pre></td></tr></table></figure><hr><h2 id="java"><a href="#java" class="headerlink" title="java"></a>java</h2><h3 id="java思路（斐波那契，二分计算根号5）"><a href="#java思路（斐波那契，二分计算根号5）" class="headerlink" title="java思路（斐波那契，二分计算根号5）"></a>java思路（斐波那契，二分计算根号5）</h3><ul><li><p>斐波那契<br>同c++，但是java大数里算到了斐波那契第1e5项，对于计算黄金分割数1000位已经足够</p></li><li><p>二分计算根号5<br>设l,r初始值，然后二分找最接近√5的数</p></li></ul><h3 id="java代码："><a href="#java代码：" class="headerlink" title="java代码："></a>java代码：</h3><ul><li>斐波那契</li></ul><p>计算时涉及到<a href="https://leflacon.github.io/2018/09/04/hdu1715">hdu 1715 大菲波数</a><br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;  </span><br><span class="line"><span class="keyword">import</span> java.math.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> class Main &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line">        Scanner cin=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        BigInteger f[]=<span class="keyword">new</span> BigInteger[<span class="number">100005</span>];</span><br><span class="line">        f[<span class="number">1</span>]=BigInteger.valueOf(<span class="number">1</span>);</span><br><span class="line">        f[<span class="number">2</span>]=BigInteger.valueOf(<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;=<span class="number">100000</span>;i++) &#123;</span><br><span class="line">            f[i]=f[i<span class="number">-1</span>].add(f[i<span class="number">-2</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        BigInteger x=f[<span class="number">99999</span>],y=f[<span class="number">100000</span>];</span><br><span class="line">        <span class="keyword">String</span> a[]=<span class="keyword">new</span> <span class="keyword">String</span>[<span class="number">1001</span>];</span><br><span class="line">        <span class="built_in">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">1000</span>;i++) &#123;</span><br><span class="line">        a[i]=x.divide(y).toString();</span><br><span class="line">        x=x.remainder(y).multiply(BigInteger.valueOf(<span class="number">10</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">1000</span>;i++) &#123;</span><br><span class="line">        System.out.<span class="built_in">print</span>(a[i]);</span><br><span class="line">        <span class="built_in">if</span>(i%<span class="number">10</span>==<span class="number">0</span>)System.out.<span class="built_in">print</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="built_in">if</span>(i%<span class="number">100</span>==<span class="number">0</span>)System.out.<span class="built_in">println</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        cin.<span class="built_in">close</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li>二分计算根号5</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import java.io.*;  </span><br><span class="line">import java.math.*;</span><br><span class="line">import java.util.*;</span><br><span class="line"> </span><br><span class="line">public class Main &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Scanner <span class="attribute">cin</span>=new Scanner(System.<span class="keyword">in</span>);</span><br><span class="line">        BigDecimal hj;</span><br><span class="line">        BigDecimal <span class="attribute">l</span>=BigDecimal.valueOf(2),r=BigDecimal.valueOf(3);</span><br><span class="line">        <span class="keyword">for</span>(int <span class="attribute">i</span>=0;i&lt;10000;i++) &#123;</span><br><span class="line">            BigDecimal <span class="attribute">m</span>=l.add(r).divide(BigDecimal.valueOf(2));</span><br><span class="line">            <span class="keyword">if</span>(m.multiply(m).compareTo(BigDecimal.valueOf(5))&lt;0)<span class="attribute">l</span>=m;</span><br><span class="line">            <span class="keyword">else</span> <span class="attribute">r</span>=m;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="attribute">hj</span>=l.add(BigDecimal.valueOf(1)).divide(BigDecimal.valueOf(2));</span><br><span class="line">        System.out.println(hj.toString());</span><br><span class="line">        cin.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运算结果：-1"><a href="#运算结果：-1" class="headerlink" title="运算结果："></a>运算结果：</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">0 </span></span><br><span class="line"><span class="symbol">6180339887 </span><span class="number">4989484820</span> <span class="number">4586834365</span> <span class="number">6381177203</span> <span class="number">0917980576</span> <span class="number">2862135448</span> <span class="number">6227052604</span> <span class="number">6281890244</span> <span class="number">9707207204</span> <span class="number">1893911374</span> </span><br><span class="line"><span class="symbol">8475408807 </span><span class="number">5386891752</span> <span class="number">1266338622</span> <span class="number">2353693179</span> <span class="number">3180060766</span> <span class="number">7263544333</span> <span class="number">8908659593</span> <span class="number">9582905638</span> <span class="number">3226613199</span> <span class="number">2829026788</span> </span><br><span class="line"><span class="symbol">0675208766 </span><span class="number">8925017116</span> <span class="number">9620703222</span> <span class="number">1043216269</span> <span class="number">5486262963</span> <span class="number">1361443814</span> <span class="number">9758701220</span> <span class="number">3408058879</span> <span class="number">5445474924</span> <span class="number">6185695364</span> </span><br><span class="line"><span class="symbol">8644492410 </span><span class="number">4432077134</span> <span class="number">4947049565</span> <span class="number">8467885098</span> <span class="number">7433944221</span> <span class="number">2544877066</span> <span class="number">4780915884</span> <span class="number">6074998871</span> <span class="number">2400765217</span> <span class="number">0575179788</span> </span><br><span class="line"><span class="symbol">3416625624 </span><span class="number">9407589069</span> <span class="number">7040002812</span> <span class="number">1042762177</span> <span class="number">1117778053</span> <span class="number">1531714101</span> <span class="number">1704666599</span> <span class="number">1466979873</span> <span class="number">1761356006</span> <span class="number">7087480710</span> </span><br><span class="line"><span class="symbol">1317952368 </span><span class="number">9427521948</span> <span class="number">4353056783</span> <span class="number">0022878569</span> <span class="number">9782977834</span> <span class="number">7845878228</span> <span class="number">9110976250</span> <span class="number">0302696156</span> <span class="number">1700250464</span> <span class="number">3382437764</span> </span><br><span class="line"><span class="symbol">8610283831 </span><span class="number">2683303724</span> <span class="number">2926752631</span> <span class="number">1653392473</span> <span class="number">1671112115</span> <span class="number">8818638513</span> <span class="number">3162038400</span> <span class="number">5222165791</span> <span class="number">2866752946</span> <span class="number">5490681131</span> </span><br><span class="line"><span class="symbol">7159934323 </span><span class="number">5973494985</span> <span class="number">0904094762</span> <span class="number">1322298101</span> <span class="number">7261070596</span> <span class="number">1164562990</span> <span class="number">9816290555</span> <span class="number">2085247903</span> <span class="number">5240602017</span> <span class="number">2799747175</span> </span><br><span class="line"><span class="symbol">3427775927 </span><span class="number">7862561943</span> <span class="number">2082750513</span> <span class="number">1218156285</span> <span class="number">5122248093</span> <span class="number">9471234145</span> <span class="number">1702237358</span> <span class="number">0577278616</span> <span class="number">0086883829</span> <span class="number">5230459264</span> </span><br><span class="line"><span class="symbol">7878017889 </span><span class="number">9219902707</span> <span class="number">7690389532</span> <span class="number">1968198615</span> <span class="number">1437803149</span> <span class="number">9741106926</span> <span class="number">0886742962</span> <span class="number">2675756052</span> <span class="number">3172777520</span> <span class="number">3536139362</span></span><br></pre></td></tr></table></figure><hr>]]></content>
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java高精度 </tag>
            
            <tag> 斐波那契 </tag>
            
            <tag> 黄金分割数 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CTU 2017 G.Ice cream samples（乱搞一通）</title>
      <link href="/2018/08/21/CTU%202017%20G.Ice%20cream%20samples/"/>
      <url>/2018/08/21/CTU%202017%20G.Ice%20cream%20samples/</url>
      <content type="html"><![CDATA[<p>To encourage visitors active movement among the attractions, a circular path with ice cream<br>stands was built in the park some time ago. A discount system common for all stands was<br>also introduced. When a customer buys ice cream at some stand, he is automatically granted a<br>discount for one day at the next stand on the path. When visitors start at any stand and follow<br>systematically the discount directions to the next stands, they eventually traverse the whole<br>circular path and return back to the stand they started at.</p><p>Ice creams of various brands are sold at the stands. Additionally, each stand sells a nice sample<br>box which contains small samples of popular ice cream brands. The number of samples in the<br>box depends on the stand and various stands may put different brands into their sample boxes.</p><p>Each box contains samples of one or more brands. A brand may be represented by one or more<br>samples in the box, or it may be completely missing. </p><p>Each stand sells only one type of sample<br>box (the brands of the samples in the box are always the same for that particular stand).</p><p>Quido and Hugo are going to exploit the discount system for their own benefit. They decided<br>to start at some stand and then continue in the direction of the discounts buying one ice cream<br>sample box at each stand they visit in a consecutive sequence. Their goal is to collect at least<br>one sample of each ice cream brand sold in the park.</p><p>Simultaneously, to respect their stomach<br>capacities, they want to minimize the total number of ice cream samples they buy.</p><h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification"></a>Input Specification</h3><p>There are more test cases. Each case starts with a line containing two integers N, K separated<br>by space (1 ≤ N, K ≤ 106<br>). N is the number of ice cream stands, K is the total number of<br>different ice cream brands sold at all stands. The brands are labeled by numbers 1, 2, . . . , K.<br>Next, there are N lines describing stands in their visiting order. Each such line contains the<br>list of brands of all ice cream samples sold in the sample box at that particular stand. Each list<br>starts with one positive integer L, describing its length, followed by L integers. Each list item<br>represents the brand of one ice cream sample in the sample box sold at this stand. You may<br>assume that even if a visitor buys one sample box at each stand, he/she will collect at most 107<br>ice cream samples.</p><h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification"></a>Output Specification</h3><p>For each test case, print a single line with one integer denoting the minimum number of ice<br>cream samples Quido and Hugo have to buy in order to obtain a sample of each ice cream brand<br>sold in the park. If it is impossible to obtain samples of all brands output −1.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">4 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">1</span> <span class="number">3</span> <span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">2</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">1</span> <span class="number">1</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="Output-for-Sample-Input"><a href="#Output-for-Sample-Input" class="headerlink" title="Output for Sample Input"></a>Output for Sample Input</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">-1</span></span><br></pre></td></tr></table></figure><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给N个序列，N个序列不一定长度相同，序列由<code>1~K</code>的整数构成，现在选定连续的几个序列（首尾也算连续，想象它们是一个圈），使得1、2、3……K全在这些数列中，求选出数列所有数字个数和的最小值</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>序列只能整个整个的取，而且要连续，所以肯定要加倍，循环2xn，设两个指针cur1=0，cur2=-1，然后开始实行扩圈和缩圈的操作</p><p>如果当前k个数都有了，就更新ans，然后缩圈（cur1++），看看是否有更少的解</p><p>如果k个数还没有全，就要继续扩圈（cur2++），然后把新的序列里的数遍历一遍</p><p>这里要注意的是，cur2达到上限或已经取了n个连续序列时，就没有扩圈的机会了，只能缩圈找最优</p><p>复杂度我也不知道。。这种题大概就是瞎搞吧。。</p><p>res记录当前冰淇淋个数，vis[i]存第i种冰淇淋目前的个数，num为当前冰淇淋种类数</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1000005</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;a[N];</span><br><span class="line"><span class="keyword">int</span> ans,vis[N],cur1,cur2,n,k,res,num;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;k)!=EOF)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)a[i].clear();</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line"><span class="keyword">int</span> l,c;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;l);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;l;j++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;c);</span><br><span class="line">a[i].push_back(c);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ans=INF;</span><br><span class="line">res=<span class="number">0</span>;num=<span class="number">0</span>;</span><br><span class="line">cur1=<span class="number">0</span>;cur2=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(cur1&lt;<span class="number">2</span>*n)&#123;</span><br><span class="line"><span class="keyword">if</span>(num==k)&#123;</span><br><span class="line"><span class="comment">//如果有k个数了就缩圈找最优</span></span><br><span class="line">ans=min(ans,res);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a[cur1%n].size();i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(vis[a[cur1%n][i]]&gt;<span class="number">1</span>)vis[a[cur1%n][i]]--;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">num--;</span><br><span class="line">vis[a[cur1%n][i]]--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">res-=a[cur1%n].size();</span><br><span class="line">cur1++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(cur2-cur1+<span class="number">1</span>==n||cur2==<span class="number">2</span>*n<span class="number">-1</span>)&#123;</span><br><span class="line"><span class="comment">//因为是2n为了保证循环到所有情况</span></span><br><span class="line"><span class="comment">//所以如果当前取得已经有n个了或者cur2到了上限就只能缩圈</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a[cur1%n].size();i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(vis[a[cur1%n][i]]&gt;<span class="number">1</span>)vis[a[cur1%n][i]]--;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">num--;</span><br><span class="line">vis[a[cur1%n][i]]--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">res-=a[cur1%n].size();</span><br><span class="line">cur1++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//扩圈</span></span><br><span class="line">cur2++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a[cur2%n].size();i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(vis[a[cur2%n][i]]==<span class="number">0</span>)&#123;</span><br><span class="line">num++;</span><br><span class="line">vis[a[cur2%n][i]]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> vis[a[cur2%n][i]]++;<span class="comment">//漏了这个至关重要的更新可让我好找。。</span></span><br><span class="line">&#125;</span><br><span class="line">res+=a[cur2%n].size();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans==INF?<span class="number">-1</span>:ans);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 模拟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟 </tag>
            
            <tag> 思维 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1212 无向图最小生成树</title>
      <link href="/2018/08/21/1212%20%E6%97%A0%E5%90%91%E5%9B%BE%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/"/>
      <url>/2018/08/21/1212%20%E6%97%A0%E5%90%91%E5%9B%BE%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 0 难度：基础题 </p><p>N个点M条边的无向连通图，每条边有一个权值，求该图的最小生成树。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：2个数N,M中间用空格分隔，N为点的数量，M为边的数量。（2 &lt;= N &lt;= 1000, 1 &lt;= M &lt;= 50000)<br>第2 - M + 1行：每行3个数S E W，分别表示M条边的2个顶点及权值。(1 &lt;= S, E &lt;= N，1 &lt;= W &lt;= 10000)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出最小生成树的所有边的权值之和。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">9 </span><span class="number">14</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">4</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span> <span class="number">8</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">4</span> <span class="number">7</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">5</span> <span class="number">9</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">6</span> <span class="number">10</span></span><br><span class="line"><span class="symbol">6 </span><span class="number">7</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">7 </span><span class="number">8</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">8 </span><span class="number">9</span> <span class="number">7</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">8</span> <span class="number">11</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">9</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">7 </span><span class="number">9</span> <span class="number">6</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">6</span> <span class="number">4</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">6</span> <span class="number">14</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">8</span> <span class="number">8</span></span><br></pre></td></tr></table></figure><p>Output示例</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">37</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>水一发最小生成树模版</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1005</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> u,v;</span><br><span class="line"><span class="keyword">int</span> cap;</span><br><span class="line">&#125;Edge[N*N];</span><br><span class="line"><span class="keyword">int</span> n,ans,cnt;</span><br><span class="line"><span class="keyword">int</span> fa[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x!=fa[x])fa[x]=find(fa[x]);</span><br><span class="line"><span class="keyword">return</span> fa[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">join</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a=find(x),b=find(y);</span><br><span class="line"><span class="keyword">if</span>(a==b)<span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">fa[a]=b;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(struct Edge a,struct Edge b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.cap&lt;b.cap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kruskal</span><span class="params">()</span></span>&#123;</span><br><span class="line">sort(Edge,Edge+cnt,cmp);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;cnt;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> fx=find(Edge[i].u),fy=find(Edge[i].v);</span><br><span class="line"><span class="keyword">if</span>(fx==fy)<span class="keyword">continue</span>;</span><br><span class="line">ans+=Edge[i].cap;</span><br><span class="line">join(fx,fy);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> s,e,w;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;cnt);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)fa[i]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;cnt;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;s,&amp;e,&amp;w);</span><br><span class="line">Edge[i].u=s;</span><br><span class="line">Edge[i].v=e;</span><br><span class="line">Edge[i].cap=w;</span><br><span class="line">&#125;</span><br><span class="line">ans=<span class="number">0</span>;</span><br><span class="line">kruskal();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 最小生成树 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1242 斐波那契数列的第N项（矩阵快速幂）</title>
      <link href="/2018/08/21/1242%20%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97%E7%9A%84%E7%AC%ACN%E9%A1%B9%EF%BC%88%E7%9F%A9%E9%98%B5%E5%BF%AB%E9%80%9F%E5%B9%82%EF%BC%89/"/>
      <url>/2018/08/21/1242%20%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97%E7%9A%84%E7%AC%ACN%E9%A1%B9%EF%BC%88%E7%9F%A9%E9%98%B5%E5%BF%AB%E9%80%9F%E5%B9%82%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 0 难度：基础题 </p><p>斐波那契数列的定义如下：</p><p>F(0) = 0<br>F(1) = 1<br>F(n) = F(n - 1) + F(n - 2) (n &gt;= 2)  </p><p>(1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, …)  </p><p>给出n，求F(n)，由于结果很大，输出F(n) % 1000000009的结果即可。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>输入1个数n(1 &lt;= n &lt;= 10^18)。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出F(n) % 1000000009的结果。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><p><code>11</code></p><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><p><code>89</code></p><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>矩阵快速幂</p><p>F(n) = F(n - 1) + F(n - 2)</p><p>递推式如下。。macdown打不出数学公式。。就这样吧。。</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">( <span class="name">F</span>(<span class="name">n</span>)  ) = ( <span class="number">1</span> <span class="number">1</span> )*( <span class="name">F</span>(<span class="name">n-1</span>) )</span><br><span class="line">  F(<span class="name">n-1</span>)      <span class="number">1</span> <span class="number">0</span>     F(<span class="name">n-2</span>)</span><br></pre></td></tr></table></figure><p>下面这种存矩阵的方法是在大牛博客看到的 先学为敬(=ﾟωﾟ)ﾉ</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">typedef</span> vector&lt;LL&gt;row;</span><br><span class="line"><span class="keyword">typedef</span> vector&lt;row&gt;mat;</span><br><span class="line"><span class="keyword">const</span> LL p=<span class="number">1000000009</span>;</span><br><span class="line">mat mul(mat a,mat b)&#123;</span><br><span class="line">mat c(a.<span class="built_in">size</span>(),row(b[<span class="number">0</span>].<span class="built_in">size</span>()));<span class="comment">//c的行数列数分别是a的行数，b的列数</span></span><br><span class="line"><span class="built_in">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line"><span class="built_in">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;b[<span class="number">0</span>].<span class="built_in">size</span>();j++)&#123;</span><br><span class="line"><span class="built_in">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;b.<span class="built_in">size</span>();k++)</span><br><span class="line">c[i][j]=(c[i][j]+a[i][k]*b[k][j])%p;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line">mat qpow(mat a,LL x)&#123;</span><br><span class="line">mat b(a.<span class="built_in">size</span>(),row(a.<span class="built_in">size</span>()));</span><br><span class="line"><span class="built_in">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a.<span class="built_in">size</span>();i++)b[i][i]=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">while</span>(x&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">if</span>(x&amp;<span class="number">1</span>)b=mul(b,a);</span><br><span class="line">a=mul(a,a);</span><br><span class="line">x&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">return</span> b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> main()&#123;</span><br><span class="line">    LL n;</span><br><span class="line">    scanf(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">    mat a(<span class="number">2</span>,row(<span class="number">2</span>));</span><br><span class="line">    a[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;a[<span class="number">0</span>][<span class="number">1</span>]=<span class="number">1</span>;a[<span class="number">1</span>][<span class="number">0</span>]=<span class="number">1</span>;a[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">    a=qpow(a,n);</span><br><span class="line">    printf(<span class="string">"%lld\n"</span>,a[<span class="number">1</span>][<span class="number">0</span>]);</span><br><span class="line">    <span class="built_in">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 矩阵快速幂 </tag>
            
            <tag> 斐波那契 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>cf 487 C. A Mist of Florescence（构造）</title>
      <link href="/2018/08/20/cf%20#487%20C.%20A%20Mist%20of%20Florescence%EF%BC%88%E6%9E%84%E9%80%A0%EF%BC%89/"/>
      <url>/2018/08/20/cf%20#487%20C.%20A%20Mist%20of%20Florescence%EF%BC%88%E6%9E%84%E9%80%A0%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/contest/989/problem/C" rel="external nofollow noopener noreferrer" target="_blank">http://codeforces.com/contest/989/problem/C</a></p><p>As the boat drifts down the river, a wood full of blossoms shows up on the riverfront.<br>“I’ve been here once,” Mino exclaims with delight, “it’s breathtakingly amazing.”</p><p>“What is it like?”</p><p>“Look, Kanno, you’ve got your paintbrush, and I’ve got my words. Have a try, shall we?”</p><p>There are four kinds of flowers in the wood, Amaranths, Begonias, Centaureas and Dianthuses.</p><p>The wood can be represented by a rectangular grid of<br>n rows and m columns. In each cell of the grid, there is exactly one type of flowers.</p><p>According to Mino, the numbers of connected components formed by each kind of flowers are a, b, c and d respectively. Two cells are considered in the same connected component if and only if a path exists between them that moves between cells sharing common edges and passes only through cells containing the same flowers.</p><p>You are to help Kanno depict such a grid of flowers, with<br>n and m arbitrarily chosen under the constraints given below. It can be shown that at least one solution exists under the constraints of this problem.</p><p>Note that you can choose arbitrary<br>n and m under the constraints below, they are not given in the input.</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The first and only line of input contains four space-separated integers a, b, c and d (1≤a,b,c,d≤100) — the required number of connected components of Amaranths, Begonias, Centaureas and Dianthuses, respectively.</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>In the first line, output two space-separated integers n and m (1≤n,m≤50) — the number of rows and the number of columns in the grid respectively.</p><p>Then output<br>n lines each consisting of m consecutive English letters, representing one row of the grid. Each letter should be among ‘A’, ‘B’, ‘C’ and ‘D’, representing Amaranths, Begonias, Centaureas and Dianthuses, respectively.</p><p>In case there are multiple solutions, print any. You can output each letter in either case (upper or lower).</p><h3 id="example"><a href="#example" class="headerlink" title="example"></a>example</h3><p>input</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">5 </span><span class="number">3</span> <span class="number">2</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>output</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span> <span class="number">7</span></span><br><span class="line">DDDDDDD</span><br><span class="line">DABACAD</span><br><span class="line">DBABACD</span><br><span class="line">DDDDDDD</span><br></pre></td></tr></table></figure><p>input</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">50 </span><span class="number">50</span> <span class="number">1</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>output</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span> <span class="number">50</span></span><br><span class="line">CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC</span><br><span class="line">ABABABABABABABABABABABABABABABABABABABABABABABABAB</span><br><span class="line">BABABABABABABABABABABABABABABABABABABABABABABABABA</span><br><span class="line">DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD</span><br></pre></td></tr></table></figure><p>input</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">1 </span><span class="number">6</span> <span class="number">4</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><p>outputCopy</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">7</span> <span class="number">7</span></span><br><span class="line">DDDDDDD</span><br><span class="line">DDDBDBD</span><br><span class="line">DDCDCDD</span><br><span class="line">DBDADBD</span><br><span class="line">DDCDCDD</span><br><span class="line">DBDBDDD</span><br><span class="line">DDDDDDD</span><br></pre></td></tr></table></figure><h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><p>In the first example, each cell of Amaranths, Begonias and Centaureas forms a connected component, while all the Dianthuses form one.<br><img src="http://codeforces.com/predownloaded/ba/48/ba48b131922fa242edffd37b1eb411f72779e8e3.png" alt=""></p><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>四个类，abcd为每个类的连通块数</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p><code>50*50</code>，分成4块，每块分别先填满abcd，然后每个都减一，然后在a里跳着放b单格，b里放a，c里放d，d里放c，注意一下边界判断就行</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">55</span>][<span class="number">55</span>];</span><br><span class="line"><span class="keyword">int</span> a,b,c,d,h,l;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;d;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">25</span>;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">25</span>;j++)&#123;</span><br><span class="line">s[i][j]=<span class="string">'A'</span>;</span><br><span class="line">s[i][j+<span class="number">25</span>]=<span class="string">'B'</span>;</span><br><span class="line">s[i+<span class="number">25</span>][j]=<span class="string">'C'</span>;</span><br><span class="line">s[i+<span class="number">25</span>][j+<span class="number">25</span>]=<span class="string">'D'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">a--;b--;c--;d--;</span><br><span class="line">h=<span class="number">2</span>;l=<span class="number">27</span>;</span><br><span class="line"><span class="keyword">while</span>(a--)&#123;</span><br><span class="line"><span class="keyword">if</span>(l&gt;<span class="number">50</span>)h+=<span class="number">2</span>,l=<span class="number">27</span>;</span><br><span class="line">s[h][l]=<span class="string">'A'</span>;</span><br><span class="line">l+=<span class="number">2</span>;</span><br><span class="line">&#125; </span><br><span class="line">h=<span class="number">2</span>;l=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span>(b--)&#123;</span><br><span class="line"><span class="keyword">if</span>(l&gt;<span class="number">25</span>)h+=<span class="number">2</span>,l=<span class="number">2</span>;</span><br><span class="line">s[h][l]=<span class="string">'B'</span>;</span><br><span class="line">l+=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">h=<span class="number">27</span>;l=<span class="number">27</span>;</span><br><span class="line"><span class="keyword">while</span>(c--)&#123;</span><br><span class="line"><span class="keyword">if</span>(l&gt;<span class="number">50</span>)h+=<span class="number">2</span>,l=<span class="number">27</span>;</span><br><span class="line">s[h][l]=<span class="string">'C'</span>;</span><br><span class="line">l+=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">h=<span class="number">27</span>;l=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span>(d--)&#123;</span><br><span class="line"><span class="keyword">if</span>(l&gt;<span class="number">25</span>)h+=<span class="number">2</span>,l=<span class="number">2</span>;</span><br><span class="line">s[h][l]=<span class="string">'D'</span>;</span><br><span class="line">l+=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"50 50"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">50</span>;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">50</span>;j++)<span class="built_in">cout</span>&lt;&lt;s[i][j]; </span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 杂 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 构造 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>麻婆豆腐（思维）</title>
      <link href="/2018/08/20/%E9%BA%BB%E5%A9%86%E8%B1%86%E8%85%90%EF%BC%88%E6%80%9D%E7%BB%B4%EF%BC%89/"/>
      <url>/2018/08/20/%E9%BA%BB%E5%A9%86%E8%B1%86%E8%85%90%EF%BC%88%E6%80%9D%E7%BB%B4%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="https://www.nowcoder.com/acm/contest/128/B" rel="external nofollow noopener noreferrer" target="_blank">https://www.nowcoder.com/acm/contest/128/B</a></p><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>在一次课间休息的时候,音无结弦看到立华奏一个人坐在座位上写作业,于是动了请她吃麻婆豆腐的念头。他迅速移动到她后面的座位,寻思着该怎么开口邀请,他摸了摸口袋,拍了拍脑袋,有了!<br>“奏~听说食堂里有种传闻中因为辣过头所以谁都不会点的麻婆豆腐,但是却惊人地好吃啊,这样,我们来做个题吧!如果你做出来了我就天天请你吃麻婆豆腐╰(￣▽￣)╮”<br>奏的笔停下了,她转过头来,还带了一张草稿纸,做好了做题的准备。音无懵了一下,心中暗暗窃喜,“麻婆豆腐果然是她的最爱啊!”<br>“咳咳…请听题!我手上有n枚硬币,第i枚正面朝上的概率是Pi。我现在每个硬币各抛一次,正面朝上看做1,背面朝上看做0,把所有硬币得到的数异或起来决定最后得到的数。问:有多少个子集合使得0和1的概率相等?”<br>不管音无给了怎样的数,奏都是一分钟不到就算出来了!不愧是前学生会长啊~<br>于是他们就去食堂吃麻婆豆腐了,现在,你也来算一下吧。  </p><h3 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述:"></a>输入描述:</h3><p>输入的第一行包含一个整数T，表示测试组数。<br>每个测试用例前面都有一个空白行。<br>每个测试用例由两行组成。<br>第一行包含硬币数量n。<br>第二行包含n个数表示：概率p1,…,pn。每个pi都给出6个小数位。</p><h3 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述:"></a>输出描述:</h3><p>对于每个测试用例输出一个数：使得0和1的概率相等的子集合数量。</p><h3 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例1</h3><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">2 </span></span><br><span class="line"></span><br><span class="line"><span class="symbol">3 </span></span><br><span class="line"><span class="number">0.500000</span>  <span class="number">0.500000</span>  <span class="number">0.500000</span> </span><br><span class="line"></span><br><span class="line"><span class="symbol">4 </span></span><br><span class="line"><span class="number">0.000001</span>  <span class="number">0.000002</span>  <span class="number">0.000003</span>  <span class="number">0.000004</span></span><br></pre></td></tr></table></figure><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><p>说明<br>在第一个测试样例中，每个子集显然都能使得0和1的概率相等。<br>在第二个测试样例中，所有子集都不能使得0和1的概率相等<br>备注:<br>n ≤ 60,T=500</p><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>n枚硬币,第i枚正面朝上的概率是Pi。每个硬币各抛一次,正面朝上看做1,背面朝上看做0,把所有硬币得到的数异或起来决定最后得到的数。  求有多少个子集合使得0和1的概率相等?</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>答案为<code>2^n-2^(n-cnt)</code><br>其中cnt是pi中0.5的个数</p><p>因为只有pi=0.5，异或后的概率才可能相等，别的数都不行，证明如下：</p><p>设当前集合有m个元素，第一个元素为1的概率x，剩下m-1个元素异或和为1的概率为p，那么这个集合最后异或和为1的概率为<code>p*(1-x)+x*(1-p)=0.5</code>,解得x=0.5</p><p>注意1要写1LL，不然会WA</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line"><span class="keyword">double</span> c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf"</span>,&amp;c);</span><br><span class="line">    <span class="keyword">if</span>(c==<span class="number">0.5</span>)cnt++;</span><br><span class="line">&#125;</span><br><span class="line">LL ans=(<span class="number">1L</span>L&lt;&lt;n)-(<span class="number">1L</span>L&lt;&lt;(n-cnt));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 杂 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推公式 </tag>
            
            <tag> 思维 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Alice和Bob的Nim游戏（博弈，数列，矩阵快速幂）</title>
      <link href="/2018/08/20/Alice%E5%92%8CBob%E7%9A%84Nim%E6%B8%B8%E6%88%8F%EF%BC%88%E5%8D%9A%E5%BC%88%EF%BC%8C%E6%95%B0%E5%88%97%EF%BC%8C%E7%9F%A9%E9%98%B5%E5%BF%AB%E9%80%9F%E5%B9%82%EF%BC%89/"/>
      <url>/2018/08/20/Alice%E5%92%8CBob%E7%9A%84Nim%E6%B8%B8%E6%88%8F%EF%BC%88%E5%8D%9A%E5%BC%88%EF%BC%8C%E6%95%B0%E5%88%97%EF%BC%8C%E7%9F%A9%E9%98%B5%E5%BF%AB%E9%80%9F%E5%B9%82%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="https://nanti.jisuanke.com/t/28447" rel="external nofollow noopener noreferrer" target="_blank">https://nanti.jisuanke.com/t/28447</a></p><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>众所周知，Alice和Bob非常喜欢博弈，而且Alice永远是先手，Bob永远是后手。</p><p>Alice和Bob面前有3堆石子，Alice和Bob每次轮流拿某堆石子中的若干个石子（不可以是0个），拿到所有石子中最后一个石子的人获胜。这是一个只有3堆石子的Nim游戏。</p><p>Bob错误的认为，三堆石子的Nim游戏只需要少的两堆的石子数量加起来等于多的那一堆，后手就一定会胜利。所以，Bob把三堆石子的数量分别设为 {k，4k，5k}（k&gt;0）。</p><p>现在Alice想要知道，在k 小于 2^n 的时候，有多少种情况先手一定会获得胜利。</p><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>一个整数n(1≤n≤2×10^9)。</p><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>输出先手胜利的可能情形数。答案对10^9+7取模。</p><p>输出时每行末尾的多余空格，不影响答案正确性</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><h3 id="题目来源"><a href="#题目来源" class="headerlink" title="题目来源"></a>题目来源</h3><p><a href="https://nanti.jisuanke.com/?kw=ACM%E8%AE%AD%E7%BB%83%E8%81%94%E7%9B%9F%E5%91%A8%E8%B5%9B" rel="external nofollow noopener noreferrer" target="_blank">ACM训练联盟周赛</a></p><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>就是普通尼姆博弈，只要把k，4k，5k异或一下，为0先手就必胜，这题难在k可以是个巨无敌大的数，只好找规律了</p><p>先打个表</p><p>2，4，6，9，15，25，40，64，104，169…</p><p>本来发现的规律是后一个数是前两个数相加，然后前两个数相加减一，前两个数相加，前两个数相加加一，前两个数相加…以此类推，但是没搞出什么名堂来</p><p>然后当时看了这篇知道了这个数列和斐波那契有点关系<br><a href="https://zhidao.baidu.com/question/489289663.html" rel="external nofollow noopener noreferrer" target="_blank">https://zhidao.baidu.com/question/489289663.html</a></p><p>四个一组，推出了四个公式，其中用到的斐波那契数列用矩阵快速幂（网上找的模版。。）处理一下，公式具体见代码</p><p>最后那个四个乘以qpow(5,p-2,p)，本来公式是除以5的，但是因为除法对求余不分配就WA了，所以费马小定理一下，乘以5的逆元</p><p>最后官方题解里是这么写的：f(n) = f(n-1) + f(n-3) + f(n-4) + 2，也是矩阵快速幂处理一下</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">20000000</span>;</span><br><span class="line"><span class="keyword">const</span> LL p=<span class="number">1000000000</span>+<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">matrix</span> &#123;</span></span><br><span class="line">LL m[<span class="number">2</span>][<span class="number">2</span>];</span><br><span class="line">&#125;ans;</span><br><span class="line">matrix base = &#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>&#125;; </span><br><span class="line"><span class="function">matrix <span class="title">multi</span><span class="params">(matrix a, matrix b)</span> </span>&#123;</span><br><span class="line">matrix tmp;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++) &#123;</span><br><span class="line">tmp.m[i][j] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;  k &lt; <span class="number">2</span>; k++)</span><br><span class="line">tmp.m[i][j] = (tmp.m[i][j] + a.m[i][k] * b.m[k][j]) % p;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">matrix_pow</span><span class="params">(matrix a, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">ans.m[<span class="number">0</span>][<span class="number">0</span>] = ans.m[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">ans.m[<span class="number">0</span>][<span class="number">1</span>] = ans.m[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(n) &#123;</span><br><span class="line"><span class="keyword">if</span>(n &amp; <span class="number">1</span>) ans = multi(ans, a);</span><br><span class="line">a = multi(a, a);</span><br><span class="line">n &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans.m[<span class="number">0</span>][<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">fi</span><span class="params">(LL x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> matrix_pow(base, x);</span><br><span class="line">&#125; </span><br><span class="line"><span class="function">LL <span class="title">qpow</span><span class="params">(LL a,LL b,LL p)</span></span>&#123;</span><br><span class="line">    LL anss=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)&#123;</span><br><span class="line">            anss=(anss*a)%p;</span><br><span class="line">            b--;</span><br><span class="line">        &#125;</span><br><span class="line">        b/=<span class="number">2</span>;</span><br><span class="line">        a=a*a%p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> anss;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    LL n,res=<span class="number">0</span>;</span><br><span class="line">    LL z;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)&#123;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>||n==<span class="number">2</span>)&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(n==<span class="number">3</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="number">2</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(n==<span class="number">4</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="number">7</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">LL nn=n;</span><br><span class="line">n+=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(n%<span class="number">4</span>==<span class="number">0</span>)&#123;</span><br><span class="line">z=((<span class="number">4</span>*fi(n)+<span class="number">3</span>*fi(n<span class="number">-1</span>)+<span class="number">2</span>)*qpow(<span class="number">5</span>,p<span class="number">-2</span>,p))%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(n%<span class="number">4</span>==<span class="number">1</span>)&#123;</span><br><span class="line">z=((<span class="number">3</span>*fi(n+<span class="number">1</span>)+fi(n)+<span class="number">1</span>)*qpow(<span class="number">5</span>,p<span class="number">-2</span>,p))%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(n%<span class="number">4</span>==<span class="number">2</span>)&#123;</span><br><span class="line">z=((<span class="number">4</span>*fi(n)+<span class="number">3</span>*fi(n<span class="number">-1</span>)<span class="number">-2</span>)*qpow(<span class="number">5</span>,p<span class="number">-2</span>,p))%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">z=((<span class="number">3</span>*fi(n+<span class="number">1</span>)+fi(n)<span class="number">-1</span>)*qpow(<span class="number">5</span>,p<span class="number">-2</span>,p))%p;</span><br><span class="line">&#125;</span><br><span class="line">res=(qpow(<span class="number">2</span>,nn,p)-z%p+p)%p;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;res&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 博弈论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推公式 </tag>
            
            <tag> 矩阵快速幂 </tag>
            
            <tag> 博弈论 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Pawns（博弈，思维）</title>
      <link href="/2018/08/20/Pawns%EF%BC%88%E5%8D%9A%E5%BC%88%EF%BC%8C%E6%80%9D%E7%BB%B4%EF%BC%89/"/>
      <url>/2018/08/20/Pawns%EF%BC%88%E5%8D%9A%E5%BC%88%EF%BC%8C%E6%80%9D%E7%BB%B4%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="https://nanti.jisuanke.com/t/28205" rel="external nofollow noopener noreferrer" target="_blank">https://nanti.jisuanke.com/t/28205</a></p><p>Carl and Nathan are completely bored with the game of chess; it’s too easy! They have come up with their own game, which is surely a greater test of one’s intelligence.This game is played on a board with n by m squares. At the start, white and black pawns are placed quasi-randomly over the board, with the following constraint: in every column there is one white pawn and one black pawn, with the white pawn on some square below the black one.</p><p>Each player in turn makes a move with one of his pawns. A pawn is only allowed to move one square forward, provided that this square is empty. “Forward” means in the direction of the opponent, so white pawns move up and black pawns move down. In addition, a pawn on the first rank – that is, a white pawn on the bottom row, or a black pawn on the top row – may also move two squares forward, provided that both squares are empty. Unlike normal chess, the pawns are never taken from the board and never change column.</p><p><img src="https://res.jisuanke.com/img/upload/20180703/f32e80b481a421fcf94d5ed040138bbc778728d7.png" alt=""></p><p>For example, in the position above, White (the player using the white pieces) has eight moves: one with each of the pawns on b1, d2, f5 and h2, and two with both the pawn on c1 and the pawn on g1. The pawns on a6 and e1 cannot move.</p><p>Eventually and inevitably, the pawns will meet up in every column, leaving neither player able to move. The game is then finished, and the winner is the player who made the last move.</p><p>As usual, White gets the first move. With optimal play, who would win for a given startingposition?</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>On the first line one positive number: the number of test cases, at most 100. After that per test case:</p><p>one line with two space-separated integers n and m (3≤n≤20 and 1≤m≤20):the number of rows and columns of the board, respectively.<br>n lines with m characters, describing the position on the board at the start of the game:<br>‘W’ is a white pawn.<br>‘B’ is a black pawn.<br>‘.’ is an empty square.Each column contains exactly one ‘W’ and one ‘B’, with the ‘W’ being below the ‘B’.<br>In every test case, the starting position will be such that White has at least one move.  </p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>Per test case:</p><p>one line with the string “White wins” if White can win with optimal play, or “Black wins” if Black has a winning strategy.</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">8</span> <span class="number">8</span></span><br><span class="line">....<span class="selector-class">.BB</span>.</span><br><span class="line">B.......</span><br><span class="line">W......B</span><br><span class="line">..<span class="selector-class">.B</span><span class="selector-class">.W</span>..</span><br><span class="line">.<span class="selector-class">.B</span>.....</span><br><span class="line"><span class="selector-class">.B</span>......</span><br><span class="line">..<span class="selector-class">.WB</span>..W</span><br><span class="line"><span class="selector-class">.WW</span><span class="selector-class">.W</span><span class="selector-class">.W</span>.</span><br><span class="line"><span class="number">6</span> <span class="number">4</span></span><br><span class="line">....</span><br><span class="line">B..B</span><br><span class="line">....</span><br><span class="line"><span class="selector-class">.B</span><span class="selector-class">.W</span></span><br><span class="line">W<span class="selector-class">.B</span>.</span><br><span class="line"><span class="selector-class">.WW</span>.</span><br><span class="line"><span class="number">5</span> <span class="number">3</span></span><br><span class="line">...</span><br><span class="line">BBB</span><br><span class="line">...</span><br><span class="line">WW.</span><br><span class="line">..W</span><br><span class="line"><span class="number">4</span> <span class="number">6</span></span><br><span class="line"><span class="selector-class">.BBB</span><span class="selector-class">.B</span></span><br><span class="line">B..<span class="selector-class">.B</span>.</span><br><span class="line">..<span class="selector-class">.W</span>..</span><br><span class="line">WWW.WW</span><br><span class="line"><span class="number">7</span> <span class="number">7</span></span><br><span class="line"><span class="selector-class">.B</span><span class="selector-class">.B</span>..B</span><br><span class="line">.......</span><br><span class="line">.<span class="selector-class">.B</span><span class="selector-class">.B</span>..</span><br><span class="line">B...<span class="selector-class">.B</span>.</span><br><span class="line">.......</span><br><span class="line">..<span class="selector-class">.WW</span><span class="selector-class">.W</span></span><br><span class="line">WWW.<span class="selector-class">.W</span>.</span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Black</span> wins</span><br><span class="line"><span class="keyword">Black</span> wins</span><br><span class="line"><span class="keyword">White</span> wins</span><br><span class="line"><span class="keyword">White</span> wins</span><br><span class="line"><span class="keyword">Black</span> wins</span><br></pre></td></tr></table></figure><h3 id="题目来源"><a href="#题目来源" class="headerlink" title="题目来源"></a>题目来源</h3><p>BAPC 2014 Preliminary</p><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>两个人轮流下棋，给定一个棋局，B在W上，白色的棋子W向上移动，黑色的棋子B向下移动，每次可移动一格。底行上的W棋子或顶行上的B棋子可以向前移动两个方格，前提是两个方格都是空的。W先手，无法移动的一方输。</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>首先想到胜负和W，B之间可走步数的奇偶性有关，然后顶行和底行且可以走两步的棋子有改变奇偶性的能力。</p><p>先考虑一种特殊情况，某一列中B在顶行且W在底行，这对两个棋子来说是一样的，这种出现次数记为cd。</p><blockquote><p>1.n&gt;5时，只要一方走两步改变了奇偶性，另一方可以学对方的走法，把奇偶性变回来，所以后续不用考虑这几列的步数。</p><p>2.n=3时不会出现这种情况，不考虑。</p><p>3.特殊情况n=4和n=5，因为他们一方走两步之后，另一方就没有走两步的能力了，是要考虑的，在后面讨论。</p></blockquote><p>然后只有一方的棋子在顶行或者底行且该棋子可以走两步时：只要一方有改变奇偶性能力的棋子，另一方就会想要去优先破坏这种能力，比如：</p><p>B<br>。<br>。<code>W优先向上走三步，则B就没有破坏奇偶性的能力了，则cw+=3</code><br>。<br>。<br>W  </p><blockquote><p>cw为W破坏B的能力棋子所需要走的步数<br>cb为B破坏W的能力棋子所需要走的步数</p></blockquote><p>最后，对于那些没有棋子有机会走两步的列来说，双方都只能一步一步走，只要把可走步数累加即可。</p><p>综上所述，W的必胜情况：</p><blockquote><p>1.n=4，且cd为奇数</p><p>这种情况下，cd为奇数，W作为先手无论如何都掌握最后一个改变奇偶的决定权，所以w只要在最后一个机会时判断当前局势决定是否改变奇偶性即可。</p><p>2.cw &lt; cb</p><p>即B破坏W能力要走的步数多，那么W就有改变奇偶能力，W必胜。</p><p>3.cb = cw - 1或cb = cw且步数为奇<br>（这里的bushu指B在顶行且W在底行的情况不算的总步数）</p><p>cb = cw - 1时，因为W先走，下完（cb+cw）步之后，此时两人都刚好没有破坏奇偶性的能力，（cb+cw）为奇数，下一步轮到B下，剩余步数为（部分步数-cb-cw）为偶数，所以W必胜。<br>cb = cw时，同上，（cb+cw）为偶，下一步轮到W，剩余步数为奇，W必胜。</p></blockquote><p>最后考虑n=5的时候的特殊情况<br>比赛的时候这个情况我一直没想想清楚。。随便举个例子：</p><p>B 。。。B<br>。B 。。。<br>。。B 。。<br>。。。B 。<br>WWWWW</p><p>对于第一，五列那种双方都有能力的棋子来说，不管先手走一步还是两步，后手都可以走（3-i）步使这一列一人走一次然后作废，所以n=5时这种列也不考虑。<br>对于第二列，B要优先破坏W的能力。<br>对于第三，四列，只要数可走步数即可。  </p><p>因为剩下的策略都满足上面的n&gt;5时，所以n=5虽然有特殊，但是并不用考虑特殊策略。</p><hr><pre><code>#include &lt;algorithm&gt;#include &lt;cstdio&gt;#include &lt;cstdlib&gt;#include &lt;cstring&gt;#include &lt;iostream&gt;#include &lt;map&gt;#include &lt;queue&gt;#include &lt;string&gt;#include &lt;set&gt;using namespace std;const int N=40;char p[N][N];int main(){    int t,num=0;    scanf(&quot;%d&quot;, &amp;t);    while(t--){        int n,m;        int cw=0,cb=0,cd=0,bushu=0;        scanf(&quot;%d%d&quot;,&amp;n,&amp;m);        memset(p,0,sizeof(p));        for(int i=1;i&lt;=n;i++){            for(int j=1;j&lt;=m;j++){                cin&gt;&gt;p[i][j];            }        }        for(int i=1;i&lt;=m;i++){            int b,w;            for(int j=1;j&lt;=n;j++){                if(p[j][i]==&apos;B&apos;)b=j;                else if(p[j][i]==&apos;W&apos;)w=j;            }            if(b==1&amp;&amp;w==n&amp;&amp;n&gt;3)cd++;            else{                if(b==1&amp;&amp;w&gt;3)cw+=w-3;                else if(w==n&amp;&amp;b&lt;n-2)cb+=n-2-b;                bushu+=(w-b-1);            }         }        if((n==4&amp;&amp;cd%2==1)||(cw&lt;cb)||(((cb==cw-1)||(cb==cw))&amp;&amp;bushu%2==1))printf(&quot;White wins\n&quot;);        else printf(&quot;Black wins\n&quot;);    }    return 0;}</code></pre>]]></content>
      
      <categories>
          
          <category> 博弈论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维 </tag>
            
            <tag> 博弈论 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1847 Good Luck in CET-4 Everybody!（巴什博弈）</title>
      <link href="/2018/08/20/hdu%201847%20Good%20Luck%20in%20CET-4%20Everybody!%EF%BC%88%E5%B7%B4%E4%BB%80%E5%8D%9A%E5%BC%88%EF%BC%89/"/>
      <url>/2018/08/20/hdu%201847%20Good%20Luck%20in%20CET-4%20Everybody!%EF%BC%88%E5%B7%B4%E4%BB%80%E5%8D%9A%E5%BC%88%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1847" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1847</a></p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>大学英语四级考试就要来临了，你是不是在紧张的复习？也许紧张得连短学期的ACM都没工夫练习了，反正我知道的Kiki和Cici都是如此。当然，作为在考场浸润了十几载的当代大学生，Kiki和Cici更懂得考前的放松，所谓“张弛有道”就是这个意思。这不，Kiki和Cici在每天晚上休息之前都要玩一会儿扑克牌以放松神经。</p><p>“升级”？“双扣”？“红五”？还是“斗地主”？</p><p>当然都不是！那多俗啊~</p><p>作为计算机学院的学生，Kiki和Cici打牌的时候可没忘记专业，她们打牌的规则是这样的：</p><p>1、  总共n张牌;<br>2、  双方轮流抓牌；<br>3、  每人每次抓牌的个数只能是2的幂次（即：1，2，4，8，16…）<br>4、  抓完牌，胜负结果也出来了：最后抓完牌的人为胜者；  </p><p>假设Kiki和Cici都是足够聪明（其实不用假设，哪有不聪明的学生），并且每次都是Kiki先抓牌，请问谁能赢呢？</p><p>当然，打牌无论谁赢都问题不大，重要的是马上到来的CET-4能有好的状态。</p><p>Good luck in CET-4 everybody!</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>输入数据包含多个测试用例，每个测试用例占一行，包含一个整数n（1&lt;=n&lt;=1000）。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>如果Kiki能赢的话，请输出“Kiki”，否则请输出“Cici”，每个实例的输出占一行。</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Kiki</span></span><br><span class="line"><span class="attribute">Cici</span></span><br></pre></td></tr></table></figure><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>n张牌，每次可以取<code>2^i</code>张,最后取完的人胜</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>因为可以取到1，2，所以剩下取几都不重要了，因为所有数要么是三的倍数，要么是三的倍数多一，要么是三的倍数多二，又因为除了1，2剩下的数都是大于3的偶数，所以不管对手怎么取都无力回天了，不可能再把三的倍数抛给你 _ (: з 」∠) _</p><p>所以对手取完，只要你能一直留给他三的倍数，你就赢</p><p>综上所述，一开始是三的倍数的人必败</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)&#123;</span><br><span class="line">    <span class="keyword">if</span>(n%<span class="number">3</span>==<span class="number">0</span>)<span class="built_in">cout</span>&lt;&lt;<span class="string">"Cici"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"Kiki"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 博弈论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 巴什博弈 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1404 Digital Deletions（sg函数暴力打表）</title>
      <link href="/2018/08/20/hdu%201404%20Digital%20Deletions%EF%BC%88sg%E5%87%BD%E6%95%B0%E6%9A%B4%E5%8A%9B%E6%89%93%E8%A1%A8%EF%BC%89/"/>
      <url>/2018/08/20/hdu%201404%20Digital%20Deletions%EF%BC%88sg%E5%87%BD%E6%95%B0%E6%9A%B4%E5%8A%9B%E6%89%93%E8%A1%A8%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1404" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1404</a></p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>Digital deletions is a two-player game. The rule of the game is as following. </p><p>Begin by writing down a string of digits (numbers) that’s as long or as short as you like. The digits can be 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 and appear in any combinations that you like. You don’t have to use them all. Here is an example:</p><p><img src="http://acm.hdu.edu.cn/data/images/1404-1.gif" alt=""></p><p>On a turn a player may either:<br>Change any one of the digits to a value less than the number that it is. (No negative numbers are allowed.) For example, you could change a 5 into a 4, 3, 2, 1, or 0.<br>Erase a zero and all the digits to the right of it.</p><p>The player who removes the last digit wins.</p><p>The game that begins with the string of numbers above could proceed like this: </p><p><img src="http://acm.hdu.edu.cn/data/images/1404-2.gif" alt=""></p><p>Now, given a initial string, try to determine can the first player win if the two players play optimally both. </p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The input consists of several test cases. For each case, there is a string in one line.</p><p>The length of string will be in the range of [1,6]. The string contains only digit characters.</p><p>Proceed to the end of file.</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>Output Yes in a line if the first player can win the game, otherwise output No.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">00</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">20</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">Yes</span></span><br><span class="line"><span class="literal">Yes</span></span><br><span class="line"><span class="literal">No</span></span><br><span class="line"><span class="literal">No</span></span><br></pre></td></tr></table></figure><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给一个长度在[1,6]的数字字符串</p><p>有两种操作：</p><p>1.把任何一个数字更改为小于其数字的值</p><p>2.删除0及其右侧的数字</p><p>删除最后一位的赢，问先手有无必胜策略</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>首先这个最多只有6位，有很多很多状态，所以是个sg函数的题，从最小的已知态往上推，根据sg函数的性质，能一步到达必败状态的都是必胜点，由此求得所有六位数状态的值</p><p>分析一下可以sg[1]是必败点，sg[1]=0,那么就从1开始向上拓展必胜态，具体操作见代码</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1000000</span>;</span><br><span class="line"><span class="keyword">int</span> sg[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">wei</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n/<span class="number">100000</span>)<span class="keyword">return</span> <span class="number">6</span>;</span><br><span class="line"><span class="keyword">if</span>(n/<span class="number">10000</span>)<span class="keyword">return</span> <span class="number">5</span>;</span><br><span class="line"><span class="keyword">if</span>(n/<span class="number">1000</span>)<span class="keyword">return</span> <span class="number">4</span>;</span><br><span class="line"><span class="keyword">if</span>(n/<span class="number">100</span>)<span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line"><span class="keyword">if</span>(n/<span class="number">10</span>)<span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">extend</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="comment">//sg[n]=0先手必败，可以一步变为n的都是先手必胜</span></span><br><span class="line"><span class="keyword">int</span> len=wei(n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=len;i&gt;<span class="number">0</span>;i--)&#123;<span class="comment">//每一位上加一个数</span></span><br><span class="line"><span class="keyword">int</span> m=n;</span><br><span class="line"><span class="keyword">int</span> base=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;i;j++)base*=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> tmp=(m%(base*<span class="number">10</span>))/base;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=tmp;j&lt;<span class="number">9</span>;j++)&#123;</span><br><span class="line">m+=base;</span><br><span class="line">sg[m]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(len&lt;<span class="number">6</span>)&#123;<span class="comment">//长度小于6，可以在后面补0</span></span><br><span class="line"><span class="keyword">int</span> m=n;</span><br><span class="line"><span class="keyword">int</span> base=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=len;i&lt;<span class="number">6</span>;i++)&#123;</span><br><span class="line">m*=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> b=<span class="number">0</span>;b&lt;base;b++)sg[m+b]=<span class="number">1</span>;</span><br><span class="line">base*=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(sg,<span class="number">0</span>,<span class="keyword">sizeof</span>(sg));</span><br><span class="line">sg[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;N;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(!sg[i])extend(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> str[<span class="number">8</span>];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">work();</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>,str)!=EOF)&#123;</span><br><span class="line"><span class="keyword">if</span>(str[<span class="number">0</span>]==<span class="string">'0'</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> len=<span class="built_in">strlen</span>(str);</span><br><span class="line">n=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">n*=<span class="number">10</span>;</span><br><span class="line">n+=str[i]-<span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sg[n])<span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"No\n"</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 博弈论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博弈论 </tag>
            
            <tag> sg函数 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1527 取石子游戏（威佐夫博弈）</title>
      <link href="/2018/08/20/hdu%201527%20%E5%8F%96%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F%EF%BC%88%E5%A8%81%E4%BD%90%E5%A4%AB%E5%8D%9A%E5%BC%88%EF%BC%89/"/>
      <url>/2018/08/20/hdu%201527%20%E5%8F%96%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F%EF%BC%88%E5%A8%81%E4%BD%90%E5%A4%AB%E5%8D%9A%E5%BC%88%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1527" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1527</a></p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>有两堆石子，数量任意，可以不同。游戏开始由两个人轮流取石子。游戏规定，每次有两种不同的取法，一是可以在任意的一堆中取走任意多的石子；二是可以在两堆中同时取走相同数量的石子。最后把石子全部取完者为胜者。现在给出初始的两堆石子的数目，如果轮到你先取，假设双方都采取最好的策略，问最后你是胜者还是败者。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>输入包含若干行，表示若干种石子的初始情况，其中每一行包含两个非负整数a和b，表示两堆石子的数目，a和b都不大于1,000,000,000。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出对应也有若干行，每行包含一个数字1或0，如果最后你是胜者，则为1，反之，则为0。</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">2 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">8 </span><span class="number">4</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">7</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>威佐夫博弈裸题，在hdu 2177那篇有介绍威佐夫博弈</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b)!=EOF)&#123;</span><br><span class="line"><span class="keyword">if</span>(a&gt;b)&#123;</span><br><span class="line"><span class="keyword">int</span> temp=a;a=b;b=temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>((<span class="keyword">int</span>)((<span class="built_in">sqrt</span>(<span class="number">5</span>)+<span class="number">1</span>)*(b-a)/<span class="number">2</span>)==a)<span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"1\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 博弈论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 威佐夫博弈 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1564 Play a game</title>
      <link href="/2018/08/20/hdu%201564%20Play%20a%20game/"/>
      <url>/2018/08/20/hdu%201564%20Play%20a%20game/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1564" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1564</a></p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>New Year is Coming!<br>ailyanlu is very happy today! and he is playing a chessboard game with 8600.<br>The size of the chessboard is n*n. A stone is placed in a corner square. They play alternatively with 8600 having the first move. Each time, player is allowed to move the stone to an unvisited neighbor square horizontally or vertically. The one who can’t make a move will lose the game. If both play perfectly, who will win the game?</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The input is a sequence of positive integers each in a separate line.<br>The integers are between 1 and 10000, inclusive,(means 1 &lt;= n &lt;= 10000) indicating the size of the chessboard. The end of the input is indicated by a zero.</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>Output the winner (“8600” or “ailyanlu”) for each input line except the last zero.<br>No other characters should be inserted in the output.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">8600</span></span><br></pre></td></tr></table></figure><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给一个<code>n*n</code>的网格，一个石头从角落出发，每次水平或垂直移动到相邻的没有访问过的格子上，谁不能走谁输</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>蛮水的题。。</p><p>n=1先手必败，n=2先手必胜，n=3先手必败，n=4先手必胜…</p><p>这些自己模拟一下大概就能发现规律了：n为奇数时后手胜，n为偶数先手胜</p><p>当然这也是可以解释的，就是把棋盘分成一个个<code>1*2</code>的部分，无论先手后手只要跟着对方走把对方那个补上完成一个个<code>1*2</code>，最后就赢了，所以就是看剩下的<code>n*n-1</code>个格子能否恰好凑成一些<code>1*2</code>的小块，<code>n*n-1</code>为偶数就可以，那么后手必胜，如果<code>n*n-1</code>为奇数，多了一个，那么先手必胜</p><p>判断 <code>n*n-1</code> 的奇偶性，其实也是 <code>n</code>的奇偶性</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)&amp;&amp;n)&#123;</span><br><span class="line"><span class="keyword">if</span>(n&amp;<span class="number">1</span>)<span class="built_in">printf</span>(<span class="string">"ailyanlu\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"8600\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 博弈论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博弈论 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1729 Stone Game（尼姆博弈，sg函数）</title>
      <link href="/2018/08/20/hdu%201729%20Stone%20Game%EF%BC%88%E5%B0%BC%E5%A7%86%E5%8D%9A%E5%BC%88%EF%BC%8Csg%E5%87%BD%E6%95%B0%EF%BC%89/"/>
      <url>/2018/08/20/hdu%201729%20Stone%20Game%EF%BC%88%E5%B0%BC%E5%A7%86%E5%8D%9A%E5%BC%88%EF%BC%8Csg%E5%87%BD%E6%95%B0%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1729" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1729</a></p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>This game is a two-player game and is played as follows:</p><ol><li>There are n boxes; each box has its size. The box can hold up to s stones if the size is s.</li><li>At the beginning of the game, there are some stones in these boxes.</li><li>The players take turns choosing a box and put a number of stones into the box. The number mustn’t be great than the square of the number of stones before the player adds the stones. For example, the player can add 1 to 9 stones if there are 3 stones in the box. Of course, the total number of stones mustn’t be great than the size of the box.<br>4.Who can’t add stones any more will loss the game.</li></ol><p>Give an Initial state of the game. You are supposed to find whether the first player will win the game if both of the players make the best strategy.</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The input file contains several test cases.<br>Each test case begins with an integer N, 0 &lt; N ≤ 50, the number of the boxes.<br>In the next N line there are two integer si, ci (0 ≤ ci ≤ si ≤ 1,000,000) on each line, as the size of the box is si and there are ci stones in the box.<br>N = 0 indicates the end of input and should not be processed.</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each test case, output the number of the case on the first line, then output “Yes” (without quotes) on the next line if the first player can win the game, otherwise output “No”.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">0</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">6 </span><span class="number">2</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">6 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">6 </span><span class="number">3</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">Case</span> <span class="number">1</span><span class="string">:</span></span><br><span class="line"><span class="literal">Yes</span></span><br><span class="line"><span class="string">Case</span> <span class="number">2</span><span class="string">:</span></span><br><span class="line"><span class="literal">No</span></span><br></pre></td></tr></table></figure><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>n个盒子，每个盒子容量si，里面有ci个石头，每次操作向盒子里面放石头，放的数量不能大于盒子中已有石头数量的平方，不能再放石头的人输</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>按题意是个组合游戏和，博弈好题</p><p><strong>平等组合游戏</strong></p><ul><li>两人游戏</li><li>有一个状态集，而且通常是有限的</li><li>规定哪些状态转移是允许的</li><li>所有规定对于两人来说是一样的</li><li>两人轮流走步</li><li>有一个终止状态，到达终止状态后游戏即告终止</li><li>游戏可以在有限步内终止</li></ul><p>严格的来定义P状态和N状态</p><ul><li>所有的终止状态都是P状态；</li><li>对于任何的N状态，肯定存在一种方式可以一步转到一个P状态；</li><li>对于任何的P状态，不管怎么走步，都只能转到N状态。</li></ul><p><strong>Sprague-Grundy函数</strong><br>解题模型：</p><ul><li>把原游戏分解成多个独立的子游戏，则原游戏的SG函数值是它的所有子游戏的SG函数值的异或<br>即<code>sg(G)=sg(G1)^sg(G2)^...^sg(Gn)</code></li><li>分别考虑每一个子游戏，计算其SG值</li></ul><p>求每个盒子的sg函数值，<code>get_sg(s,c)</code>，假设每次的取的范围是<code>1～q</code>，那么有<code>q*q+q&lt;s</code> ，同时又要使q尽量大，则有<code>(q+1)*(q+1)+(q+1)&gt;=s</code></p><p>所以先根据上限s找到这个q，然后和当前容量c比较判断是否合法，如果当前盒子里的c&gt;q，那么就可以一次性放满，这个盒子就没用了，反之如果不能一次性放满，就需要假设盒子容量是q，继续递归求上一步操作，<code>get_sg(q,c)</code>;</p><p>要是倒着想感觉绕的话，那就把需要求两次的正过来想╮(￣▽￣””)╭，当前宝石个数是c，但是 <code>c+c*c&lt;s</code>，放不满怎么办，那就先放x个，x是多少现在我还不知道（因为越往后面平方越大，所以实际上我倒着想才会得到最优的结果），那么现在的宝石个数变成了（c+x）个，我可以放<code>1～(c+x)*(c+x)</code>个，如果按最大值放的话，此时就是<code>(c+x)*(c+x)+(c+x)</code>个，如果这个值恰好大于等于s，那么问题就最优的解决了</p><p>然后求这几个sg值的Nim和即可</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_sg</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> q=<span class="built_in">sqrt</span>((<span class="keyword">double</span>)s);</span><br><span class="line"><span class="keyword">while</span>(q+q*q&gt;=s)&#123;</span><br><span class="line">q--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(c&gt;q)<span class="keyword">return</span> s-c;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> get_sg(q,c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,cas=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)&amp;&amp;n)&#123;</span><br><span class="line"><span class="keyword">int</span> s,c;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Case %d:\n"</span>,++cas);</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(n--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;s,&amp;c);</span><br><span class="line">ans^=get_sg(s,c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ans)<span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 博弈论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 尼姆博弈 </tag>
            
            <tag> sg函数 </tag>
            
            <tag> 组合游戏 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1846 Brave Game（巴什博弈）</title>
      <link href="/2018/08/19/hdu%201846%20Brave%20Game%EF%BC%88%E5%B7%B4%E4%BB%80%E5%8D%9A%E5%BC%88%EF%BC%89/"/>
      <url>/2018/08/19/hdu%201846%20Brave%20Game%EF%BC%88%E5%B7%B4%E4%BB%80%E5%8D%9A%E5%BC%88%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1846" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1846</a></p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>十年前读大学的时候，中国每年都要从国外引进一些电影大片，其中有一部电影就叫《勇敢者的游戏》（英文名称：Zathura），一直到现在，我依然对于电影中的部分电脑特技印象深刻。<br>今天，大家选择上机考试，就是一种勇敢（brave）的选择；这个短学期，我们讲的是博弈（game）专题；所以，大家现在玩的也是“勇敢者的游戏”，这也是我命名这个题目的原因。<br>当然，除了“勇敢”，我还希望看到“诚信”，无论考试成绩如何，希望看到的都是一个真实的结果，我也相信大家一定能做到的~</p><p>各位勇敢者要玩的第一个游戏是什么呢？很简单，它是这样定义的：<br>1、  本游戏是一个二人游戏;<br>2、  有一堆石子一共有n个；<br>3、  两人轮流进行;<br>4、  每走一步可以取走1…m个石子；<br>5、  最先取光石子的一方为胜；   </p><p>如果游戏的双方使用的都是最优策略，请输出哪个人能赢。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>输入数据首先包含一个正整数C(C&lt;=100)，表示有C组测试数据。<br>每组测试数据占一行，包含两个整数n和m（1&lt;=n,m&lt;=1000），n和m的含义见题目描述。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>如果先走的人能赢，请输出“first”，否则请输出“second”，每个实例的输出占一行。</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">23 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">first</span></span><br><span class="line"><span class="keyword">second</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><h4 id="巴什博弈："><a href="#巴什博弈：" class="headerlink" title="巴什博弈："></a>巴什博弈：</h4><p>只有一堆n个物品，两个人轮流从这堆物品中取物，规定每次至少取一个，最多取m个。最后取光者得胜。</p><p>若n=m+1，由于一次最多只能取m个，所以无论先手拿几个，后手都能够一次拿走剩下的，先手必败</p><p>所以必胜情况就是：n=（m+1）r+s，（r为任意自然数，s≤m),那么先手先拿走s个物品，然后如果后手拿走k（≤m)个，那么先手再拿走m+1-k个，凑成一组（m+1）就行，保证留给后手的永远是（m+1）的倍数，那么先手必胜</p><p>所以结论是n%(m+1)!=0,先手必胜，反之后手胜</p><p>感觉博弈里很多都是根据对方的动作凑成一组一组，蛮妙的</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="keyword">int</span> m,n;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">        <span class="keyword">if</span>(n%(m+<span class="number">1</span>)==<span class="number">0</span>)<span class="built_in">cout</span>&lt;&lt;<span class="string">"second"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"first"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 博弈论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 巴什博弈 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1849 Rabbit and Grass（尼姆博弈）</title>
      <link href="/2018/08/19/hdu%201849%20Rabbit%20and%20Grass%EF%BC%88%E5%B0%BC%E5%A7%86%E5%8D%9A%E5%BC%88%EF%BC%89/"/>
      <url>/2018/08/19/hdu%201849%20Rabbit%20and%20Grass%EF%BC%88%E5%B0%BC%E5%A7%86%E5%8D%9A%E5%BC%88%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1849" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1849</a></p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>大学时光是浪漫的，女生是浪漫的，圣诞更是浪漫的，但是Rabbit和Grass这两个大学女生在今年的圣诞节却表现得一点都不浪漫：不去逛商场，不去逛公园，不去和AC男约会，两个人竟然猫在寝食下棋……<br>说是下棋，其实只是一个简单的小游戏而已，游戏的规则是这样的：</p><p>1、棋盘包含1xn个方格，方格从左到右分别编号为0，1，2，…，n-1；</p><p>2、m个棋子放在棋盘的方格上，方格可以为空，也可以放多于一个的棋子；</p><p>3、双方轮流走棋；</p><p>4、每一步可以选择任意一个棋子向左移动到任意的位置（可以多个棋子位于同一个方格），当然，任何棋子不能超出棋盘边界；</p><p>5、如果所有的棋子都位于最左边（即编号为0的位置），则游戏结束，并且规定最后走棋的一方为胜者。</p><p>对于本题，你不需要考虑n的大小（我们可以假设在初始状态，棋子总是位于棋盘的适当位置）。下面的示意图即为一个1x15的棋盘，共有6个棋子，其中，编号8的位置有两个棋子。</p><p><img src="http://acm.hdu.edu.cn/data/images/C101-1004-1.JPG" alt=""></p><p>大家知道，虽然偶尔不够浪漫，但是Rabbit和Grass都是冰雪聪明的女生，如果每次都是Rabbit先走棋，请输出最后的结果。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>输入数据包含多组测试用例，每个测试用例占二行，首先一行包含一个整数m（0&lt;=m&lt;=1000），表示本测试用例的棋子数目，紧跟着的一行包含m个整数Ki(i=1…m; 0&lt;=Ki&lt;=1000)，分别表示m个棋子初始的位置，m=0则结束输入。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>如果Rabbit能赢的话，请输出“Rabbit Win!”，否则请输出“Grass Win!”，每个实例的输出占一行。</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">2 </span></span><br><span class="line"><span class="symbol">3 </span><span class="number">5</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">5</span> <span class="number">6</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Rabbit Win!</span><br><span class="line">Grass Win!</span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>尼姆博弈水题 </p><p>因为棋子最后都移动到最左，可以重合，所以一个棋子的可移动次数就是它的位置号也相当于尼姆博弈n堆石子中某一堆的石子数</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">200005</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)&amp;&amp;n)&#123;</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>,c[N];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;c[i]);</span><br><span class="line">sum^=c[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sum==<span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">"Grass Win!\n"</span>);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Rabbit Win!\n"</span>);</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 博弈论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 尼姆博弈 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 2176 取(m堆)石子游戏（尼姆博弈）</title>
      <link href="/2018/08/19/hdu%202176%20%E5%8F%96(m%E5%A0%86)%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F%EF%BC%88%E5%B0%BC%E5%A7%86%E5%8D%9A%E5%BC%88%EF%BC%89/"/>
      <url>/2018/08/19/hdu%202176%20%E5%8F%96(m%E5%A0%86)%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F%EF%BC%88%E5%B0%BC%E5%A7%86%E5%8D%9A%E5%BC%88%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2176" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=2176</a></p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>m堆石子,两人轮流取.只能在1堆中取.取完者胜.先取者负输出No.先取者胜输出Yes,然后输出怎样取子.例如5堆 5,7,8,9,10先取者胜,先取者第1次取时可以从有8个的那一堆取走7个剩下1个,也可以从有9个的中那一堆取走9个剩下0个,也可以从有10个的中那一堆取走7个剩下3个.</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>输入有多组.每组第1行是m,m&lt;=200000. 后面m个非零正整数.m=0退出.</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>先取者负输出No.先取者胜输出Yes,然后输出先取者第1次取子的所有方法.如果从有a个石子的堆中取若干个后剩下b个后会胜就输出a b.参看Sample Output.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">45 </span><span class="number">45</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">6</span> <span class="number">9</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">No</span><br><span class="line">Yes</span><br><span class="line"><span class="number">9</span> <span class="number">5</span></span><br><span class="line">Yes</span><br><span class="line"><span class="number">8</span> <span class="number">1</span></span><br><span class="line"><span class="number">9</span> <span class="number">0</span></span><br><span class="line"><span class="number">10</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><h4 id="尼姆博弈"><a href="#尼姆博弈" class="headerlink" title="尼姆博弈"></a>尼姆博弈</h4><p>这题判断胜负直接异或就行，若异或结果sum=0则先手败，其余先手必胜</p><p>胜要求输出第一步操作后剩余的石子数，若<code>c[i]^sum&lt;c[i]</code>则可行，取得个数为<code>c[i]-c[i]^sum</code>，输出剩余个数即为<code>c[i]^sum</code></p><p>以下我也忘了摘自哪里。。</p><blockquote><p>三堆的时候</p><p>用(a,b,c)表示某种局势，首先(0,0,0)显然是必败态，无论谁面对(0,0,0) ，都必然失败；第二种必败态是(0,n,n)，自己在某一堆拿走k（k ≤ n）个物品，不论k为多少，对方只要在另一堆拿走k个物品，最后自己都将面临(0,0,0)的局势，必败。仔细分析一下，(1,2,3)也是必败态，无论自己如何拿，接下来对手都可以把局势变为(0,n,n)的情形</p><p>任何奇异局势(a,b,c)都有a XOR b XOR c = 0</p><p>如果我们面对的是一个非必败态(a,b,c)，要如何变为必败态呢？<br>假设 a &lt; b &lt; c，我们只要将 c 变为a XOR b，即可。因为有如下的运算结果：</p><p>a XOR b XOR (a XOR b)=(a XOR a) XOR (b XOR b) = 0 XOR 0 = 0</p><p>要将c 变为a XOR b，只要对 c进行 c-(a XOR b)这样的运算即可</p><hr><p>定义两个状态，分别为N和P，N代表Next-position，可以理解为先手必胜状态，P代表Previous-position，可以理解为后手必胜状态（或为先手必败）<br>N/P两个状态的关系：<br>（1）无法进行局面转移的状态为P；<br>（2）只要有一种转移方式能将局面变为P，则当前状态为N；<br>（3）任何转移方式都只能使局面变为N，则当前状态为P。<br>（1）最后所有石堆中的石子都为0，此时无法再做任何操作，所以此时是P；<br>（2）在还剩一堆的情况下（无论个数，因为可以随意取），把这一堆都取完，留给对方 的肯定是0个石子，也就是P，所以当前肯定是N；<br>（3）还剩下两堆，且每堆个数为1，因为当前必须要取，而当取完后，通过（2）可知， 留给对方的局 面一定是N，所以当前肯定为P。</p><hr><p>对于Nim游戏的各个石堆（a1,a2,a3……an），当且仅当a1^a2^a3^……^an=0时它为P。</p><p>论证还是要根据N/P的三个状态关系来：</p><p>（1）无法移动的局面为所有石堆的石子数都为0，0^0^……^0=0，这个很简单；</p><p>（2）若当前的局面不为0，即a1^a2^a3^……^an=k，则必定有一个数ai改变ai的值为ai’（或者理解为改变当前某个石堆的状态），能使的a1^a2^a3^……^ai’^……^an=0,证明很简单，通过异或的性质，因为k的二进制最高位（从右往左）为1，可以得出一 定存在某个ai的最高位为1，此时<code>ai&#39;*k&lt;ai</code>，这个也很好理解，当前的最高位由1变为0 ，十进制时ai一定小于ai’。所以，我们可以将<code>ai=ai&#39;*k</code>，此时<code>a1^a2^a3^......^ai&#39;*k ^.......an=0</code>。</p><p>（3）若当前某个局面为P，即a1^a2^a3^……^an=0,一定不存在改变某 个ai，使之变为ai’，a1^a2^a3^…….^ai’^……^an=0,因为异或满足消去律，消去后得ai=ai’，由题目可得不能不取，即当前的ai值必须改变，所以此时ai一定不等于ai’。</p></blockquote><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">200005</span>;</span><br><span class="line"><span class="comment">//c1^c2^...^cn=k,然后c1^c2^...^cn^k=0,那么对那个数执行操作减去（cn-cn^k）,那个数变为cn^k </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)&amp;&amp;n)&#123;</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>,c[N];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;c[i]);</span><br><span class="line">sum^=c[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sum==<span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>((c[i]^sum)&lt;c[i])<span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,c[i],(c[i]^sum));</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 博弈论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 尼姆博弈 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 2177 取(2堆)石子游戏（威佐夫博弈）</title>
      <link href="/2018/08/19/hdu%202177%20%E5%8F%96(2%E5%A0%86)%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F%EF%BC%88%E5%A8%81%E4%BD%90%E5%A4%AB%E5%8D%9A%E5%BC%88%EF%BC%89/"/>
      <url>/2018/08/19/hdu%202177%20%E5%8F%96(2%E5%A0%86)%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F%EF%BC%88%E5%A8%81%E4%BD%90%E5%A4%AB%E5%8D%9A%E5%BC%88%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2177" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=2177</a></p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>有两堆石子，数量任意，可以不同。游戏开始由两个人轮流取石子。游戏规定，每次有两种不同的取法，一是可以在任意的一堆中取走任意多的石子；二是可以在两堆中同时取走相同数量的石子。最后把石子全部取完者为胜者。现在给出初始的两堆石子的数目，如果轮到你先取，假设双方都采取最好的策略，问最后你是胜者还是败者。如果你胜，你第1次怎样取子? </p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>输入包含若干行，表示若干种石子的初始情况，其中每一行包含两个非负整数a和b，表示两堆石子的数目，a和b都不大于1,000,000，且a&lt;=b。a=b=0退出。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出也有若干行，如果最后你是败者，则为0，反之，输出1，并输出使你胜的你第1次取石子后剩下的两堆石子的数量x,y,x&lt;=y。如果在任意的一堆中取走石子能胜同时在两堆中同时取走相同数量的石子也能胜，先输出取走相同数量的石子的情况.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">1 </span><span class="number">2</span> </span><br><span class="line"><span class="symbol">5 </span><span class="number">8</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">7</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">7</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">5</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><h4 id="威佐夫博弈"><a href="#威佐夫博弈" class="headerlink" title="威佐夫博弈"></a>威佐夫博弈</h4><p>给出一些明显的必败状态(也就是当你面对这些状态时，只要你的对手够聪明，不犯错，无论你怎么拿，你都是必输的)（0，0）、（1，2）、（3，5）、（4，7）、（6，10）、（8，13）、（9，15）、（11，18）、（12，20）、…… 、（ak，bk） (k = 0, 1, 2, 3,……)。并称这些必败状态为 <strong>“奇异局势”</strong></p><p>得到a0=b0=0,ak是未在前面出现过的最小自然数,而 bk= ak + k。然后公式化就得到了奇异局势的状态公式:<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ak = [ k * (<span class="number">1</span> + √<span class="number">5</span>) / <span class="number">2</span> ]   ( [x]表示对x取整 )</span><br></pre></td></tr></table></figure></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">bk</span> = ak + k</span><br></pre></td></tr></table></figure><p>奇异局势有三个性质——</p><blockquote><p>性质1：每个自然数都包含在且只包含在一个奇异局势中。</p></blockquote><blockquote><p>性质2：对任意的奇异局势，任何合法的操作都会使其成为非奇异局势，也就是奇异局势的所有后继状态均为非奇异局势。</p></blockquote><blockquote><p>性质3：任何非奇异局势都可以通过某种合法操作得到奇异局势，即奇异局势的所有后继状态中存在奇异局势。</p></blockquote><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"><span class="keyword">double</span> x=(<span class="number">1</span>+<span class="built_in">sqrt</span>(<span class="number">5.0</span>))/<span class="number">2.0</span>;<span class="comment">//矩阵黄金分割数 </span></span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b)!=EOF&amp;&amp;(a+b))&#123;</span><br><span class="line"><span class="keyword">if</span>(a&gt;b)&#123;</span><br><span class="line"><span class="keyword">int</span> temp=a;a=b;b=temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>((<span class="keyword">int</span>)((b-a)*x)==a)<span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"1\n"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=a;i++)&#123;<span class="comment">//一起拿 </span></span><br><span class="line">n=a-i;</span><br><span class="line">m=b-i;</span><br><span class="line"><span class="keyword">if</span>((<span class="keyword">int</span>)((m-n)*x)==n)<span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,n,m);</span><br><span class="line"><span class="comment">//不用退出循环也可，因为由奇异状态性质，只会有一个i满足 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=b<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;<span class="comment">//从一个中拿，要从多的那堆中拿！ </span></span><br><span class="line">n=a;</span><br><span class="line">m=i;</span><br><span class="line"><span class="keyword">if</span>(n&gt;m)&#123;</span><br><span class="line"><span class="keyword">int</span> temp=n;n=m;m=temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>((<span class="keyword">int</span>)((m-n)*x)==n)<span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,n,m);</span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 博弈论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 威佐夫博弈 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>poj 1704 Georgia and Bob（尼姆博弈，阶梯博弈）</title>
      <link href="/2018/08/19/poj%201704%20Georgia%20and%20Bob%EF%BC%88%E5%B0%BC%E5%A7%86%E5%8D%9A%E5%BC%88%EF%BC%8C%E9%98%B6%E6%A2%AF%E5%8D%9A%E5%BC%88%EF%BC%89/"/>
      <url>/2018/08/19/poj%201704%20Georgia%20and%20Bob%EF%BC%88%E5%B0%BC%E5%A7%86%E5%8D%9A%E5%BC%88%EF%BC%8C%E9%98%B6%E6%A2%AF%E5%8D%9A%E5%BC%88%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://poj.org/problem?id=1704" rel="external nofollow noopener noreferrer" target="_blank">http://poj.org/problem?id=1704</a></p><p>Georgia and Bob decide to play a self-invented game. They draw a row of grids on paper, number the grids from left to right by 1, 2, 3, …, and place N chessmen on different grids, as shown in the following figure for example:<br><img src="http://poj.org/images/1704_1.jpg" alt=""></p><p>Georgia and Bob move the chessmen in turn. Every time a player will choose a chessman, and move it to the left without going over any other chessmen or across the left edge. The player can freely choose number of steps the chessman moves, with the constraint that the chessman must be moved at least ONE step and one grid can at most contains ONE single chessman. The player who cannot make a move loses the game. </p><p>Georgia always plays first since “Lady first”. Suppose that Georgia and Bob both do their best in the game, i.e., if one of them knows a way to win the game, he or she will be able to carry it out. </p><p>Given the initial positions of the n chessmen, can you predict who will finally win the game? </p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The first line of the input contains a single integer T (1 &lt;= T &lt;= 20), the number of test cases. Then T cases follow. Each test case contains two lines. The first line consists of one integer N (1 &lt;= N &lt;= 1000), indicating the number of chessmen. The second line contains N different integers P1, P2 … Pn (1 &lt;= Pi &lt;= 10000), which are the initial positions of the n chessmen.</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each test case, prints a single line, “Georgia will win”, if Georgia will win the game; “Bob will win”, if Bob will win the game; otherwise ‘Not sure’.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">9</span> <span class="number">12</span> <span class="number">14</span> <span class="number">17</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Bob will <span class="keyword">win</span></span><br><span class="line">Georgia will <span class="keyword">win</span></span><br></pre></td></tr></table></figure><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>从左到右有一排棋子，给出棋子初始位置，每次操作选择一个棋子向左移动，且不能跨过前面的棋子和最左边边缘，一个格子只能放一个棋子，无法移动的输</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>题面一看很玄乎，但是分析分析这其实就是个单单纯纯的尼姆博弈的模型啊</p><p>因为每个棋子不能越过前面的棋子，所以其实开始和结束棋子的顺序已经固定了都是一样的，他们最后移动多少步到哪个地方也都是安排好了的，所以最后肯定会变成<code>1...10...0（1表示有棋子，0表示空格）</code>的状态，所以其实就是相当于n堆取石子游戏，没堆的石子数相当于本题里两个棋子之间的距离，也就是后面棋子能直接移动的步数</p><p>这时可能会想到一个问题，如果移动后是<code>11100011</code>这样的情况呢？如果是这样的话，后手只要拿着那个跟先手移动的棋同一对棋，学着先手向左移动就好了，次数都一样，所以实际上转化成的石子数只和两个棋子的间隔有关，和具体的位置无关，最后都会在不影响胜负的情况下达到目标态</p><p>所以最后的具体写法是，先把棋子位置排序，从大到小两个两个一对，他们之间的间隔（r-l-1）就是每堆的石子数，这里如果最左边多了一个棋子，把它和位置1（即左边缘）凑成一对就可以</p><p>然后就是尼姆博弈异或一下没啥好说的啦～</p><p>查了一下原来这题有学名叫 <strong>阶梯博弈</strong></p><p>先mark一下 <a href="https://blog.csdn.net/a1799342217/article/details/78265265?locationNum=9&amp;fps=1" rel="external nofollow noopener noreferrer" target="_blank">阶梯博弈详解</a></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t,s[<span class="number">1005</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;s[i]);</span><br><span class="line">sort(s,s+n);</span><br><span class="line"><span class="keyword">int</span> ans;</span><br><span class="line"><span class="keyword">if</span>(n&amp;<span class="number">1</span>)&#123;</span><br><span class="line">ans=s[<span class="number">0</span>]<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;n;i+=<span class="number">2</span>)ans^=(s[i]-s[i<span class="number">-1</span>]<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">if</span>(ans==<span class="number">0</span>)<span class="built_in">cout</span>&lt;&lt;<span class="string">"Bob will win"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"Georgia will win"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">ans=s[<span class="number">1</span>]-s[<span class="number">0</span>]<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;n;i+=<span class="number">2</span>)ans^=(s[i]-s[i<span class="number">-1</span>]<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">if</span>(ans==<span class="number">0</span>)<span class="built_in">cout</span>&lt;&lt;<span class="string">"Bob will win"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"Georgia will win"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 博弈论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 尼姆博弈 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>poj 1740 A New Stone Game（博弈论）</title>
      <link href="/2018/08/19/poj%201740%20A%20New%20Stone%20Game%EF%BC%88%E5%8D%9A%E5%BC%88%E8%AE%BA%EF%BC%89/"/>
      <url>/2018/08/19/poj%201740%20A%20New%20Stone%20Game%EF%BC%88%E5%8D%9A%E5%BC%88%E8%AE%BA%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://poj.org/problem?id=1740" rel="external nofollow noopener noreferrer" target="_blank">http://poj.org/problem?id=1740</a></p><p>Alice and Bob decide to play a new stone game.At the beginning of the game they pick n(1&lt;=n&lt;=10) piles of stones in a line. Alice and Bob move the stones in turn.<br>At each step of the game,the player choose a pile,remove at least one stones,then freely move stones from this pile to any other pile that still has stones.<br>For example:n=4 and the piles have (3,1,4,2) stones.If the player chose the first pile and remove one.Then it can reach the follow states.<br>2 1 4 2<br>1 2 4 2（move one stone to Pile 2）<br>1 1 5 2（move one stone to Pile 3）<br>1 1 4 3（move one stone to Pile 4）<br>0 2 5 2（move one stone to Pile 2 and another one to Pile 3）<br>0 2 4 3（move one stone to Pile 2 and another one to Pile 4）<br>0 1 5 3（move one stone to Pile 3 and another one to Pile 4）<br>0 3 4 2（move two stones to Pile 2）<br>0 1 6 2（move two stones to Pile 3）<br>0 1 4 4（move two stones to Pile 4）<br>Alice always moves first. Suppose that both Alice and Bob do their best in the game.<br>You are to write a program to determine who will finally win the game. </p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The input contains several test cases. The first line of each test case contains an integer number n, denoting the number of piles. The following n integers describe the number of stones in each pile at the beginning of the game, you may assume the number of stones in each pile will not exceed 100.<br>The last test case is followed by one zero. </p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each test case, if Alice win the game,output 1,otherwise output 0. </p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">1</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>有n堆石头，每次操作选择一堆，移除其中至少一块，然后可以取剩下的石子里的任意个移动到别的任意堆，无法操作的输</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>首先当n=1时先手必胜，全部移除就好了</p><p>n=2时，若a1=a2，则后手只要模仿先手的操作就可以，先手必败；同理若a1！=a2，则先手把两堆变成相等，然后后手必败</p><p>n=3时，先手一次操作把第三堆分给一二堆或丢掉，那么就又变成了之前两堆相等的状态，先手必胜</p><p>继续推下去，n=4，由于谁面临三堆就必胜，所以双方都想让对方取了那个第四堆然后自己面对三堆状态，而只有在四堆都是1的时候，才会不得不去取第四堆</p><p>经过上面分析，先手有极大优势，先手必败的情况只有这种： <strong>后手一直学先手的操作，而一开始注定了总操作数为偶，刚好让先手无路可走</strong> </p><p>这种情况对应的状态为：石头堆数为偶数，且有n/2对一样的数</p><p>判断n/2对是否相等只要排序再比较就可以</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)&amp;&amp;n)&#123;</span><br><span class="line"><span class="keyword">int</span> c[<span class="number">15</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;c[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(n&amp;<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"1\n"</span>);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">sort(c,c+n);</span><br><span class="line"><span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i+=<span class="number">2</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(c[i]!=c[i+<span class="number">1</span>])&#123;</span><br><span class="line">flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag==<span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"1\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 博弈论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博弈论 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ACM-ICPC 2015 Changchun Preliminary Contest -- Ponds（拓扑排序）</title>
      <link href="/2018/08/19/Ponds%EF%BC%88%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F%EF%BC%89/"/>
      <url>/2018/08/19/Ponds%EF%BC%88%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="https://nanti.jisuanke.com/t/29329" rel="external nofollow noopener noreferrer" target="_blank">https://nanti.jisuanke.com/t/29329</a></p><p>Betty owns a lot of ponds, some of them are connected with other ponds by pipes, and there will not be more than one pipe between two ponds. Each pond has a value v.</p><p>Now Betty wants to remove some ponds because she does not have enough money. But each time when she removes a pond, she can only remove the ponds which are connected with less than two ponds, or the pond will explode.</p><p>Note that Betty should keep removing ponds until no more ponds can be removed. After that, please help her calculate the sum of the value for each connected component consisting of a odd number of ponds</p><h3 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h3><p>The first line of input will contain a number T(1≤T≤30) which is the number of test cases.</p><p>For each test case, the first line contains two number separated by a blank. One is the number p(1≤p≤10^4) which represents the number of ponds she owns, and the other is the number m(1≤m≤10^5) which represents the number of pipes.</p><p>The next line contains p numbers v1，···，vp, where vi(1≤vi≤10^8) indicating the value of pond i.</p><p>Each of the last m lines contain two numbers a and b, which indicates that pond a and pond b are connected by a pipe.</p><h3 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h3><p>For each test case, output the sum of the value of all connected components consisting of odd number of ponds after removing all the ponds connected with less than two pipes.</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="symbol">7 </span><span class="number">7</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">4</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">5</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">5</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">6</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">6</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">7</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">21</span></span><br></pre></td></tr></table></figure><h3 id="题目来源"><a href="#题目来源" class="headerlink" title="题目来源"></a>题目来源</h3><p>ACM-ICPC 2015 Changchun Preliminary Contest</p><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给一个无向图，池塘之间有管道相连，每个池塘有一个权值，现在要拆掉所有度数小于2的池塘，直至不能拆为止，最后求连通个数为奇数的池塘的权值和</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>删除一个度数为1的结点之后，这个点的边所通向的点的度数也要减一，就可能产生新的度数小于2的点，有点拓扑排序的意思，出现度数小于2的点就存入q，直到q为空，按照题意写就行</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1000005</span>;</span><br><span class="line"><span class="keyword">int</span> d[N],w[N],u[N],v[N],sum[N];</span><br><span class="line">LL ans;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt;tu;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> fa[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=x;i++)fa[i]=i;</span><br><span class="line"><span class="built_in">memset</span>(d,<span class="number">0</span>,<span class="keyword">sizeof</span>(d));</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="literal">false</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line"><span class="built_in">memset</span>(sum,<span class="number">0</span>,<span class="keyword">sizeof</span>(sum));</span><br><span class="line">tu.resize(x+<span class="number">1</span>);</span><br><span class="line">tu.clear();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp=x;</span><br><span class="line">    <span class="keyword">while</span>(fa[tmp]!=tmp)tmp=fa[tmp]; </span><br><span class="line">    fa[x]=tmp;</span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">join</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(find(x)!=find(y))fa[find(x)]=fa[find(y)];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t,n,m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line">ans=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">init(n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;w[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;u[i],&amp;v[i]);</span><br><span class="line">d[u[i]]++;d[v[i]]++;</span><br><span class="line">tu[u[i]].push_back(v[i]);</span><br><span class="line">tu[v[i]].push_back(u[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(d[i]&lt;=<span class="number">1</span>)&#123;</span><br><span class="line">vis[i]=<span class="literal">true</span>;</span><br><span class="line">q.push(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line"><span class="keyword">int</span> tmp=q.front();</span><br><span class="line">q.pop();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;tu[tmp].size();i++)&#123;</span><br><span class="line"><span class="keyword">int</span> nod=tu[tmp][i];</span><br><span class="line">d[nod]--;</span><br><span class="line"><span class="keyword">if</span>(d[nod]&lt;=<span class="number">1</span>&amp;&amp;vis[nod]==<span class="literal">false</span>)&#123;</span><br><span class="line">vis[nod]=<span class="literal">true</span>;</span><br><span class="line">q.push(nod);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(vis[u[i]]==<span class="literal">false</span>&amp;&amp;vis[v[i]]==<span class="literal">false</span>)join(u[i],v[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(vis[i]==<span class="literal">false</span>)sum[find(i)]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(vis[i]==<span class="literal">false</span>&amp;&amp;sum[find(i)]&amp;<span class="number">1</span>)ans+=w[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 图论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 拓扑排序 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Minimum Cut（读题。。）</title>
      <link href="/2018/08/19/Minimum%20Cut%EF%BC%88%E8%AF%BB%E9%A2%98%E3%80%82%E3%80%82%EF%BC%89/"/>
      <url>/2018/08/19/Minimum%20Cut%EF%BC%88%E8%AF%BB%E9%A2%98%E3%80%82%E3%80%82%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="https://nanti.jisuanke.com/t/29122" rel="external nofollow noopener noreferrer" target="_blank">https://nanti.jisuanke.com/t/29122</a></p><p>Given a simple unweighted graph GG (an undirected graph containing no loops nor multiple edges) with nn nodes and mm edges. Let T be a spanning tree of G. We say that a cut in G respects T if it cuts just one edges of T.</p><p>Since love needs good faith and hypocrisy return for only grief, you should find the minimum cut of graph G respecting the given spanning tree T.</p><h3 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h3><p>The input contains several test cases.</p><p>The first line of the input is a single integer t(1≤t≤5) which is the number of test cases. Then tt test cases follow.</p><p>Each test case contains several lines. The first line contains two integers n(2≤n≤20000) and m(n−1≤m≤200000). The following n-1n−1 lines describe the spanning tree T and each of them contains two integers uu and v corresponding to an edge. Next m−n+1 lines describe the undirected graph G and each of them contains two integers u and v corresponding to an edge which is not in the spanning tree T.</p><p>Output Format<br>For each test case, you should output the minimum cut of graph G respecting the given spanning tree T.</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">5</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">4</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">4</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Case</span> <span class="meta">#1: 2</span></span><br></pre></td></tr></table></figure><h3 id="题目来源"><a href="#题目来源" class="headerlink" title="题目来源"></a>题目来源</h3><p>ACM-ICPC 2015 Shenyang Preliminary Contest</p><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>先给一棵生成树，再在此基础上给图，删去树的一个边和图一些边使图不连通，求删去的最少边数</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>题目不难 读懂了就很水 但是真的是读了好久。。</p><p>要使图不连通且只能删树的一个边，就要找树上度数为1的点，然后加上图中和这个点相连的边，求最小的即可</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long </span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">20005</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> d1[N],d2[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=t;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> n,m,ans=INF;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="built_in">memset</span>(d1,<span class="number">0</span>,<span class="keyword">sizeof</span>(d1));</span><br><span class="line"><span class="built_in">memset</span>(d2,<span class="number">0</span>,<span class="keyword">sizeof</span>(d2));</span><br><span class="line"><span class="keyword">int</span> u,v;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</span><br><span class="line">d1[u]++;d1[v]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&lt;m;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</span><br><span class="line">d2[u]++;d2[v]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(d1[i]==<span class="number">1</span>)ans=min(ans,<span class="number">1</span>+d2[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Case #%d: %d\n"</span>,i,ans);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 图论 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>hdu 3371 Connect the Cities（最小生成树）</title>
      <link href="/2018/08/19/hdu%203371%20Connect%20the%20Cities%EF%BC%88%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%EF%BC%89/"/>
      <url>/2018/08/19/hdu%203371%20Connect%20the%20Cities%EF%BC%88%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=3371" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=3371</a></p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>In 2100, since the sea level rise, most of the cities disappear. Though some survived cities are still connected with others, but most of them become disconnected. The government wants to build some roads to connect all of these cities again, but they don’t want to take too much money.  </p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The first line contains the number of test cases.<br>Each test case starts with three integers: n, m and k. n (3 &lt;= n &lt;=500) stands for the number of survived cities, m (0 &lt;= m &lt;= 25000) stands for the number of roads you can choose to connect the cities and k (0 &lt;= k &lt;= 100) stands for the number of still connected cities.</p><p>To make it easy, the cities are signed from 1 to n.<br>Then follow m lines, each contains three integers p, q and c (0 &lt;= c &lt;= 1000), means it takes c to connect p and q.</p><p>Then follow k lines, each line starts with an integer t (2 &lt;= t &lt;= n) stands for the number of this connected cities. Then t integers follow stands for the id of these cities.</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each case, output the least money you need to take, if it’s impossible, just output -1.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="symbol">6 </span><span class="number">4</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">4</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">6</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span> <span class="number">5</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">4</span> <span class="number">33</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">4</span> <span class="number">5</span> <span class="number">6</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>最小生成树</p><p>当时tle无数次 最后同一段代码看人品卡过去。。？什么操作？？</p><p>现在测了两次都是748ms</p><p>最后求gen的时候不要find(i)==i，直接fa[i]==i<br>k个那段读入的时候用while(num–)，或许真的while比for快一点？？</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">505</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> u,v;</span><br><span class="line"><span class="keyword">double</span> cap;</span><br><span class="line">&#125;Edge[N*N];<span class="comment">//边集 </span></span><br><span class="line"><span class="keyword">int</span> m,ans; </span><br><span class="line"><span class="keyword">int</span> fa[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x!=fa[x])fa[x]=find(fa[x]);</span><br><span class="line"><span class="keyword">return</span> fa[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">join</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a=find(x),b=find(y);</span><br><span class="line"><span class="keyword">if</span>(a==b)<span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">fa[a]=b;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(struct Edge a,struct Edge b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.cap&lt;b.cap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kruskal</span><span class="params">()</span></span>&#123;</span><br><span class="line">sort(Edge+<span class="number">1</span>,Edge+m+<span class="number">1</span>,cmp);<span class="comment">//按边的最小代价排序 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> fx=find(Edge[i].u),fy=find(Edge[i].v);</span><br><span class="line"><span class="keyword">if</span>(fx==fy)<span class="keyword">continue</span>;</span><br><span class="line">ans+=Edge[i].cap;<span class="comment">//u，v不在一棵树上，就加上这条边 </span></span><br><span class="line">join(fx,fy);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;n,&amp;m,&amp;k);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)fa[i]=i;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> p,q,c;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;p,&amp;q,&amp;c);</span><br><span class="line">Edge[i].u=p;</span><br><span class="line">Edge[i].v=q;</span><br><span class="line">Edge[i].cap=c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> num,a,tmp;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;num,&amp;a);</span><br><span class="line">num--;tmp=a;</span><br><span class="line"><span class="keyword">while</span>(num--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a);</span><br><span class="line"><span class="keyword">if</span>(fa[tmp]!=fa[a])join(tmp,a);</span><br><span class="line">tmp=a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ans=<span class="number">0</span>;</span><br><span class="line">kruskal();</span><br><span class="line"><span class="keyword">int</span> gen=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(fa[i]==i)&#123;</span><br><span class="line">gen++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(gen==<span class="number">1</span>)<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 图论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 最小生成树 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1879 继续畅通工程（最小生成树）</title>
      <link href="/2018/08/19/hdu%201879%20%E7%BB%A7%E7%BB%AD%E7%95%85%E9%80%9A%E5%B7%A5%E7%A8%8B%EF%BC%88%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%EF%BC%89/"/>
      <url>/2018/08/19/hdu%201879%20%E7%BB%A7%E7%BB%AD%E7%95%85%E9%80%9A%E5%B7%A5%E7%A8%8B%EF%BC%88%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1879" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1879</a></p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>省政府“畅通工程”的目标是使全省任何两个村庄间都可以实现公路交通（但不一定有直接的公路相连，只要能间接通过公路可达即可）。现得到城镇道路统计表，表中列出了任意两城镇间修建道路的费用，以及该道路是否已经修通的状态。现请你编写程序，计算出全省畅通需要的最低成本。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>测试输入包含若干测试用例。每个测试用例的第1行给出村庄数目N ( 1&lt; N &lt; 100 )；随后的 N(N-1)/2 行对应村庄间道路的成本及修建状态，每行给4个正整数，分别是两个村庄的编号（从1编号到N），此两村庄间道路的成本，以及修建状态：1表示已建，0表示未建。</p><p>当N为0时输入结束。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>每个测试用例的输出占一行，输出全省畅通需要的最低成本。</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span> <span class="number">2</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span> <span class="number">4</span> <span class="number">0</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span> <span class="number">2</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span> <span class="number">4</span> <span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span> <span class="number">4</span> <span class="number">1</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>给出一些有的和没有的边</p><p>有的边直接join 没有的加入边集 跑一遍kruskal</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">105</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> u,v;</span><br><span class="line"><span class="keyword">double</span> cap;</span><br><span class="line">&#125;Edge[N*N];<span class="comment">//边集 </span></span><br><span class="line"><span class="keyword">int</span> n,num,cnt,ans; </span><br><span class="line"><span class="keyword">int</span> fa[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x!=fa[x])fa[x]=find(fa[x]);</span><br><span class="line"><span class="keyword">return</span> fa[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">join</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a=find(x),b=find(y);</span><br><span class="line"><span class="keyword">if</span>(a==b)<span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">fa[a]=b;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(struct Edge a,struct Edge b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.cap&lt;b.cap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kruskal</span><span class="params">()</span></span>&#123;</span><br><span class="line">sort(Edge+<span class="number">1</span>,Edge+cnt,cmp);<span class="comment">//按边的最小代价排序 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt<span class="number">-1</span>;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> fx=find(Edge[i].u),fy=find(Edge[i].v);</span><br><span class="line"><span class="keyword">if</span>(fx==fy)<span class="keyword">continue</span>;</span><br><span class="line">ans+=Edge[i].cap;<span class="comment">//u，v不在一棵树上，就加上这条边 </span></span><br><span class="line">join(fx,fy);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n))&#123;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)fa[i]=i;</span><br><span class="line">num=n*(n<span class="number">-1</span>)/<span class="number">2</span>;</span><br><span class="line">cnt=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=num;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> a,b,c,d;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;a,&amp;b,&amp;c,&amp;d);</span><br><span class="line"><span class="keyword">if</span>(d==<span class="number">0</span>)&#123;</span><br><span class="line">Edge[cnt].u=a;</span><br><span class="line">Edge[cnt].v=b;</span><br><span class="line">Edge[cnt].cap=c;</span><br><span class="line">cnt++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(d==<span class="number">1</span>)&#123;</span><br><span class="line">join(a,b);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ans=<span class="number">0</span>;</span><br><span class="line">kruskal();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 图论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 最小生成树 </tag>
            
            <tag> kruskal </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1875 畅通工程再续（最小生成树）</title>
      <link href="/2018/08/19/hdu%201875%20%E7%95%85%E9%80%9A%E5%B7%A5%E7%A8%8B%E5%86%8D%E7%BB%AD%EF%BC%88%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%EF%BC%89/"/>
      <url>/2018/08/19/hdu%201875%20%E7%95%85%E9%80%9A%E5%B7%A5%E7%A8%8B%E5%86%8D%E7%BB%AD%EF%BC%88%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1875" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1875</a></p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>相信大家都听说一个“百岛湖”的地方吧，百岛湖的居民生活在不同的小岛中，当他们想去其他的小岛时都要通过划小船来实现。现在政府决定大力发展百岛湖，发展首先要解决的问题当然是交通问题，政府决定实现百岛湖的全畅通！经过考察小组RPRush对百岛湖的情况充分了解后，决定在符合条件的小岛间建上桥，所谓符合条件，就是2个小岛之间的距离不能小于10米，也不能大于1000米。当然，为了节省资金，只要求实现任意2个小岛之间有路通即可。其中桥的价格为 100元/米。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>输入包括多组数据。输入首先包括一个整数T(T &lt;= 200)，代表有T组数据。<br>每组数据首先是一个整数C(C &lt;= 100),代表小岛的个数，接下来是C组坐标，代表每个小岛的坐标，这些坐标都是 0 &lt;= x, y &lt;= 1000的整数。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>每组输入数据输出一行，代表建桥的最小花费，结果保留一位小数。如果无法实现工程以达到全部畅通，输出”oh!”.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">10 </span><span class="number">10</span></span><br><span class="line"><span class="symbol">20 </span><span class="number">20</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">1000 </span><span class="number">1000</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1414<span class="selector-class">.2</span></span><br><span class="line"><span class="selector-tag">oh</span>!</span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>最小生成树 加了边的限制 只要在加边前判断一下边长是否合法就行</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">105</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> u,v;</span><br><span class="line"><span class="keyword">double</span> cap;</span><br><span class="line">&#125;Edge[N*N];<span class="comment">//边集 </span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line">&#125;Node[N];<span class="comment">//点集 </span></span><br><span class="line"><span class="keyword">int</span> n,num,ed,cnt;</span><br><span class="line"><span class="keyword">double</span> ans; </span><br><span class="line"><span class="keyword">int</span> fa[N];</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">distance_</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sqrt</span>((Node[a].x-Node[b].x)*(Node[a].x-Node[b].x)+(Node[a].y-Node[b].y)*(Node[a].y-Node[b].y));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x!=fa[x])fa[x]=find(fa[x]);</span><br><span class="line"><span class="keyword">return</span> fa[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">join</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a=find(x),b=find(y);</span><br><span class="line"><span class="keyword">if</span>(a==b)<span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">fa[a]=b;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(struct Edge a,struct Edge b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.cap&lt;b.cap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kruskal</span><span class="params">()</span></span>&#123;</span><br><span class="line">sort(Edge,Edge+cnt,cmp);<span class="comment">//按边的最小代价排序 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt<span class="number">-1</span>;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> fx=find(Edge[i].u),fy=find(Edge[i].v);</span><br><span class="line"><span class="keyword">if</span>(fx==fy)<span class="keyword">continue</span>;</span><br><span class="line">ans+=Edge[i].cap;<span class="comment">//u，v不在一棵树上，就加上这条边 </span></span><br><span class="line">join(fx,fy);</span><br><span class="line">ed++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;Node[i].x,&amp;Node[i].y);</span><br><span class="line">fa[i]=i;</span><br><span class="line">&#125;</span><br><span class="line">cnt=<span class="number">1</span>;</span><br><span class="line">ed=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(distance_(i,j)&gt;=<span class="number">10.0</span>&amp;&amp;distance_(i,j)&lt;=<span class="number">1000.0</span>)&#123;<span class="comment">//生成边集的时候就把不要的排除了</span></span><br><span class="line">Edge[cnt].u=i;</span><br><span class="line">Edge[cnt].v=j;</span><br><span class="line">Edge[cnt].cap=distance_(i,j); </span><br><span class="line">cnt++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ans=<span class="number">0</span>;</span><br><span class="line">kruskal();</span><br><span class="line"><span class="keyword">if</span>(ed==n<span class="number">-1</span>)<span class="built_in">printf</span>(<span class="string">"%.1f\n"</span>,ans*<span class="number">100</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"oh!\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 图论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 最小生成树 </tag>
            
            <tag> kruskal </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1863 畅通工程（最小生成树）</title>
      <link href="/2018/08/19/hdu%201863%20%E7%95%85%E9%80%9A%E5%B7%A5%E7%A8%8B%EF%BC%88%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%EF%BC%89/"/>
      <url>/2018/08/19/hdu%201863%20%E7%95%85%E9%80%9A%E5%B7%A5%E7%A8%8B%EF%BC%88%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1863" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1863</a></p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>省政府“畅通工程”的目标是使全省任何两个村庄间都可以实现公路交通（但不一定有直接的公路相连，只要能间接通过公路可达即可）。经过调查评估，得到的统计表中列出了有可能建设公路的若干条道路的成本。现请你编写程序，计算出全省畅通需要的最低成本。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>测试输入包含若干测试用例。每个测试用例的第1行给出评估的道路条数 N、村庄数目M ( &lt; 100 )；随后的 N<br>行对应村庄间道路的成本，每行给出一对正整数，分别是两个村庄的编号，以及此两村庄间道路的成本（也是正整数）。为简单起见，村庄从1到M编号。当N为0时，全部输入结束，相应的结果不要输出。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>对每个测试用例，在1行里输出全省畅通需要的最低成本。若统计数据不足以保证畅通，则输出“?”。</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span> <span class="number">4</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">100</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line">?</span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>给出边 求最小生成树 </p><p>如果无法连通 输出“?”</p><p>因为要判断最后是否连通 所以用kruskal 最后只要先记录一个点的父亲 然后判断剩余点是否全部和它相同即可</p><p>不满足连通条件的情况：</p><ul><li>（点&lt;=边+1）的不行</li><li>最后所有结点不在一个根的不行</li></ul><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">105</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> u,v;</span><br><span class="line"><span class="keyword">int</span> cap;</span><br><span class="line">&#125;Edge[N*N];<span class="comment">//边集 </span></span><br><span class="line"><span class="keyword">int</span> n,ans,num; </span><br><span class="line"><span class="keyword">int</span> fa[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x!=fa[x])fa[x]=find(fa[x]);</span><br><span class="line"><span class="keyword">return</span> fa[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">join</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a=find(x),b=find(y);</span><br><span class="line"><span class="keyword">if</span>(a==b)<span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">fa[a]=b;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(struct Edge a,struct Edge b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.cap&lt;b.cap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kruskal</span><span class="params">()</span></span>&#123;</span><br><span class="line">sort(Edge,Edge+num,cmp);<span class="comment">//按边的最小代价排序 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=num;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> fx=find(Edge[i].u),fy=find(Edge[i].v);</span><br><span class="line"><span class="keyword">if</span>(fx==fy)<span class="keyword">continue</span>;</span><br><span class="line">ans+=Edge[i].cap;<span class="comment">//u，v不在一棵树上，就加上这条边 </span></span><br><span class="line">join(fx,fy);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;num,&amp;n)!=EOF)&#123;</span><br><span class="line"><span class="keyword">if</span>(num==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">fa[i]=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> p,q,w;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=num;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;p,&amp;q,&amp;w);</span><br><span class="line">Edge[i].u=p;</span><br><span class="line">Edge[i].v=q;</span><br><span class="line">Edge[i].cap=w;</span><br><span class="line">&#125;</span><br><span class="line">ans=<span class="number">0</span>;</span><br><span class="line">kruskal();</span><br><span class="line"><span class="keyword">int</span> flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=num;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(find(i)!=find(<span class="number">1</span>))&#123;</span><br><span class="line">flag=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span>(num&lt;n<span class="number">-1</span>)<span class="built_in">printf</span>(<span class="string">"?\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(flag==<span class="number">1</span>)<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"?\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 图论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 最小生成树 </tag>
            
            <tag> kruskal </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1301 Jungle Roads（最小生成树）</title>
      <link href="/2018/08/19/hdu%201301%20Jungle%20Roads%EF%BC%88%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%EF%BC%89/"/>
      <url>/2018/08/19/hdu%201301%20Jungle%20Roads%EF%BC%88%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1301" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1301</a></p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p><img src="http://acm.hdu.edu.cn/data/images/1301-1.gif" alt=""></p><p>The Head Elder of the tropical island of Lagrishan has a problem. A burst of foreign aid money was spent on extra roads between villages some years ago. But the jungle overtakes roads relentlessly, so the large road network is too expensive to maintain. The Council of Elders must choose to stop maintaining some roads. The map above on the left shows all the roads in use now and the cost in aacms per month to maintain them. Of course there needs to be some way to get between all the villages on maintained roads, even if the route is not as short as before. The Chief Elder would like to tell the Council of Elders what would be the smallest amount they could spend in aacms per month to maintain roads that would connect all the villages. The villages are labeled A through I in the maps above. The map on the right shows the roads that could be maintained most cheaply, for 216 aacms per month. Your task is to write a program that will solve such problems. </p><p>The input consists of one to 100 data sets, followed by a final line containing only 0. Each data set starts with a line containing only a number n, which is the number of villages, 1 &lt; n &lt; 27, and the villages are labeled with the first n letters of the alphabet, capitalized. Each data set is completed with n-1 lines that start with village labels in alphabetical order. There is no line for the last village. Each line for a village starts with the village label followed by a number, k, of roads from this village to villages with labels later in the alphabet. If k is greater than 0, the line continues with data for each of the k roads. The data for each road is the village label for the other end of the road followed by the monthly maintenance cost in aacms for the road. Maintenance costs will be positive integers less than 100. All data fields in the row are separated by single blanks. The road network will always allow travel between all the villages. The network will never have more than 75 roads. No village will have more than 15 roads going to other villages (before or after in the alphabet). In the sample input below, the first data set goes with the map above. </p><p>The output is one integer per line for each data set: the minimum cost in aacms per month to maintain a road system that connect all the villages. Caution: A brute force solution that examines every possible set of roads will not finish within the one minute time limit. </p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">9</span></span><br><span class="line">A <span class="number">2</span> B <span class="number">12</span> I <span class="number">25</span></span><br><span class="line">B <span class="number">3</span> C <span class="number">10</span> H <span class="number">40</span> I <span class="number">8</span></span><br><span class="line">C <span class="number">2</span> D <span class="number">18</span> G <span class="number">55</span></span><br><span class="line">D <span class="number">1</span> E <span class="number">44</span></span><br><span class="line">E <span class="number">2</span> F <span class="number">60</span> G <span class="number">38</span></span><br><span class="line">F <span class="number">0</span></span><br><span class="line">G <span class="number">1</span> H <span class="number">35</span></span><br><span class="line">H <span class="number">1</span> I <span class="number">35</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line">A <span class="number">2</span> B <span class="number">10</span> C <span class="number">40</span></span><br><span class="line">B <span class="number">1</span> C <span class="number">20</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">216</span></span><br><span class="line"><span class="number">30</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>一看图就是个最小生成树。。</p><p>注意回车要用getchar()搞掉</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">30</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> u,v;</span><br><span class="line"><span class="keyword">double</span> cap;</span><br><span class="line">&#125;Edge[N*N];</span><br><span class="line"><span class="keyword">int</span> n,ans,cnt; </span><br><span class="line"><span class="keyword">int</span> fa[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x!=fa[x])fa[x]=find(fa[x]);</span><br><span class="line"><span class="keyword">return</span> fa[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">join</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a=find(x),b=find(y);</span><br><span class="line"><span class="keyword">if</span>(a==b)<span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">fa[a]=b;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(struct Edge a,struct Edge b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.cap&lt;b.cap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kruskal</span><span class="params">()</span></span>&#123;</span><br><span class="line">sort(Edge,Edge+cnt,cmp);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;cnt;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> fx=find(Edge[i].u),fy=find(Edge[i].v);</span><br><span class="line"><span class="keyword">if</span>(fx==fy)<span class="keyword">continue</span>;</span><br><span class="line">ans+=Edge[i].cap;</span><br><span class="line">join(fx,fy);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF)&#123;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;N;i++)fa[i]=i;</span><br><span class="line">cnt=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">char</span> x,y;</span><br><span class="line"><span class="keyword">int</span> xnum,c;</span><br><span class="line">getchar();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%c %d"</span>,&amp;x,&amp;xnum);</span><br><span class="line"><span class="keyword">while</span>(xnum--)&#123;</span><br><span class="line">getchar();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%c %d"</span>,&amp;y,&amp;c);</span><br><span class="line">Edge[cnt].u=(<span class="keyword">int</span>)(x-<span class="string">'A'</span>+<span class="number">1</span>);</span><br><span class="line">Edge[cnt].v=(<span class="keyword">int</span>)(y-<span class="string">'A'</span>+<span class="number">1</span>);</span><br><span class="line">Edge[cnt].cap=c;</span><br><span class="line">cnt++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ans=<span class="number">0</span>;</span><br><span class="line">kruskal();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 图论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 最小生成树 </tag>
            
            <tag> kruskal </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1233 还是畅通工程（最小生成树）</title>
      <link href="/2018/08/19/hdu%201233%20%E8%BF%98%E6%98%AF%E7%95%85%E9%80%9A%E5%B7%A5%E7%A8%8B%EF%BC%88%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%EF%BC%89/"/>
      <url>/2018/08/19/hdu%201233%20%E8%BF%98%E6%98%AF%E7%95%85%E9%80%9A%E5%B7%A5%E7%A8%8B%EF%BC%88%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1233" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1233</a></p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>某省调查乡村交通状况，得到的统计表中列出了任意两村庄间的距离。省政府“畅通工程”的目标是使全省任何两个村庄间都可以实现公路交通（但不一定有直接的公路相连，只要能间接通过公路可达即可），并要求铺设的公路总长度为最小。请计算最小的公路总长度。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>测试输入包含若干测试用例。每个测试用例的第1行给出村庄数目N ( &lt; 100 )；随后的N(N-1)/2行对应村庄间的距离，每行给出一对正整数，分别是两个村庄的编号，以及此两村庄间的距离。为简单起见，村庄从1到N编号。<br>当N为0时，输入结束，该用例不被处理。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>对每个测试用例，在1行里输出最小的公路总长度。</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span> <span class="number">4</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span> <span class="number">4</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">4</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">4</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">4</span> <span class="number">5</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>最小生成树 写的Kruskal</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">105</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> u,v;</span><br><span class="line"><span class="keyword">int</span> cap;</span><br><span class="line">&#125;Edge[N*N];<span class="comment">//边集 </span></span><br><span class="line"><span class="keyword">int</span> n,ans,num; </span><br><span class="line"><span class="keyword">int</span> fa[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">fa[i]=i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x!=fa[x])fa[x]=find(fa[x]);</span><br><span class="line"><span class="keyword">return</span> fa[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">join</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a=find(x),b=find(y);</span><br><span class="line"><span class="keyword">if</span>(a==b)<span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">fa[a]=b;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(struct Edge a,struct Edge b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.cap&lt;b.cap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kruskal</span><span class="params">()</span></span>&#123;</span><br><span class="line">sort(Edge,Edge+num,cmp);<span class="comment">//按边的最小代价排序 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> fx=find(Edge[i].u),fy=find(Edge[i].v);</span><br><span class="line"><span class="keyword">if</span>(fx==fy)<span class="keyword">continue</span>;</span><br><span class="line">ans+=Edge[i].cap;<span class="comment">//u，v不在一棵树上，就加上这条边 </span></span><br><span class="line">join(fx,fy);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF&amp;&amp;n)&#123;</span><br><span class="line">num=n*(n<span class="number">-1</span>)/<span class="number">2</span>;</span><br><span class="line">init();</span><br><span class="line"><span class="keyword">int</span> p,q,w;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;p,&amp;q,&amp;w);</span><br><span class="line">Edge[i].u=p;</span><br><span class="line">Edge[i].v=q;</span><br><span class="line">Edge[i].cap=w;</span><br><span class="line">&#125;</span><br><span class="line">ans=<span class="number">0</span>;</span><br><span class="line">kruskal();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 图论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 最小生成树 </tag>
            
            <tag> kruskal </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1162 Eddy&#39;s picture（最小生成树）</title>
      <link href="/2018/08/19/hdu%201162%20Eddy&#39;s%20picture%EF%BC%88%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%EF%BC%89/"/>
      <url>/2018/08/19/hdu%201162%20Eddy&#39;s%20picture%EF%BC%88%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1162" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1162</a></p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>Eddy begins to like painting pictures recently ,he is sure of himself to become a painter.Every day Eddy draws pictures in his small room, and he usually puts out his newest pictures to let his friends appreciate. but the result it can be imagined, the friends are not interested in his picture.Eddy feels very puzzled,in order to change all friends ‘s view to his technical of painting pictures ,so Eddy creates a problem for the his friends of you.<br>Problem descriptions as follows: Given you some coordinates pionts on a drawing paper, every point links with the ink with the straight line, causes all points finally to link in the same place. How many distants does your duty discover the shortest length which the ink draws?</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The first line contains 0 &lt; n &lt;= 100, the number of point. For each point, a line follows; each following line contains two real numbers indicating the (x,y) coordinates of the point. </p><p>Input contains multiple test cases. Process to the end of file.</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>Your program prints a single real number to two decimal places: the minimum total length of ink lines that can connect all the points. </p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1.0</span> <span class="number">1.0</span></span><br><span class="line"><span class="number">2.0</span> <span class="number">2.0</span></span><br><span class="line"><span class="number">2.0</span> <span class="number">4.0</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3<span class="selector-class">.41</span></span><br></pre></td></tr></table></figure><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给n个点的坐标 求最小生成树</p><p>只要预处理一下边长就没别的了</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">105</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> u,v;</span><br><span class="line"><span class="keyword">double</span> cap;</span><br><span class="line">&#125;Edge[N*N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line"><span class="keyword">float</span> x,y;</span><br><span class="line">&#125;Node[N];</span><br><span class="line"><span class="keyword">int</span> n,num,cnt;</span><br><span class="line"><span class="keyword">double</span> ans; </span><br><span class="line"><span class="keyword">int</span> fa[N];</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">distance_</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sqrt</span>((Node[a].x-Node[b].x)*(Node[a].x-Node[b].x)+(Node[a].y-Node[b].y)*(Node[a].y-Node[b].y));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x!=fa[x])fa[x]=find(fa[x]);</span><br><span class="line"><span class="keyword">return</span> fa[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">join</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a=find(x),b=find(y);</span><br><span class="line"><span class="keyword">if</span>(a==b)<span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">fa[a]=b;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(struct Edge a,struct Edge b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.cap&lt;b.cap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kruskal</span><span class="params">()</span></span>&#123;</span><br><span class="line">sort(Edge,Edge+num+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=num;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> fx=find(Edge[i].u),fy=find(Edge[i].v);</span><br><span class="line"><span class="keyword">if</span>(fx==fy)<span class="keyword">continue</span>;</span><br><span class="line">ans+=Edge[i].cap;</span><br><span class="line">join(fx,fy);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF)&#123;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%f%f"</span>,&amp;Node[i].x,&amp;Node[i].y);</span><br><span class="line">fa[i]=i;</span><br><span class="line">&#125;</span><br><span class="line">cnt=<span class="number">0</span>;</span><br><span class="line">num=n*(n<span class="number">-1</span>)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">Edge[cnt].u=i;</span><br><span class="line">Edge[cnt].v=j;</span><br><span class="line">Edge[cnt].cap=distance_(i,j); </span><br><span class="line">cnt++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ans=<span class="number">0</span>;</span><br><span class="line">kruskal();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.2f\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 图论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 最小生成树 </tag>
            
            <tag> kruskal </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1102 Constructing Roads(最小生成树)</title>
      <link href="/2018/08/19/hdu%201102%20Constructing%20Roads(%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91)/"/>
      <url>/2018/08/19/hdu%201102%20Constructing%20Roads(%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91)/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1102" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1102</a><br>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)</p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>There are N villages, which are numbered from 1 to N, and you should build some roads such that every two villages can connect to each other. We say two village A and B are connected, if and only if there is a road between A and B, or there exists a village C such that there is a road between A and C, and C and B are connected. </p><p>We know that there are already some roads between some villages and your job is the build some roads such that all the villages are connect and the length of all the roads built is minimum.</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The first line is an integer N (3 &lt;= N &lt;= 100), which is the number of villages. Then come N lines, the i-th of which contains N integers, and the j-th of these N integers is the distance (the distance should be an integer within [1, 1000]) between village i and village j.</p><p>Then there is an integer Q (0 &lt;= Q &lt;= N * (N + 1) / 2). Then come Q lines, each line contains two integers a and b (1 &lt;= a &lt; b &lt;= N), which means the road between village a and village b has been built.</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>You should output a line contains an integer, which is the length of all the roads to be built such that all the villages are connected, and this value is minimum. </p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">990</span> <span class="number">692</span></span><br><span class="line"><span class="symbol">990 </span><span class="number">0</span> <span class="number">179</span></span><br><span class="line"><span class="symbol">692 </span><span class="number">179</span> <span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">179</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>裸的最小生成树的题 两种算法都放上 </p><p>prim加点 kruskal加边</p><p>现在整理以前的代码感觉以前写的好详细。。</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><p><code>Prim</code></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">105</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> n,ans;</span><br><span class="line"><span class="keyword">int</span> map_[N][N],dis[N],vis[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prim</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">dis[i]=map_[<span class="number">1</span>][i];</span><br><span class="line">vis[i]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">dis[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">vis[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> k,tmp;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">tmp=INF;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;<span class="comment">//在从i到j还没访问过的j中找出代价最小的 </span></span><br><span class="line"><span class="keyword">if</span>(!vis[j]&amp;&amp;tmp&gt;dis[j])&#123;</span><br><span class="line">k=j;</span><br><span class="line">tmp=dis[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(tmp==INF)<span class="keyword">break</span>;<span class="comment">//没找到即全部访问过了，prim结束 </span></span><br><span class="line">vis[k]=<span class="number">1</span>;<span class="comment">//给k标记已访问 </span></span><br><span class="line">ans+=dis[k];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;<span class="comment">//加入从k出发的最短路 </span></span><br><span class="line"><span class="keyword">if</span>(!vis[j]&amp;&amp;dis[j]&gt;map_[k][j])&#123;</span><br><span class="line">dis[j]=map_[k][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;map_[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> q,a,b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;q);</span><br><span class="line"><span class="keyword">while</span>(q--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br><span class="line">map_[a][b]=map_[b][a]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">ans=<span class="number">0</span>;</span><br><span class="line">prim();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Kruskal</code></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">105</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> u,v;</span><br><span class="line"><span class="keyword">int</span> cap;</span><br><span class="line">&#125;Edge[N*N];</span><br><span class="line"><span class="keyword">int</span> n,ans,cnt;<span class="comment">//cnt为边数 </span></span><br><span class="line"><span class="keyword">int</span> fa[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">fa[i]=i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x!=fa[x])fa[x]=find(fa[x]);</span><br><span class="line"><span class="keyword">return</span> fa[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">join</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a=find(x),b=find(y);</span><br><span class="line"><span class="keyword">if</span>(a==b)<span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">fa[a]=b;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(struct Edge a,struct Edge b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.cap&lt;b.cap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kruskal</span><span class="params">()</span></span>&#123;</span><br><span class="line">sort(Edge,Edge+cnt,cmp);<span class="comment">//按边的最小代价排序 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;cnt;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> fx=find(Edge[i].u),fy=find(Edge[i].v);</span><br><span class="line"><span class="keyword">if</span>(fx==fy)<span class="keyword">continue</span>;</span><br><span class="line">ans+=Edge[i].cap;<span class="comment">//u，v不在一棵树上，就加上这条边 </span></span><br><span class="line">join(fx,fy);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF)&#123;</span><br><span class="line">init();</span><br><span class="line">cnt=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> w;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;w);</span><br><span class="line">Edge[cnt].u=i;</span><br><span class="line">Edge[cnt].v=j;</span><br><span class="line">Edge[cnt].cap=w;</span><br><span class="line">cnt++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> q,u,v;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;q);</span><br><span class="line"><span class="keyword">while</span>(q--)&#123;<span class="comment">//建树 </span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</span><br><span class="line">join(u,v);</span><br><span class="line">&#125;</span><br><span class="line">ans=<span class="number">0</span>;</span><br><span class="line">kruskal();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 图论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 最小生成树 </tag>
            
            <tag> kruskal </tag>
            
            <tag> prim </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1198 Farm Irrigation（并查集）</title>
      <link href="/2018/08/18/hdu%201198%20Farm%20Irrigation%EF%BC%88%E5%B9%B6%E6%9F%A5%E9%9B%86%EF%BC%89/"/>
      <url>/2018/08/18/hdu%201198%20Farm%20Irrigation%EF%BC%88%E5%B9%B6%E6%9F%A5%E9%9B%86%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1198" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1198</a></p><p>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)</p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>Benny has a spacious farm land to irrigate. The farm land is a rectangle, and is divided into a lot of samll squares. Water pipes are placed in these squares. Different square has a different type of pipe. There are 11 types of pipes, which is marked from A to K, as Figure 1 shows.</p><p><img src="http://acm.hdu.edu.cn/data/images/1121-1.gif" alt=""></p><p>Benny has a map of his farm, which is an array of marks denoting the distribution of water pipes over the whole farm. For example, if he has a map </p><p>ADC<br>FJK<br>IHE   </p><p>then the water pipes are distributed like </p><p><img src="http://acm.hdu.edu.cn/data/images/1121-2.gif" alt=""></p><p>Several wellsprings are found in the center of some squares, so water can flow along the pipes from one square to another. If water flow crosses one square, the whole farm land in this square is irrigated and will have a good harvest in autumn. </p><p>Now Benny wants to know at least how many wellsprings should be found to have the whole farm land irrigated. Can you help him? </p><p>Note: In the above example, at least 3 wellsprings are needed, as those red points in Figure 2 show.</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>There are several test cases! In each test case, the first line contains 2 integers M and N, then M lines follow. In each of these lines, there are N characters, in the range of ‘A’ to ‘K’, denoting the type of water pipe over the corresponding square. A negative M or N denotes the end of input, else you can assume 1 &lt;= M, N &lt;= 50.</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each test case, output in one line the least number of wellsprings needed.</p><p><strong>Sample Input</strong></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span> <span class="number">2</span></span><br><span class="line">DK</span><br><span class="line">HF</span><br><span class="line"><span class="number">3</span> <span class="number">3</span></span><br><span class="line">ADC</span><br><span class="line">FJK</span><br><span class="line">IHE</span><br><span class="line"><span class="number">-1</span> <span class="number">-1</span></span><br></pre></td></tr></table></figure><p><strong>Sample Output</strong></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>一个并查集好题</p><p>水管连通本质上就是集合的合并，最后求有几个集合的问题，很容易想到并查集</p><p>只需要对每个地块与右方和下方的地块进行合并即可，合并之前先判断是否能连通，若能连通则合并，不能连通，则不能合并</p><p>每个地块的四个方向用数组的01来表示，用位运算来判断可连性</p><p>具体见代码注释</p><p>还有一种二进制的位运算写法</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">const int type[<span class="number">11</span>] = &#123;<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">12</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>&#125;; </span><br><span class="line"></span><br><span class="line">if(dir==<span class="number">1</span>)&#123;</span><br><span class="line">    if(((type[ta]&gt;&gt;<span class="number">3</span>) &amp; <span class="number">1</span>) &amp;&amp; ((type[tb]&gt;&gt;<span class="number">1</span>) &amp; <span class="number">1</span>))mark = true;  </span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    if(((type[ta]&gt;&gt;<span class="number">2</span>) &amp; <span class="number">1</span>) &amp;&amp; (type[tb] &amp; <span class="number">1</span>))mark = true;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;bits/stdc++.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">const int N=<span class="number">505</span>;</span><br><span class="line">const int type[<span class="number">11</span>][<span class="number">4</span>]=&#123; &#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>&#125;,&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,&#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,&#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>&#125;,&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;,&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125; &#125;;</span><br><span class="line">int n,m,num,cnt; </span><br><span class="line">int fa[N*N+<span class="number">1</span>];</span><br><span class="line">char f[N][N]; </span><br><span class="line">int find(int x)&#123;</span><br><span class="line">if(x!=fa[x])fa[x]=find(fa[x]);</span><br><span class="line">return fa[x];</span><br><span class="line">&#125;</span><br><span class="line">void join(int x1,int y1,int x2,int y2,int dir)&#123;</span><br><span class="line">if(x2&gt;n||y2&gt;m)return;<span class="comment">//超出地图不合并</span></span><br><span class="line">bool flag=false;<span class="comment">//标记是否可连通 </span></span><br><span class="line">int t1,t2;</span><br><span class="line">t1=f[x1][y1]-'A';</span><br><span class="line">t2=f[x2][y2]-'A'; </span><br><span class="line">if(dir==<span class="number">1</span>)&#123;</span><br><span class="line">if(type[t1][<span class="number">3</span>]&amp;&amp;type[t2][<span class="number">1</span>])flag=true;<span class="comment">//竖直方向 </span></span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">if(type[t1][<span class="number">2</span>]&amp;&amp;type[t2][<span class="number">0</span>])flag=true;<span class="comment">//水平方向 </span></span><br><span class="line">&#125;</span><br><span class="line">if(flag)&#123;<span class="comment">//合并 </span></span><br><span class="line">int a=find((x1<span class="number">-1</span>)*m+y1),b=find((x2<span class="number">-1</span>)*m+y2);</span><br><span class="line">if(a!=b)&#123;</span><br><span class="line">fa[b]=a;</span><br><span class="line">--cnt;<span class="comment">//消去一个水井 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">int main()&#123;</span><br><span class="line">while(scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=<span class="literal">EOF</span>)&#123;</span><br><span class="line">if(n==<span class="number">-1</span>&amp;&amp;m==<span class="number">-1</span>)break;</span><br><span class="line">for(int i=<span class="number">1</span>;i&lt;=n*m;i++)&#123;</span><br><span class="line">fa[i]=i;</span><br><span class="line">&#125;</span><br><span class="line">cnt=n*m;<span class="comment">//初始化，假设所有田里都有水井 </span></span><br><span class="line">for(int i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">scanf(<span class="string">"%s"</span>,f[i]+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">for(int i=<span class="number">1</span>;i&lt;=n;i++)&#123;<span class="comment">//统一向右or下合并 </span></span><br><span class="line">for(int j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">join(i,j,i+<span class="number">1</span>,j,<span class="number">1</span>);<span class="comment">//竖直 </span></span><br><span class="line">join(i,j,i,j+<span class="number">1</span>,<span class="number">0</span>);<span class="comment">//水平 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">printf(<span class="string">"%d<span class="subst">\n</span>"</span>,cnt);</span><br><span class="line">&#125;</span><br><span class="line">return <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 图论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 并查集 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1856 More is better（并查集）</title>
      <link href="/2018/08/18/hdu%201856%20More%20is%20better/"/>
      <url>/2018/08/18/hdu%201856%20More%20is%20better/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1856" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1856</a></p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>Mr Wang wants some boys to help him with a project. Because the project is rather complex, the more boys come, the better it will be. Of course there are certain requirements.</p><p>Mr Wang selected a room big enough to hold the boys. The boy who are not been chosen has to leave the room immediately. There are 10000000 boys in the room numbered from 1 to 10000000 at the very beginning. After Mr Wang’s selection any two of them who are still in this room should be friends (direct or indirect), or there is only one boy left. Given all the direct friend-pairs, you should decide the best way.</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The first line of the input contains an integer n (0 &lt;= n &lt;= 100000) - the number of direct friend-pairs. The following n lines each contains a pair of numbers A and B separated by a single space that suggests A and B are direct friends. (A != B, 1 &lt;= A, B &lt;= 10000000) </p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>The output in one line contains exactly one integer equals to the maximum number of boys Mr Wang may keep. </p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">4</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">6</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">6</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">4</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">6</span></span><br><span class="line"><span class="symbol">7 </span><span class="number">8</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>一开始1e7个人，有n对朋友，a和b是朋友</p><p>最后剩下的人必须直接或间接是朋友 求剩下人数的最大值</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>求每个集合中元素的个数，然后求个数的最大值</p><p>求集合个数的方法:只需要在合并两个集合时处理一下，让这两个集合的元素个数也合并一下就行了</p><p>要注意的一个地方就是：当n=0时特判，没人是朋友，最多选一个人要输出1</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100005</span>;</span><br><span class="line"><span class="keyword">int</span> fa[N],sum[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> tmp=x;</span><br><span class="line"><span class="keyword">while</span>(tmp!=fa[tmp])tmp=fa[tmp];</span><br><span class="line">fa[x]=tmp;</span><br><span class="line"><span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">join</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line">a=find(x);b=find(y);</span><br><span class="line"><span class="keyword">if</span>(a!=b)&#123;</span><br><span class="line">fa[a]=b;</span><br><span class="line">sum[b]+=sum[a];<span class="comment">//合并集合中元素个数 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF)&#123;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"1\n"</span>);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)&#123;</span><br><span class="line">fa[i]=i;</span><br><span class="line">sum[i]=<span class="number">1</span>;<span class="comment">//开始时数量的都为1 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(n--)&#123;</span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br><span class="line">num=a&gt;num?a:num;</span><br><span class="line">num=b&gt;num?b:num;</span><br><span class="line">join(a,b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=num;i++)&#123;</span><br><span class="line">ans=sum[i]&gt;ans?sum[i]:ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 图论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 并查集 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1232 畅通工程（并查集）</title>
      <link href="/2018/08/18/hdu%201232%20%E7%95%85%E9%80%9A%E5%B7%A5%E7%A8%8B%EF%BC%88%E5%B9%B6%E6%9F%A5%E9%9B%86%EF%BC%89/"/>
      <url>/2018/08/18/hdu%201232%20%E7%95%85%E9%80%9A%E5%B7%A5%E7%A8%8B%EF%BC%88%E5%B9%B6%E6%9F%A5%E9%9B%86%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1232" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1232</a></p><p>Time Limit: 4000/2000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)</p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>某省调查城镇交通状况，得到现有城镇道路统计表，表中列出了每条道路直接连通的城镇。省政府“畅通工程”的目标是使全省任何两个城镇间都可以实现交通（但不一定有直接的道路相连，只要互相间接通过道路可达即可）。问最少还需要建设多少条道路？ </p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>测试输入包含若干测试用例。每个测试用例的第1行给出两个正整数，分别是城镇数目N ( &lt; 1000 )和道路数目M；随后的M行对应M条道路，每行给出一对正整数，分别是该条道路直接连通的两个城镇的编号。为简单起见，城镇从1到N编号。 </p><p>注意:两个城市之间可以有多条道路相通,也就是说</p><p>3 3<br>1 2<br>1 2<br>2 1<br>这种输入也是合法的</p><p>当N为0时，输入结束，该用例不被处理。 </p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>对每个测试用例，在1行里输出最少还需要建设的道路数目。 </p><p><strong>Sample Input</strong></p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">4 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">5</span></span><br><span class="line"><span class="symbol">999 </span><span class="number">0</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><p><strong>Sample Output</strong></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">998</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>初始化时每个城镇都没有路，所以总共要连接的路的数量为n-1个，在增加路的过程中，先用并查集判断，如果两个城镇确实不在一个集合，这条路就有用，两个城镇归为一个集合中，要连接的路减一。如果两个城镇之前就已经在一个集合里，增加的这条路就无用，要连接的路不变</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100005</span>;</span><br><span class="line"><span class="keyword">int</span> fa[N];</span><br><span class="line"><span class="keyword">int</span> ed;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> tmp=x;</span><br><span class="line"><span class="keyword">while</span>(tmp!=fa[tmp])tmp=fa[tmp];</span><br><span class="line">fa[x]=tmp;</span><br><span class="line"><span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">join</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line">a=find(x);b=find(y);</span><br><span class="line"><span class="keyword">if</span>(a!=b)&#123;</span><br><span class="line">fa[a]=b;</span><br><span class="line">ed++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> m,n,a,b;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line">ed=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)fa[i]=i;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br><span class="line">join(a,b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> k=<span class="number">0</span>,flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> ans=n<span class="number">-1</span>-ed;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 图论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 并查集 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1272 小希的迷宫（并查集）</title>
      <link href="/2018/08/18/hdu%201272%20%E5%B0%8F%E5%B8%8C%E7%9A%84%E8%BF%B7%E5%AE%AB%EF%BC%88%E5%B9%B6%E6%9F%A5%E9%9B%86%EF%BC%89/"/>
      <url>/2018/08/18/hdu%201272%20%E5%B0%8F%E5%B8%8C%E7%9A%84%E8%BF%B7%E5%AE%AB%EF%BC%88%E5%B9%B6%E6%9F%A5%E9%9B%86%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1272" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1272</a><br>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)</p><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>上次Gardon的迷宫城堡小希玩了很久（见Problem B），现在她也想设计一个迷宫让Gardon来走。但是她设计迷宫的思路不一样，首先她认为所有的通道都应该是双向连通的，就是说如果有一个通道连通了房间A和B，那么既可以通过它从房间A走到房间B，也可以通过它从房间B走到房间A，为了提高难度，小希希望任意两个房间有且仅有一条路径可以相通（除非走了回头路）。小希现在把她的设计图给你，让你帮忙判断她的设计图是否符合她的设计思路。比如下面的例子，前两个是符合条件的，但是最后一个却有两种方法从5到达8。<br><img src="http://acm.hdu.edu.cn/data/images/C20-1007-1.jpg" alt=""></p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>输入包含多组数据，每组数据是一个以0 0结尾的整数对列表，表示了一条通道连接的两个房间的编号。房间的编号至少为1，且不超过100000。每两组数据之间有一个空行。<br>整个文件以两个-1结尾。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>对于输入的每一组数据，输出仅包括一行。如果该迷宫符合小希的思路，那么输出”Yes”，否则输出”No”。</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">6</span> <span class="number">8</span>  <span class="number">5</span> <span class="number">3</span>  <span class="number">5</span> <span class="number">2</span>  <span class="number">6</span> <span class="number">4</span></span><br><span class="line"><span class="number">5</span> <span class="number">6</span>  <span class="number">0</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="number">8</span> <span class="number">1</span>  <span class="number">7</span> <span class="number">3</span>  <span class="number">6</span> <span class="number">2</span>  <span class="number">8</span> <span class="number">9</span>  <span class="number">7</span> <span class="number">5</span></span><br><span class="line"><span class="number">7</span> <span class="number">4</span>  <span class="number">7</span> <span class="number">8</span>  <span class="number">7</span> <span class="number">6</span>  <span class="number">0</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="number">3</span> <span class="number">8</span>  <span class="number">6</span> <span class="number">8</span>  <span class="number">6</span> <span class="number">4</span></span><br><span class="line"><span class="number">5</span> <span class="number">3</span>  <span class="number">5</span> <span class="number">6</span>  <span class="number">5</span> <span class="number">2</span>  <span class="number">0</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="number">-1</span> <span class="number">-1</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">Yes</span></span><br><span class="line"><span class="literal">Yes</span></span><br><span class="line"><span class="literal">No</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><ul><li>保证图是连通的，且连通分量为1</li><li>不存在环（包括自环）</li></ul><p>因为这是一个无向图，只要保证 顶点数 = 边数+1 ， 就可以说明是连通的</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100005</span>;</span><br><span class="line"><span class="keyword">int</span> fa[N];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">bool</span> circle;<span class="comment">//判断是否成环</span></span><br><span class="line"><span class="keyword">int</span> ed,v;<span class="comment">//边数和顶点数 </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> tmp=x;</span><br><span class="line"><span class="keyword">while</span>(tmp!=fa[tmp])tmp=fa[tmp];</span><br><span class="line">fa[x]=tmp;</span><br><span class="line"><span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">join</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x==y)circle=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line">a=find(x);b=find(y);</span><br><span class="line"><span class="keyword">if</span>(a!=b)&#123;</span><br><span class="line">fa[a]=b;</span><br><span class="line">ed++;<span class="comment">//多一条边 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> circle=<span class="literal">true</span>;<span class="comment">//要join(x,y)，而a=b说明 x,y是同一祖先，再连起来就成环了 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">circle=<span class="literal">false</span>;</span><br><span class="line">ed=<span class="number">0</span>;v=<span class="number">0</span>; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;N;i++)fa[i]=i;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br><span class="line"><span class="keyword">if</span>(a==<span class="number">0</span>&amp;&amp;b==<span class="number">0</span>)&#123;<span class="comment">//空树特判 </span></span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(a==<span class="number">-1</span>&amp;&amp;b==<span class="number">-1</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">vis[a]=<span class="literal">true</span>;vis[b]=<span class="literal">true</span>;</span><br><span class="line">join(a,b);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br><span class="line"><span class="keyword">if</span>(a==<span class="number">0</span>&amp;&amp;b==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">join(a,b);</span><br><span class="line">vis[a]=<span class="literal">true</span>;vis[b]=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> k=<span class="number">0</span>,flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;N;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(vis[i])v++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!circle&amp;&amp;ed+<span class="number">1</span>==v)<span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 图论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 并查集 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdu 1325 Is it a tree？（并查集）</title>
      <link href="/2018/08/18/hdu%201325%20Is%20it%20a%20tree%EF%BC%9F/"/>
      <url>/2018/08/18/hdu%201325%20Is%20it%20a%20tree%EF%BC%9F/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1325" rel="external nofollow noopener noreferrer" target="_blank">http://acm.hdu.edu.cn/showproblem.php?pid=1325</a><br><img src="/2018/08/18/hdu 1325 Is it a tree？/0.png" alt=""></p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The input will consist of a sequence of descriptions (test cases) followed by a pair of negative integers. Each test case will consist of a sequence of edge descriptions followed by a pair of zeroes Each edge description will consist of a pair of integers; the first integer identifies the node from which the edge begins, and the second integer identifies the node to which the edge is directed. Node numbers will always be greater than zero. </p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each test case display the line <code>Case k is a tree.&quot; or the line</code>Case k is not a tree.”, where k corresponds to the test case number (they are sequentially numbered starting with 1). </p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">6</span> <span class="number">8</span> <span class="number">5</span> <span class="number">3</span> <span class="number">5</span> <span class="number">2</span> <span class="number">6</span> <span class="number">4</span></span><br><span class="line"><span class="number">5</span> <span class="number">6</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">8</span> <span class="number">1</span> <span class="number">7</span> <span class="number">3</span> <span class="number">6</span> <span class="number">2</span> <span class="number">8</span> <span class="number">9</span> <span class="number">7</span> <span class="number">5</span></span><br><span class="line"><span class="number">7</span> <span class="number">4</span> <span class="number">7</span> <span class="number">8</span> <span class="number">7</span> <span class="number">6</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">3</span> <span class="number">8</span> <span class="number">6</span> <span class="number">8</span> <span class="number">6</span> <span class="number">4</span></span><br><span class="line"><span class="number">5</span> <span class="number">3</span> <span class="number">5</span> <span class="number">6</span> <span class="number">5</span> <span class="number">2</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">-1</span> <span class="number">-1</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Case</span> <span class="number">1</span> <span class="keyword">is</span> a tree.</span><br><span class="line"><span class="keyword">Case</span> <span class="number">2</span> <span class="keyword">is</span> a tree.</span><br><span class="line"><span class="keyword">Case</span> <span class="number">3</span> <span class="keyword">is</span> <span class="keyword">not</span> a tree.</span><br></pre></td></tr></table></figure><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>按题意判断是不是一棵树</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>类似hdu1272</p><ul><li>无环；   </li><li>除了根，所有的入度为1，根入度为0；   </li><li>这个结构只有一个根，空树也是树。  </li></ul><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100005</span>;</span><br><span class="line"><span class="keyword">int</span> fa[N];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">bool</span> circle;<span class="comment">//判断是否成环</span></span><br><span class="line"><span class="keyword">int</span> du[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> tmp=x;</span><br><span class="line"><span class="keyword">while</span>(tmp!=fa[tmp])tmp=fa[tmp];</span><br><span class="line">fa[x]=tmp;</span><br><span class="line"><span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">join</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">du[y]++;</span><br><span class="line"><span class="keyword">if</span>(x==y)circle=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line">a=find(x);b=find(y);</span><br><span class="line"><span class="keyword">if</span>(a!=b)&#123;</span><br><span class="line">fa[a]=b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> circle=<span class="literal">true</span>;<span class="comment">//要join(x,y)，而a=b说明 x,y是同一祖先，再连起来就成环了 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"><span class="keyword">int</span> cas=<span class="number">1</span>; </span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line"><span class="built_in">memset</span>(du,<span class="number">0</span>,<span class="keyword">sizeof</span>(du));</span><br><span class="line">circle=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;N;i++)fa[i]=i;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br><span class="line"><span class="keyword">if</span>(a==<span class="number">0</span>&amp;&amp;b==<span class="number">0</span>)&#123;<span class="comment">//空树特判 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Case %d is a tree.\n"</span>,cas);</span><br><span class="line">cas++;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(a&lt;<span class="number">0</span>&amp;&amp;b&lt;<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">vis[a]=<span class="literal">true</span>;vis[b]=<span class="literal">true</span>;</span><br><span class="line">join(a,b);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br><span class="line"><span class="keyword">if</span>(a==<span class="number">0</span>&amp;&amp;b==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">join(a,b);</span><br><span class="line">vis[a]=<span class="literal">true</span>;vis[b]=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> gen=<span class="number">0</span>,flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;N;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(vis[i])&#123;</span><br><span class="line"><span class="keyword">if</span>(du[i]&gt;<span class="number">1</span>)&#123;</span><br><span class="line">flag=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(du[i]==<span class="number">0</span>)gen++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!circle&amp;&amp;flag==<span class="number">0</span>&amp;&amp;gen==<span class="number">1</span>)<span class="built_in">printf</span>(<span class="string">"Case %d is a tree.\n"</span>,cas);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"Case %d is not a tree.\n"</span>,cas);</span><br><span class="line">cas++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 图论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 并查集 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>poj 1182 食物链（并查集）</title>
      <link href="/2018/08/18/poj%201182%20%E9%A3%9F%E7%89%A9%E9%93%BE%EF%BC%88%E5%B9%B6%E6%9F%A5%E9%9B%86%EF%BC%89/"/>
      <url>/2018/08/18/poj%201182%20%E9%A3%9F%E7%89%A9%E9%93%BE%EF%BC%88%E5%B9%B6%E6%9F%A5%E9%9B%86%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://poj.org/problem?id=1182" rel="external nofollow noopener noreferrer" target="_blank">http://poj.org/problem?id=1182</a></p><p>Time Limit: 1000MS        Memory Limit: 10000K</p><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>动物王国中有三类动物A,B,C，这三类动物的食物链构成了有趣的环形。A吃B， B吃C，C吃A。<br>现有N个动物，以1－N编号。每个动物都是A,B,C中的一种，但是我们并不知道它到底是哪一种。<br>有人用两种说法对这N个动物所构成的食物链关系进行描述：<br>第一种说法是”1 X Y”，表示X和Y是同类。<br>第二种说法是”2 X Y”，表示X吃Y。<br>此人对N个动物，用上述两种说法，一句接一句地说出K句话，这K句话有的是真的，有的是假的。当一句话满足下列三条之一时，这句话就是假话，否则就是真话。<br>1）    当前的话与前面的某些真的话冲突，就是假话；<br>2）    当前的话中X或Y比N大，就是假话；<br>3）    当前的话表示X吃X，就是假话。<br>你的任务是根据给定的N（1 &lt;= N &lt;= 50,000）和K句话（0 &lt;= K &lt;= 100,000），输出假话的总数。 </p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第一行是两个整数N和K，以一个空格分隔。<br>以下K行每行是三个正整数 D，X，Y，两数之间用一个空格隔开，其中D表示说法的种类。<br>若D=1，则表示X和Y是同类。<br>若D=2，则表示X吃Y。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>只有一个整数，表示假话的数目。</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">100 </span><span class="number">7</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">101</span> <span class="number">1</span> </span><br><span class="line"><span class="symbol">2 </span><span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">2</span> <span class="number">3</span> </span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span> <span class="number">3</span> </span><br><span class="line"><span class="symbol">1 </span><span class="number">1</span> <span class="number">3</span> </span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span> <span class="number">1</span> </span><br><span class="line"><span class="symbol">1 </span><span class="number">5</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>分成三类 所以用 <strong>并查集+数组加倍</strong></p><p>不知道当时在哪看到的这种数组加倍的写法 反正巨好用</p><p><code>i (i+n) (i+2*n)</code>分别代表abc三个种类</p><p>如果a吃b 就分别把三种的a和b的下一个join起来</p><p>注意这题不合法的输入也要处理成假话</p><p>下面是网上找的带权并查集的写法 但是我还是喜欢数组加倍。。<br><a href="https://blog.csdn.net/sunmaoxiang/article/details/80959300" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/sunmaoxiang/article/details/80959300</a></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">#<span class="keyword">include</span>&lt;cstdio&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">const <span class="keyword">int</span> N=<span class="number">50005</span>;</span><br><span class="line"><span class="keyword">int</span> fa[N*<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> <span class="keyword">find</span>(<span class="keyword">int</span> x)&#123;</span><br><span class="line"><span class="keyword">return</span> fa[x]==x?x:fa[x]=<span class="keyword">find</span>(fa[x]);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="keyword">join</span>(<span class="keyword">int</span> x,<span class="keyword">int</span> y)&#123;</span><br><span class="line">fa[<span class="keyword">find</span>(x)]=<span class="keyword">find</span>(y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> main()&#123;</span><br><span class="line"><span class="keyword">int</span> n,k,ans=<span class="number">0</span>;</span><br><span class="line">scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;k);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">3</span>*n;i++)fa[i]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> a,b,d;</span><br><span class="line">scanf(<span class="string">"%d%d%d"</span>,&amp;d,&amp;a,&amp;b);</span><br><span class="line"><span class="keyword">if</span>(a&gt;n||b&gt;n||a&lt;<span class="number">1</span>||b&lt;<span class="number">1</span>)&#123;</span><br><span class="line">ans++;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(d==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">find</span>(a)==<span class="keyword">find</span>(b+n)||<span class="keyword">find</span>(a)==<span class="keyword">find</span>(b+<span class="number">2</span>*n))&#123;</span><br><span class="line">ans++;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">join</span>(a,b);</span><br><span class="line"><span class="keyword">join</span>(a+n,b+n);</span><br><span class="line"><span class="keyword">join</span>(a+<span class="number">2</span>*n,b+<span class="number">2</span>*n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">find</span>(a)==<span class="keyword">find</span>(b)||<span class="keyword">find</span>(a)==<span class="keyword">find</span>(b+<span class="number">2</span>*n))&#123;</span><br><span class="line">ans++;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">join</span>(a,b+n);</span><br><span class="line"><span class="keyword">join</span>(a+n,b+<span class="number">2</span>*n);</span><br><span class="line"><span class="keyword">join</span>(a+<span class="number">2</span>*n,b);</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line">printf(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 图论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 并查集 </tag>
            
            <tag> 数组加倍 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>poj 1988 Cube Stacking（并查集）</title>
      <link href="/2018/08/18/poj%201988%20Cube%20Stacking%EF%BC%88%E5%B9%B6%E6%9F%A5%E9%9B%86%EF%BC%89/"/>
      <url>/2018/08/18/poj%201988%20Cube%20Stacking%EF%BC%88%E5%B9%B6%E6%9F%A5%E9%9B%86%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://poj.org/problem?id=1988" rel="external nofollow noopener noreferrer" target="_blank">http://poj.org/problem?id=1988</a><br>Time Limit: 2000MS        Memory Limit: 30000K</p><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>Farmer John and Betsy are playing a game with N (1 &lt;= N &lt;= 30,000)identical cubes labeled 1 through N. They start with N stacks, each containing a single cube. Farmer John asks Betsy to perform P (1&lt;= P &lt;= 100,000) operation. There are two types of operations:<br>moves and counts.   </p><ul><li>In a move operation, Farmer John asks Bessie to move the stack containing cube X on top of the stack containing cube Y. </li><li>In a count operation, Farmer John asks Bessie to count the number of cubes on the stack with cube X that are under the cube X and report that value. </li></ul><p>Write a program that can verify the results of the game. </p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><ul><li><p>Line 1: A single integer, P </p></li><li><p>Lines 2..P+1: Each of these lines describes a legal operation. Line 2 describes the first operation, etc. Each line begins with a ‘M’ for a move operation or a ‘C’ for a count operation. For move operations, the line also contains two integers: X and Y.For count operations, the line also contains a single integer: X. </p></li></ul><p>Note that the value for N does not appear in the input file. No move operation will request a move a stack onto itself. </p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>Print the output from each of the count operations in the same order as the input file. </p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">6</span></span><br><span class="line">M <span class="number">1</span> <span class="number">6</span></span><br><span class="line">C <span class="number">1</span></span><br><span class="line">M <span class="number">2</span> <span class="number">4</span></span><br><span class="line">M <span class="number">2</span> <span class="number">6</span></span><br><span class="line">C <span class="number">3</span></span><br><span class="line">C <span class="number">4</span></span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给n个箱子 1-n排成n列<br>有两种操作：</p><ul><li>M：将x所在列上的箱子移到y所在列箱子上面</li><li>C：求x箱子下有几个箱子</li></ul><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>因为有合并两堆箱子的操作 所以想到用并查集 </p><p>这题巧妙的地方在于如何求解这个箱子下面的箱子数 开两个数组</p><p>num[i]记录当前第i列有几个箱子<br>place[i]记录箱子i下面的箱子个数</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">30010</span>;</span><br><span class="line"><span class="keyword">int</span> fa[N],num[N],place[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(fa[x]==x)<span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">int</span> temp=fa[x];</span><br><span class="line">    fa[x]=find(fa[x]);</span><br><span class="line">    place[x]+=place[temp];</span><br><span class="line">    <span class="keyword">return</span> fa[x];</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">join</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    fa[x]=y;</span><br><span class="line">    place[x]+=num[y];</span><br><span class="line">    num[y]+=num[x];</span><br><span class="line">    num[x]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">30000</span>;i++)&#123;</span><br><span class="line">        place[i]=<span class="number">0</span>;</span><br><span class="line">        num[i]=<span class="number">1</span>;</span><br><span class="line">        fa[i]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">char</span> s[<span class="number">5</span>];</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%S"</span>,&amp;s);</span><br><span class="line">        <span class="keyword">if</span>(s[<span class="number">0</span>]==<span class="string">'M'</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> x,y;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line">            <span class="keyword">int</span> x1=find(x),y1=find(y);</span><br><span class="line">            <span class="keyword">if</span>(x1!=y1)join(x1,y1);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(s[<span class="number">0</span>]==<span class="string">'C'</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> x;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">            find(x);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,place[x]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 图论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 并查集 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Teemo&#39;s bad day（并查集）</title>
      <link href="/2018/08/18/Teemo&#39;s%20bad%20day%EF%BC%88%E5%B9%B6%E6%9F%A5%E9%9B%86%EF%BC%89/"/>
      <url>/2018/08/18/Teemo&#39;s%20bad%20day%EF%BC%88%E5%B9%B6%E6%9F%A5%E9%9B%86%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="https://nanti.jisuanke.com/t/29203" rel="external nofollow noopener noreferrer" target="_blank">https://nanti.jisuanke.com/t/29203</a></p><p>Today is a bad day. Teemo is scolded badly by his teacher because he didn’t do his homework.But Teemo is very self-confident, he tells the teacher that the problems in the homework are too simple to solve. So the teacher gets much angrier and says”I will choose a problem in the homework, if you can’t solve it, I will call you mother! “</p><p>The problem is that:</p><p>There is an array A which contains n integers, and an array B which also contains n integers. You can pay one dollar to buy a card which contains two integers a1 and a2, The card can arbitrary number of times transform a single integer a1 to a2 and vise-versa on both array A and Array B. Please calculate the minimum dollars you should pay to make the two array same(For every 1&lt;=i&lt;=n,A[i]=B[i]);</p><h3 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h3><p>The first line of the input contains an integer T(1&lt;=T&lt;=10), giving the number of test cases.<br>For every test case, the first line contains an integer n(1&lt;=n&lt;=500000). The second line contains n integers. The i th integer represents A<a href="1&lt;=A[i]&lt;=100000">i</a>. And the third line contains n integers. The i th integer represents B<a href="1&lt;=B[i]&lt;=100000">i</a>.</p><h3 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h3><p>For each test case, output an integer which means the minimum dollars you should pay in a line.</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">3</span> <span class="number">1</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><hr><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给两个序列，某一张卡片可以把数a换成数b，次数不限，求把两个序列变成相同需要的最少卡片数</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>两个数父亲不同就join（a,b），然后ans++</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;deque&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;numeric&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;limits&gt;</span></span></span><br><span class="line">using namespace std<span class="comment">;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> N=<span class="number">100005</span><span class="comment">;</span></span><br><span class="line"><span class="built_in">int</span> fa[N]<span class="comment">;</span></span><br><span class="line"><span class="built_in">int</span> find(<span class="built_in">int</span> x)&#123;</span><br><span class="line">    <span class="built_in">int</span> tmp=x<span class="comment">;</span></span><br><span class="line">    <span class="keyword">while</span>(fa[tmp]!=tmp)tmp=fa[tmp]<span class="comment">; </span></span><br><span class="line">    fa[x]=tmp<span class="comment">;</span></span><br><span class="line">    <span class="keyword">return</span> tmp<span class="comment">;</span></span><br><span class="line">&#125;</span><br><span class="line">void join(<span class="built_in">int</span> x,<span class="built_in">int</span> y)&#123;</span><br><span class="line">    <span class="keyword">if</span>(find(x)!=find(y))fa[find(x)]=fa[find(y)]<span class="comment">;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">int</span> a[N*<span class="number">5</span>],b[N*<span class="number">5</span>]<span class="comment">;</span></span><br><span class="line"><span class="built_in">int</span> main()&#123;</span><br><span class="line">    <span class="built_in">int</span> t<span class="comment">;</span></span><br><span class="line">    scanf(<span class="string">"%d"</span>,&amp;t)<span class="comment">;</span></span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">int</span> n<span class="comment">;</span></span><br><span class="line">        scanf(<span class="string">"%d"</span>,&amp;n)<span class="comment">;</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">1</span><span class="comment">;i&lt;=N;i++)fa[i]=i;</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">1</span><span class="comment">;i&lt;=n;i++)scanf("%d",&amp;a[i]);</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">1</span><span class="comment">;i&lt;=n;i++)scanf("%d",&amp;b[i]);</span></span><br><span class="line">        <span class="built_in">int</span> ans=<span class="number">0</span><span class="comment">;</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">1</span><span class="comment">;i&lt;=n;i++)&#123;</span></span><br><span class="line">            <span class="built_in">int</span> aa=find(a[i]),bb=find(b[i])<span class="comment">;</span></span><br><span class="line">            <span class="keyword">if</span>(aa==bb)continue<span class="comment">;</span></span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                ans++<span class="comment">;</span></span><br><span class="line">                join(aa,bb)<span class="comment">;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        printf(<span class="string">"%d\n"</span>,ans)<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 图论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 并查集 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1365 浴火银河星际跳跃（并查集）</title>
      <link href="/2018/08/18/1365%20%E6%B5%B4%E7%81%AB%E9%93%B6%E6%B2%B3%E6%98%9F%E9%99%85%E8%B7%B3%E8%B7%83%EF%BC%88%E5%B9%B6%E6%9F%A5%E9%9B%86%EF%BC%89/"/>
      <url>/2018/08/18/1365%20%E6%B5%B4%E7%81%AB%E9%93%B6%E6%B2%B3%E6%98%9F%E9%99%85%E8%B7%B3%E8%B7%83%EF%BC%88%E5%B9%B6%E6%9F%A5%E9%9B%86%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><a href="http://codevs.cn/problem/1365/" rel="external nofollow noopener noreferrer" target="_blank">http://codevs.cn/problem/1365/</a></p><p> 时间限制: 1 s<br> 空间限制: 128000 KB<br> 题目等级 : 黄金 Gold</p><h3 id="题目描述-Description"><a href="#题目描述-Description" class="headerlink" title="题目描述 Description"></a>题目描述 Description</h3><p>小 K 又在玩浴火银河了。。。不过这次他的目的不是跑运输赚钱，而<br>是做任务赚钱。<br>他想知道关于一个任务的两个星系是否可以连通。</p><h3 id="输入描述-Input-Description"><a href="#输入描述-Input-Description" class="headerlink" title="输入描述 Input Description"></a>输入描述 Input Description</h3><p>第一行，三个数，X,N,M<br>X 表示出现的星系代号的最大值；<br>N 表示有 N 个星际跳跃门;<br>M 表示有 M 个任务。<br>接下来的 N 行描述每个星际跳跃门：每行为两个数字（星系代号），<br>星际跳跃门连通这两个星系（星际跳跃门是可以双向通行的）<br>；<br>接下来的 M 行表示每个任务需要到达的星系，每个任务需要到达两<br>个星系。</p><h3 id="输出描述-Output-Description"><a href="#输出描述-Output-Description" class="headerlink" title="输出描述 Output Description"></a>输出描述 Output Description</h3><p>共 M 行。<br>第 i 行表示第 i 个任务是否能完成：即两个星系是否能连通。（能→<br>Yes；不能→No）</p><h3 id="样例输入-Sample-Input"><a href="#样例输入-Sample-Input" class="headerlink" title="样例输入 Sample Input"></a>样例输入 Sample Input</h3><p>5 2 1<br>3 5<br>4 5<br>3 4</p><h3 id="样例输出-Sample-Output"><a href="#样例输出-Sample-Output" class="headerlink" title="样例输出 Sample Output"></a>样例输出 Sample Output</h3><p>Yes</p><h3 id="数据范围及提示-Data-Size-amp-Hint"><a href="#数据范围及提示-Data-Size-amp-Hint" class="headerlink" title="数据范围及提示 Data Size &amp; Hint"></a>数据范围及提示 Data Size &amp; Hint</h3><p>最大数据第一行：19999 17542 1664</p><hr><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">20005</span>;</span><br><span class="line"><span class="keyword">int</span> fa[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> t)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp=t;</span><br><span class="line">    <span class="keyword">while</span>(tmp!=fa[tmp])tmp=fa[tmp];</span><br><span class="line">    fa[t]=tmp;</span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x,n,m,a,b;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=x;i++)fa[i]=i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        <span class="keyword">int</span> tmpa=find(a),tmpb=find(b);</span><br><span class="line">        <span class="keyword">if</span>(tmpa!=tmpb)fa[tmpb]=tmpa;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        <span class="keyword">int</span> tmpa=find(a),tmpb=find(b);</span><br><span class="line">        <span class="keyword">if</span>(tmpa==tmpb)<span class="built_in">cout</span>&lt;&lt;<span class="string">"Yes"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"No"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 图论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 并查集 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1240 莫比乌斯函数（数论）</title>
      <link href="/2018/08/18/1240%20%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%87%BD%E6%95%B0/"/>
      <url>/2018/08/18/1240%20%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%87%BD%E6%95%B0/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 0 难度：基础题 </p><p>莫比乌斯函数，由德国数学家和天文学家莫比乌斯提出。梅滕斯(Mertens)首先使用μ(n)（miu(n)）作为莫比乌斯函数的记号。（据说，高斯(Gauss)比莫比乌斯早三十年就曾考虑过这个函数）。</p><p>具体定义如下：</p><p>如果一个数包含平方因子，那么miu(n) = 0。例如：miu(4), miu(12), miu(18) = 0。</p><p>如果一个数不包含平方因子，并且有k个不同的质因子，那么miu(n) = (-1)^k。例如：miu(2), miu(3), miu(30) = -1,miu(1), miu(6), miu(10) = 1。</p><p>给出一个数n, 计算miu(n)。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>输入包括一个数n，(2 &lt;= n &lt;= 10^9)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出miu(n)。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><p><code>5</code></p><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><p><code>-1</code></p><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>只有一个输入 直接求因子数就好 不用线筛</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mu</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> flag=<span class="number">0</span>,num=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i*i&lt;=x;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(x%i==<span class="number">0</span>)&#123;</span><br><span class="line">            x/=i;</span><br><span class="line">            num++;</span><br><span class="line">            <span class="keyword">if</span>(x%i==<span class="number">0</span>)&#123;</span><br><span class="line">                flag=<span class="number">1</span>;<span class="comment">//包含平方因子</span></span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(num&amp;<span class="number">1</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*o(n)线筛</span></span><br><span class="line"><span class="comment">int mu[N],prime[N];</span></span><br><span class="line"><span class="comment">bool vis[N];</span></span><br><span class="line"><span class="comment">int ji;</span></span><br><span class="line"><span class="comment">void init()&#123;</span></span><br><span class="line"><span class="comment">    mu[1]=1;</span></span><br><span class="line"><span class="comment">    memset(vis,false,sizeof(vis));</span></span><br><span class="line"><span class="comment">    for(int i=2;i&lt;N;i++)&#123;</span></span><br><span class="line"><span class="comment">        if(!vis[i])&#123;</span></span><br><span class="line"><span class="comment">            prime[ji++]=i;</span></span><br><span class="line"><span class="comment">            mu[i]=-1;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        for(int j=0;j&lt;ji&amp;&amp;i*prime[j]&lt;N;j++)&#123;</span></span><br><span class="line"><span class="comment">            vis[i*prime[j]]=true;</span></span><br><span class="line"><span class="comment">            if(i%prime[j])mu[i*prime[j]]=-mu[i];</span></span><br><span class="line"><span class="comment">            else&#123;</span></span><br><span class="line"><span class="comment">                mu[i*prime[j]]=0;</span></span><br><span class="line"><span class="comment">                break;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123; </span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,mu(n));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 莫比乌斯函数 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1256 乘法逆元（数论）</title>
      <link href="/2018/08/18/1256%20%E4%B9%98%E6%B3%95%E9%80%86%E5%85%83/"/>
      <url>/2018/08/18/1256%20%E4%B9%98%E6%B3%95%E9%80%86%E5%85%83/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 0 难度：基础题</p><p>给出2个数M和N(M &lt; N)，且M与N互质，找出一个数K满足0 &lt; K &lt; N且K * M % N = 1，如果有多个满足条件的，输出最小的。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>输入2个数M, N中间用空格分隔（1 &lt;= M &lt; N &lt;= 10^9)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出一个数K，满足0 &lt; K &lt; N且K * M % N = 1，如果有多个满足条件的，输出最小的。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">2 </span><span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>数论 —— 扩展欧几里得</p><p>ax+by=gcd(a,b)   </p><p>a,b互质 有ax+by=1  </p><p>ax%b=1%b </p><p>记x为inv(a) 则 <code>a*inv(a)%b=1%b</code> </p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line">void ex_gcd(LL a,LL b,LL <span class="variable">&amp;x</span>,LL <span class="variable">&amp;y</span>,LL <span class="variable">&amp;d</span>)&#123;</span><br><span class="line">    if(!b)&#123;</span><br><span class="line">        d=a;x=<span class="number">1</span>;y=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        ex_gcd(b,a%b,y,x,d);</span><br><span class="line">        y-=x*(a/b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">LL inv(LL t,LL p)&#123;</span><br><span class="line">    LL d,x,y;</span><br><span class="line">    ex_gcd(t,p,x,y,d);</span><br><span class="line">    return d==<span class="number">1</span>?(x%p+p)%p:<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123; </span><br><span class="line">    LL m,n;</span><br><span class="line">    scanf(<span class="string">"%lld%lld"</span>,<span class="variable">&amp;m</span>,<span class="variable">&amp;n</span>);</span><br><span class="line">    printf(<span class="string">"%lld\n"</span>,inv(m,n));</span><br><span class="line">    return <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逆元 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1264 线段相交（计算几何）</title>
      <link href="/2018/08/17/1264%20%E7%BA%BF%E6%AE%B5%E7%9B%B8%E4%BA%A4/"/>
      <url>/2018/08/17/1264%20%E7%BA%BF%E6%AE%B5%E7%9B%B8%E4%BA%A4/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 0 难度：基础题 </p><p>给出平面上两条线段的两个端点，判断这两条线段是否相交（有一个公共点或有部分重合认为相交）。 如果相交，输出”Yes”，否则输出”No”。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：一个数T，表示输入的测试数量(1 &lt;= T &lt;= 1000)<br>第2 - T + 1行：每行8个数，x1,y1,x2,y2,x3,y3,x4,y4。(-10^8 &lt;= xi, yi &lt;= 10^8)<br>(直线1的两个端点为x1,y1 | x2, y2,直线2的两个端点为x3,y3 | x4, y4)</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出共T行，如果相交输出”Yes”，否则输出”No”。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">2</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">2</span> <span class="number">2</span></span><br><span class="line"><span class="number">-1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">-1</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">Yes</span></span><br><span class="line"><span class="literal">No</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>计算几何判断线段相交模版</p><p>注释掉的部分是不包括端点和线段重合的模版</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> zero(x) (((x)&gt;0?(x):-(x))&lt;eps)</span></span><br><span class="line">struct <span class="built_in">point</span>&#123;</span><br><span class="line"><span class="keyword">double</span> x,y,z;</span><br><span class="line">&#125;q[<span class="number">4</span>];</span><br><span class="line"><span class="comment">//叉积</span></span><br><span class="line"><span class="keyword">double</span> xmult(<span class="built_in">point</span> p1,<span class="built_in">point</span> p2,<span class="built_in">point</span> p0)&#123;</span><br><span class="line">    <span class="built_in">return</span> (p1.x-p0.x)*(p2.y-p0.y)-(p2.x-p0.x)*(p1.y-p0.y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判三点共线</span></span><br><span class="line"><span class="keyword">int</span> dots_inline(<span class="built_in">point</span> p1,<span class="built_in">point</span> p2,<span class="built_in">point</span> p3)&#123;</span><br><span class="line">    <span class="built_in">return</span> zero(xmult(p1,p2,p3));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判点是否在线段上，包括端点</span></span><br><span class="line"><span class="keyword">int</span> dot_online_in(<span class="built_in">point</span> p,<span class="built_in">point</span> l1,<span class="built_in">point</span> l2)&#123;</span><br><span class="line">    <span class="built_in">return</span> zero(xmult(p,l1,l2)&amp;&amp;(l1.x-p.x)*(l2.x-p.x)&lt;eps&amp;&amp;(l1.y-p.y)*(l2.y-p.y)&lt;eps);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判两点在线段同侧,点在线段上返回0</span></span><br><span class="line"><span class="keyword">int</span> same_side(<span class="built_in">point</span> p1,<span class="built_in">point</span> p2,<span class="built_in">point</span> l1,<span class="built_in">point</span> l2)&#123;</span><br><span class="line">    <span class="built_in">return</span> xmult(l1,p1,l2)*xmult(l1,p2,l2)&gt;eps;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判两线段相交，包括端点和重合(p14)</span></span><br><span class="line"><span class="keyword">int</span> intersect_in(<span class="built_in">point</span> u1,<span class="built_in">point</span> u2,<span class="built_in">point</span> v1,<span class="built_in">point</span> v2)&#123;</span><br><span class="line">    <span class="built_in">if</span>(!dots_inline(u1,u2,v1)||!dots_inline(u1,u2,v2))</span><br><span class="line">        <span class="built_in">return</span> !same_side(u1,u2,v1,v2)&amp;&amp;!same_side(v1,v2,u1,u2);</span><br><span class="line">    <span class="built_in">return</span> (dot_online_in(u1,v1,v2)||dot_online_in(u2,v1,v2)||</span><br><span class="line">            dot_online_in(v1,u1,u2)||dot_online_in(v2,u1,u2));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">//判两点在线段异侧</span></span><br><span class="line"><span class="comment">int opposite_side(point p1,point p2,point l1,point l2)&#123;</span></span><br><span class="line"><span class="comment">    return xmult(l1,p1,l2)*xmult(l1,p2,l2)&lt;-eps;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">//判两线段相交，不包括端点和重合</span></span><br><span class="line"><span class="comment">int intersect_ex(point u1,point u2,point v1,point v2)&#123;</span></span><br><span class="line"><span class="comment">    return opposite_side(u1,u2,v1,v2)&amp;&amp;opposite_side(v1,v2,u1,u2);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">int</span> main()&#123; </span><br><span class="line">    <span class="keyword">int</span> t; </span><br><span class="line">    scanf(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="built_in">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)scanf(<span class="string">"%lf%lf"</span>,&amp;q[i].x,&amp;q[i].y);</span><br><span class="line">        <span class="built_in">if</span>(intersect_in(q[<span class="number">0</span>],q[<span class="number">1</span>],q[<span class="number">2</span>],q[<span class="number">3</span>]))puts(<span class="string">"Yes"</span>);</span><br><span class="line">        <span class="built_in">else</span> puts(<span class="string">"No"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算几何 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1265 四点共面（计算几何）</title>
      <link href="/2018/08/17/1265%20%E5%9B%9B%E7%82%B9%E5%85%B1%E9%9D%A2/"/>
      <url>/2018/08/17/1265%20%E5%9B%9B%E7%82%B9%E5%85%B1%E9%9D%A2/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 0 难度：基础题</p><p>给出三维空间上的四个点（点与点的位置均不相同），判断这4个点是否在同一个平面内（4点共线也算共面）。如果共面，输出”Yes”，否则输出”No”。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：一个数T，表示输入的测试数量(1 &lt;= T &lt;= 1000)<br>第2 - 4T + 1行：每行4行表示一组数据，每行3个数，x, y, z, 表示该点的位置坐标(-1000 &lt;= x, y, z &lt;= 1000)。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出共T行，如果共面输出”Yes”，否则输出”No”。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">Yes</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>计算几何四点共面模版 已经包含四点共线的情况了  </p><p>如果四点不能共线 那就用两次三点共线判断一下就行</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> zero(x) (((x)&gt;0?(x):-(x))&lt;eps)</span></span><br><span class="line">struct <span class="built_in">point</span>&#123;</span><br><span class="line"><span class="keyword">double</span> x,y,z;</span><br><span class="line">&#125;q[<span class="number">4</span>];</span><br><span class="line"><span class="comment">//叉积</span></span><br><span class="line"><span class="built_in">point</span> xmult(<span class="built_in">point</span> u,<span class="built_in">point</span> v)&#123;</span><br><span class="line">    <span class="built_in">point</span> ret;</span><br><span class="line">    ret.x=u.y*v.z-v.y*u.z;</span><br><span class="line">    ret.y=u.z*v.x-u.x*v.z;</span><br><span class="line">    ret.z=u.x*v.y-u.y*v.x;</span><br><span class="line">    <span class="built_in">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//点积</span></span><br><span class="line"><span class="keyword">double</span> dmult(<span class="built_in">point</span> u,<span class="built_in">point</span> v)&#123;</span><br><span class="line">    <span class="built_in">return</span> u.x*v.x+u.y*v.y+u.z*v.z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//矢量差</span></span><br><span class="line"><span class="built_in">point</span> subt(<span class="built_in">point</span> u,<span class="built_in">point</span> v)&#123;</span><br><span class="line">    <span class="built_in">point</span> ret;</span><br><span class="line">    ret.x=u.x-v.x;</span><br><span class="line">    ret.y=u.y-v.y;</span><br><span class="line">    ret.z=u.z-v.z;</span><br><span class="line">    <span class="built_in">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//取平面法向量</span></span><br><span class="line"><span class="built_in">point</span> pvec(<span class="built_in">point</span> s1,<span class="built_in">point</span> s2,<span class="built_in">point</span> s3)&#123;</span><br><span class="line">    <span class="built_in">return</span> xmult(subt(s1,s2),subt(s2,s3));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//向量大小</span></span><br><span class="line"><span class="keyword">double</span> vlen(<span class="built_in">point</span> p)&#123;</span><br><span class="line">    <span class="built_in">return</span> <span class="built_in">sqrt</span>(p.x*p.x+p.y*p.y+p.z*p.z);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判三点共线</span></span><br><span class="line"><span class="keyword">int</span> dots_inline(<span class="built_in">point</span> a,<span class="built_in">point</span> b,<span class="built_in">point</span> c)&#123;</span><br><span class="line">    <span class="built_in">return</span> vlen(xmult(subt(a,b),subt(b,c)))&lt;eps;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判四点共面</span></span><br><span class="line"><span class="keyword">int</span> dots_onplane(<span class="built_in">point</span> a,<span class="built_in">point</span> b,<span class="built_in">point</span> c,<span class="built_in">point</span> d)&#123;</span><br><span class="line">    <span class="built_in">return</span> zero(dmult(pvec(a,b,c),subt(d,a)));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">bool</span> check()&#123;</span><br><span class="line">    <span class="built_in">if</span>(dots_onplane(q[<span class="number">0</span>],q[<span class="number">1</span>],q[<span class="number">2</span>],q[<span class="number">3</span>]))<span class="built_in">return</span> true;</span><br><span class="line">    <span class="built_in">return</span> false;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> main()&#123; </span><br><span class="line">    <span class="keyword">int</span> t; </span><br><span class="line">    scanf(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="built_in">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">            scanf(<span class="string">"%lf%lf%lf"</span>,&amp;q[i].x,&amp;q[i].y,&amp;q[i].z);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">if</span>(check())puts(<span class="string">"Yes"</span>);</span><br><span class="line">        <span class="built_in">else</span> puts(<span class="string">"No"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算几何 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1298 圆与三角形（计算几何）</title>
      <link href="/2018/08/17/1298-%E5%9C%86%E4%B8%8E%E4%B8%89%E8%A7%92%E5%BD%A2/"/>
      <url>/2018/08/17/1298-%E5%9C%86%E4%B8%8E%E4%B8%89%E8%A7%92%E5%BD%A2/</url>
      <content type="html"><![CDATA[<p><img src="/2018/08/17/1298-圆与三角形/1.png" alt=""></p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行：一个数T，表示输入的测试数量(1 &lt;= T &lt;= 10000)，之后每4行用来描述一组测试数据。<br>4-1：三个数，前两个数为圆心的坐标xc, yc，第3个数为圆的半径R。(-3000 &lt;= xc, yc &lt;= 3000, 1 &lt;= R &lt;= 3000）<br>4-2：2个数，三角形第1个点的坐标。<br>4-3：2个数，三角形第2个点的坐标。<br>4-4：2个数，三角形第3个点的坐标。(-3000 &lt;= xi, yi &lt;= 3000）</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>共T行，对于每组输入数据，相交输出”Yes”，否则输出”No”。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span> <span class="number">10</span></span><br><span class="line"><span class="symbol">10 </span><span class="number">0</span></span><br><span class="line"><span class="symbol">15 </span><span class="number">0</span></span><br><span class="line"><span class="symbol">15 </span><span class="number">5</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span> <span class="number">10</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">0</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">Yes</span></span><br><span class="line"><span class="literal">No</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>判断圆和三角形是否相交 直接判断三角形三条线段和圆是否有交点 上个计算几何模版</p><p>最初的思路是分成三种情况考虑 一种是内包含 只要判断三个点是否都在圆内即可 第二种是外包含 要判断三个点都在圆外且圆心到三边距离都大于半径 第三种是下图情况 就不好操作了 所以还是直接用模版啦</p><p><img src="/2018/08/17/1298-圆与三角形/3.png" alt=""></p><p>然后系统说我编译错误 明明sublime编译通过了的 麻烦诶。。然后用devc++试了下 报了下图的错  </p><p><img src="/2018/08/17/1298-圆与三角形/2.png" alt=""></p><p>查了是因为distance和内置的函数重名了 改改就好了下次注意</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">double</span> a0,b0,r,a1,a2,a3,b1,b2,b3;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span>&#123;</span></span><br><span class="line"><span class="keyword">double</span> x,y;</span><br><span class="line">&#125;q0,q1,q2,q3;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">xmult</span><span class="params">(point p1,point p2,point p0)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (p1.x-p0.x)*(p2.y-p0.y)-(p2.x-p0.x)*(p1.y-p0.y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Distance</span><span class="params">(point p1,point p2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>((p1.x-p2.x)*(p1.x-p2.x)+(p1.y-p2.y)*(p1.y-p2.y));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 点到直线距离</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">disptoline</span><span class="params">(point p,point l1,point l2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">fabs</span>(xmult(p,l1,l2)/Distance(l1,l2));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 判断线段和圆相交，包括端点和相切(p33)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">intersect_seg_circle</span><span class="params">(point c,<span class="keyword">double</span> r0,point l1,point l2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> t1=Distance(c,l1)-r,t2=Distance(c,l2)-r;</span><br><span class="line">    point t=c;</span><br><span class="line">    <span class="keyword">if</span>(t1&lt;eps||t2&lt;eps)<span class="keyword">return</span> t1&gt;-eps||t2&gt;-eps;</span><br><span class="line">    t.x+=l1.y-l2.y;</span><br><span class="line">    t.y+=l2.x-l1.x;</span><br><span class="line">    <span class="keyword">return</span> xmult(l1,c,t)*xmult(l2,c,t)&lt;eps&amp;&amp;disptoline(c,l1,l2)-r&lt;eps;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(intersect_seg_circle(q0,r,q1,q2))<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(intersect_seg_circle(q0,r,q1,q3))<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(intersect_seg_circle(q0,r,q2,q3))<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;   </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123; </span><br><span class="line">    <span class="keyword">int</span> t; </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf%lf%lf"</span>,&amp;a0,&amp;b0,&amp;r);q0.x=a0;q0.y=b0;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;a1,&amp;b1);q1.x=a1;q1.y=b1;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;a2,&amp;b2);q2.x=a2;q2.y=b2;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;a3,&amp;b3);q3.x=a3;q3.y=b3;</span><br><span class="line">        <span class="keyword">if</span>(check())<span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算几何 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1384 全排列（STL/dfs）</title>
      <link href="/2018/08/17/1384%20%E5%85%A8%E6%8E%92%E5%88%97/"/>
      <url>/2018/08/17/1384%20%E5%85%A8%E6%8E%92%E5%88%97/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 0 难度：基础题</p><p>给出一个字符串S（可能有重复的字符），按照字典序从小到大，输出S包括的字符组成的所有排列。例如：S = “1312”，<br>输出为：</p><p>1123<br>1132<br>1213<br>1231<br>1312<br>1321<br>2113<br>2131<br>2311<br>3112<br>3121<br>3211   </p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>输入一个字符串S（S的长度 &lt;= 9，且只包括0 - 9的阿拉伯数字）</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>输出S所包含的字符组成的所有排列</p><h2 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h2><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1312</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1123</span></span><br><span class="line"><span class="number">1132</span></span><br><span class="line"><span class="number">1213</span></span><br><span class="line"><span class="number">1231</span></span><br><span class="line"><span class="number">1312</span></span><br><span class="line"><span class="number">1321</span></span><br><span class="line"><span class="number">2113</span></span><br><span class="line"><span class="number">2131</span></span><br><span class="line"><span class="number">2311</span></span><br><span class="line"><span class="number">3112</span></span><br><span class="line"><span class="number">3121</span></span><br><span class="line"><span class="number">3211</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>题意很简单 就水水的全排列</p><p>直接next_permutation就好啦 诶好用</p><p>printf竟然tle了 改成 <strong>puts()</strong> 之后跑了46ms </p><p>不过这样太依赖stl了 还是乖乖再写个dfs吧。。</p><p>然后又t了。。1900ms+。。把printf改成cout就过了 跑了484ms 不是很懂 printf不是比cout快的嘛？？？</p><p>而且加上输入输出优化之后<code>ios::sync_with_stdio(false);cin.tie(0);</code> 没有跑得更快反而慢了一丢丢</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line">using namespace std<span class="comment">;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> main()&#123;</span><br><span class="line">    char s[<span class="number">10</span>]<span class="comment">;</span></span><br><span class="line">    scanf(<span class="string">"%s"</span>,s)<span class="comment">;</span></span><br><span class="line">    <span class="built_in">int</span> len=strlen(s)<span class="comment">;</span></span><br><span class="line">    sort(s,s+len)<span class="comment">;</span></span><br><span class="line">    <span class="keyword">do</span>&#123;</span><br><span class="line">        // printf(<span class="string">"%s\n"</span>,s)<span class="comment">;</span></span><br><span class="line">        puts(s)<span class="comment">;</span></span><br><span class="line">    &#125;<span class="keyword">while</span>(next_permutation(s,s+len))<span class="comment">;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">10</span>],len;</span><br><span class="line"><span class="keyword">bool</span> vis[<span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x==len)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)<span class="built_in">cout</span>&lt;&lt;ans[i];</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[i])&#123;</span><br><span class="line">            vis[i]=<span class="literal">true</span>;</span><br><span class="line">            ans[x]=s[i]-<span class="string">'0'</span>;</span><br><span class="line">            dfs(x+<span class="number">1</span>);</span><br><span class="line">            vis[i]=<span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">while</span>(i&lt;=len&amp;&amp;s[i]==s[i+<span class="number">1</span>])i++;<span class="comment">//去重</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;  </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">    len=<span class="built_in">strlen</span>(s);</span><br><span class="line">    sort(s,s+len);</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="literal">false</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">    dfs(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stl </tag>
            
            <tag> dfs </tag>
            
            <tag> 全排列 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1459 迷宫游戏（Dijkstra）</title>
      <link href="/2018/08/16/1459%20%E8%BF%B7%E5%AE%AB%E6%B8%B8%E6%88%8F/"/>
      <url>/2018/08/16/1459%20%E8%BF%B7%E5%AE%AB%E6%B8%B8%E6%88%8F/</url>
      <content type="html"><![CDATA[<p>基准时间限制：1 秒 空间限制：131072 KB 分值: 0 难度：基础题</p><p>你来到一个迷宫前。该迷宫由若干个房间组成，每个房间都有一个得分，第一次进入这个房间，你就可以得到这个分数。还有若干双向道路连结这些房间，你沿着这些道路从一个房间走到另外一个房间需要一些时间。游戏规定了你的起点和终点房间，你首要目标是从起点尽快到达终点，在满足首要目标的前提下，使得你的得分总和尽可能大。现在问题来了，给定房间、道路、分数、起点和终点等全部信息，你能计算在尽快离开迷宫的前提下，你的最大得分是多少么？</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第一行4个整数n (&lt;=500), m, start, end。n表示房间的个数，房间编号从0到(n - 1)，m表示道路数,任意两个房间之间最多只有一条道路，start和end表示起点和终点房间的编号。<br>第二行包含n个空格分隔的正整数(不超过600)，表示进入每个房间你的得分。<br>再接下来m行，每行3个空格分隔的整数x, y, z  <code>(0&lt;z&lt;=200)</code>表示道路,表示从房间x到房间y(双向)的道路,注意，最多只有一条道路连结两个房间, 你需要的时间为z。<br>输入保证从start到end至少有一条路径。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>一行，两个空格分隔的整数，第一个表示你最少需要的时间，第二个表示你在最少时间前提下可以获得的最大得分。</p><h3 id="Input示例"><a href="#Input示例" class="headerlink" title="Input示例"></a>Input示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">2</span> <span class="number">0</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">1</span> <span class="number">10</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">11</span></span><br></pre></td></tr></table></figure><h3 id="Output示例"><a href="#Output示例" class="headerlink" title="Output示例"></a>Output示例</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">21 </span><span class="number">6</span></span><br></pre></td></tr></table></figure><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>dijkstra</p><p><a href="https://blog.csdn.net/qq_35644234/article/details/60870719/" rel="external nofollow noopener noreferrer" target="_blank">最短路径问题—Dijkstra算法详解</a></p><p>这题还要在最短路的基础上求权值最大 开个数组记录一下然后和路径一起更新就行</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">505</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> a[N],cost[N],ans[N];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n,m,start,endd;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;mp[N];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;t[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dij</span><span class="params">()</span></span>&#123; </span><br><span class="line">    <span class="keyword">int</span> x=start;</span><br><span class="line">    vis[x]=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">while</span>(x!=endd)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;mp[x].size();i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> y=mp[x][i];</span><br><span class="line">            <span class="keyword">int</span> tmpcost=cost[x]+t[x][i];</span><br><span class="line">            <span class="keyword">int</span> tmpans=ans[x]+a[y];</span><br><span class="line">            <span class="keyword">if</span>(cost[y]==<span class="number">0</span>||tmpcost&lt;cost[y]||(tmpcost==cost[y]&amp;&amp;tmpans&gt;ans[y]))&#123;</span><br><span class="line">                <span class="comment">//如果x-&gt;y的路在之前还未连通</span></span><br><span class="line">                <span class="comment">//或者新路径从x-&gt;y的时间小于原来的，或等于但是权值更大，就更新答案</span></span><br><span class="line">                ans[y]=tmpans;</span><br><span class="line">                cost[y]=tmpcost;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> minn=INF,maxx=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="comment">//如果i没有标记过且x-&gt;i目前最优，从i出发继续找</span></span><br><span class="line">            <span class="keyword">if</span>(!vis[i]&amp;&amp;cost[i]!=<span class="number">0</span>&amp;&amp;(cost[i]&lt;minn||(cost[i]==minn&amp;&amp;ans[i]&gt;maxx)))&#123;</span><br><span class="line">                minn=cost[i];</span><br><span class="line">                maxx=ans[i];</span><br><span class="line">                x=i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        vis[x]=<span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;n,&amp;m,&amp;start,&amp;endd);</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="literal">false</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="built_in">memset</span>(cost,<span class="number">0</span>,<span class="keyword">sizeof</span>(cost));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        ans[i]=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> u,v,w;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;w);</span><br><span class="line">        mp[u].push_back(v);</span><br><span class="line">        mp[v].push_back(u);</span><br><span class="line">        t[u].push_back(w);</span><br><span class="line">        t[v].push_back(w);</span><br><span class="line">    &#125;</span><br><span class="line">    dij();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,cost[endd],ans[endd]);  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dijkstra </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>F.The Best Path--ACM-ICPC 2016 Qingdao Preliminary Contest</title>
      <link href="/2018/08/15/F.The%20Best%20Path/"/>
      <url>/2018/08/15/F.The%20Best%20Path/</url>
      <content type="html"><![CDATA[<p><a href="https://nanti.jisuanke.com/t/29370" rel="external nofollow noopener noreferrer" target="_blank">https://nanti.jisuanke.com/t/29370</a></p><p><img src="/2018/08/15/F.The Best Path/123.png" alt=""></p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">3</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">4</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line">Impossible</span><br></pre></td></tr></table></figure><p>题目来源<br>ACM-ICPC 2016 Qingdao Preliminary Contest</p><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>给一个图，每个点有一个权值，找欧拉通路或者欧拉回路，然后求路径上每个点异或结果的最大值；</p><p>首先判断有没有欧拉回路或者通路，用一下定理就好了，有且仅有两个度数为奇数的点则有欧拉通路，没有度数为奇数的点则有欧拉回路；</p><p>然后把对异或值有贡献的算上，有贡献的点就是d为奇数的点和（d/2）为奇数的点，因为经过偶数次的点相当于没有贡献；</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100005</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,a[N],d[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t,u,v;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">memset</span>(d,<span class="number">0</span>,<span class="keyword">sizeof</span>(d));</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</span><br><span class="line">            d[u]++;d[v]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(d[i]&amp;<span class="number">1</span>)num++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(num==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>((d[i]/<span class="number">2</span>)&amp;<span class="number">1</span>||d[i]&amp;<span class="number">1</span>)ans^=a[i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> tmp=ans;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">                ans=max(ans,tmp^a[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(num==<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>((d[i]/<span class="number">2</span>)&amp;<span class="number">1</span>||d[i]&amp;<span class="number">1</span>)ans^=a[i];</span><br><span class="line">            &#125;      </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"Impossible\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 图论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 欧拉路径 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>D.Tea--ACM-ICPC 2016 Qingdao Preliminary Contest</title>
      <link href="/2018/08/15/D.Tea/"/>
      <url>/2018/08/15/D.Tea/</url>
      <content type="html"><![CDATA[<p><a href="https://nanti.jisuanke.com/t/29368" rel="external nofollow noopener noreferrer" target="_blank">https://nanti.jisuanke.com/t/29368</a><br>Tea is good.</p><p>Tea is life.</p><p>Tea is everything.</p><p>The balance of tea is a journey of pursuing balance of the universe.</p><p>Alice knows that.</p><p>Alice wants to teach you the art of pouring tea.</p><p>Alice has a pot of tea.</p><p>The exact volume of tea is not important.</p><p>The exact volume of tea is at least LL.</p><p>The exact volume of tea is at most RR.</p><p>Alice put two empty cups between you and her.</p><p>Alice wants the two cups filled by almost equal volume of tea.</p><p>Yours cannot be 11 unit more than hers.</p><p>Hers cannot be 11 unit more than yours.</p><p>Alice wants you to pour the tea.</p><p>Alice wants you to pour until the pot is almost empty.</p><p>Alice wants no more than 11 unit volume of tea remaining in the pot.</p><p>You cannot read the residue volume of tea remaining in the pot.</p><p>You can only know the tea status in the pot, empty or not.</p><p>Alice does not want you to pour the tea too many times.</p><p>You better pour as few times as possible.</p><h3 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h3><p>There are multiple cases.</p><p>For each case, there is one line of two integers LL and RR, separated by single space.</p><p>Here are some analyses about sample cases.</p><p>For the first case, pouring 11 unit into one cup will satisfy Alice.</p><p>For the second case, it is clearly that you cannot only pour once to reach the desired balance, but she can achieve it by pouring twice.</p><p>First you pour 1.51.5 units into one cup, then you attempt to pour another 1.51.5 units into the other cup.</p><p>Since the lower bound is 22, at least 0.50.5 unit remains in the pot after the first pouring.</p><p>If the initial volume is in range [2,\ 3][2, 3], the second cup will have volume in range [0.5,\ 1.5][0.5, 1.5] which is balanced with 1.51.5 unit in the first cup, and at most 11 unit remain after these two attempts.</p><p>About 10001000 test cases, and 0\le L\le R \le 10^{16}0≤L≤R≤10<br>16<br> .</p><h3 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h3><p>For each case, there should be a single integer in a single line, the least number of pouring attempts.</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">2 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">4</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><p>题目来源<br>ACM-ICPC 2016 Qingdao Preliminary Contest</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>一开始的策略有点问题，第一杯倒 l/2 第二杯倒 l/2+1 这样不一定是最优的； </p><p>举个例子（4 9）这组数据，第一杯2，第二杯3，第一杯2+2，第二杯还需要再加一次；  </p><p>而第一杯倒（l+1）/2 ，第二杯倒（l+1）/2+1的话，（4 9），第一杯2.5 第二杯3.5 第一杯 2.5 +2，达成要求；  </p><p>所以最优策略是第一杯倒（l+1）/2 ，第二杯倒（l+1）/2+1 ，然后剩下的轮流加2，直至壶中水小于等于1；</p><p>特判几个特殊情况，具体见代码，需要注意的是，如果l=0，那么一开始（0+1）/2=0，显然不倒水是不划算的，所以如果特判结束后l=0则l=1；</p><hr><p>###代码：<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line">using namespace std<span class="comment">;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#define LL long long</span></span><br><span class="line"><span class="built_in">int</span> main()&#123;</span><br><span class="line">    LL l,r<span class="comment">;</span></span><br><span class="line">    <span class="keyword">while</span>(~scanf(<span class="string">"%lld%lld"</span>,&amp;l,&amp;r))&#123;</span><br><span class="line">        <span class="keyword">if</span>(r==<span class="number">0</span>||r==<span class="number">1</span>)puts(<span class="string">"0"</span>)<span class="comment">;</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(r==<span class="number">2</span>)puts(<span class="string">"1"</span>)<span class="comment">;</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(l==r||l==r<span class="number">-1</span>)puts(<span class="string">"2"</span>)<span class="comment">;</span></span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(l==<span class="number">0</span>)l=<span class="number">1</span><span class="comment">;</span></span><br><span class="line">            printf(<span class="string">"%lld\n"</span>,(r-l+<span class="number">2</span>)/<span class="number">2</span>)<span class="comment">;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 杂 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>2006 飞行员配对(二分图最大匹配,匈牙利算法)</title>
      <link href="/2018/08/15/2006%20%E9%A3%9E%E8%A1%8C%E5%91%98%E9%85%8D%E5%AF%B9/"/>
      <url>/2018/08/15/2006%20%E9%A3%9E%E8%A1%8C%E5%91%98%E9%85%8D%E5%AF%B9/</url>
      <content type="html"><![CDATA[<p>题目来源： 网络流24题<br>基准时间限制：1 秒 空间限制：131072 KB 分值: 0 难度：基础题  </p><p>第二次世界大战时期，英国皇家空军从沦陷国征募了大量外籍飞行员。由皇家空军派出的每一架飞机都需要配备在航行技能和语言上能互相配合的2名飞行员，其中1名是英国飞行员，另1名是外籍飞行员。在众多的飞行员中，每一名外籍飞行员都可以与其他若干名英国飞行员很好地配合。如何选择配对飞行的飞行员才能使一次派出最多的飞机。对于给定的外籍飞行员与英国飞行员的配合情况，试设计一个算法找出最佳飞行员配对方案，使皇家空 军一次能派出最多的飞机 。对于给定的外籍飞行员与英国飞行员的配合情况，编程找出一个最佳飞行员配对方案， 使皇家空军一次能派出最多的飞机。 </p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第1行有2个正整数 m 和 n。n 是皇家空军的飞行 员总数(n&lt;100);m 是外籍飞行员数。外籍飞行员编号为 1~m;英国飞行员编号为 m+1~n。接下来每行有 2 个正整数 i 和 j，表示外籍飞行员 i 可以和英国飞行员 j 配合。输入最后以 2 个-1 结束。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>第 1 行是最佳飞行 员配对方案一次能派出的最多的飞机数 M。如果所求的最佳飞行员配对方案不存在，则输出‘No Solution!’。</p><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>裸的匈牙利算法求二分图最大匹配</p><p>这篇讲的超级生动形象了<a href="https://blog.csdn.net/cillyb/article/details/55511666" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/cillyb/article/details/55511666</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">105</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;g[N];</span><br><span class="line"><span class="keyword">int</span> n,m,ans=<span class="number">0</span>,match[N];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;g[x].size();i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> v=g[x][i];</span><br><span class="line">        <span class="keyword">if</span>(!vis[v])&#123;</span><br><span class="line">            vis[v]=<span class="literal">true</span>;<span class="comment">//标记已试图匹配</span></span><br><span class="line">            <span class="keyword">if</span>(match[v]==<span class="number">-1</span>||dfs(match[v]))&#123;</span><br><span class="line">            <span class="comment">//这个点没匹配过或者这个点匹配的可拆</span></span><br><span class="line">                match[v]=x;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;m,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y),x!=<span class="number">-1</span>&amp;&amp;y!=<span class="number">-1</span>)&#123;</span><br><span class="line">        g[x].push_back(y);</span><br><span class="line">        g[y].push_back(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(match,<span class="number">-1</span>,<span class="keyword">sizeof</span>(match));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="built_in">memset</span>(vis,<span class="literal">false</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">        <span class="keyword">if</span>(dfs(i))ans++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二分图 </tag>
            
            <tag> 匈牙利算法 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Mac OS下用「hexo+github」搭建个人博客！</title>
      <link href="/2018/08/14/blog/"/>
      <url>/2018/08/14/blog/</url>
      <content type="html"><![CDATA[<p style="background-color:rgba(219,233,243,0.8)">这个不是教程 只是搭建过程记录向 记录一下我报错查教程改错报错查教程改错报错查教程改错。。的过程 前面有些步骤在后面有报错然后修正 所以千万不要相信我的步骤</p><hr><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p><strong> 安装nodejs和git（这个自己在官网安装就可以）</strong><br><strong> 接着要用npm安装hexo </strong><br>在终端输入<code>npm install -g hexo-cli</code></p><p><img src="/2018/08/14/blog/0.png" alt=""></p><p>很多报错 可以看见好几个都是permission denied（因为权限不足无法访问）<br>可以看见提示的建议是：<code>Please try running this command again as root/Administrator.</code><br>所以重新输入<code>sudo npm install -g hexo-cli</code>（sudo：申请root权限）<br>下图表明安装成功  </p><p><img src="/2018/08/14/blog/1.png" alt=""></p><h2 id="用hexo在本地新建一个博客"><a href="#用hexo在本地新建一个博客" class="headerlink" title="用hexo在本地新建一个博客"></a>用hexo在本地新建一个博客</h2><p><strong> 新建文件夹然后右键「新建位于文件夹位置的终端窗口」</strong><br>（第一次使用的话可以在【finder-服务-服务偏好设置】中勾选上那一项）<br><strong> 文件夹位置下终端输入 </strong><br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="selector-tag">i</span> blog<span class="comment">//blog是项目名，叫别的也随便</span></span><br><span class="line">cd blog<span class="comment">//进入blog文件夹</span></span><br><span class="line">hexo g<span class="comment">//编译</span></span><br><span class="line">hexo s<span class="comment">//本地预览</span></span><br></pre></td></tr></table></figure></p><p><img src="/2018/08/14/blog/2.png" alt=""></p><p>（后两句不加sudo的话同样会出现permission denied的问题 所以在开头加上sudo给他权限就可以啦 下面有些地方还会遇到sudo的问题 就不赘述了 报权限不够的错误的话自己加上）</p><p>成功后会给出一个链接 一个在本地的博客就这样建好了 点开就可以发现已经有一个博客的大概了</p><p><img src="/2018/08/14/blog/3.png" alt=""></p><p><img src="/2018/08/14/blog/4.png" alt=""></p><p style="background-color:rgba(219,233,243,0.8)">这里用到了4000端口 如果该端口被占用的话可以查一下是什么东西占用了这个端口<code>sudo lsof -i:端口号</code> 如果没有输出表面该端口没有被占用 被占用的话会给出一个进程 里面有一个PID号 如果是没设么用的进程 输入<code>sudo kill -9 pid号</code>结束掉他即可</p><p>默认给的是个叫「landscape」的主题 不同主题有不同的功能布局外观 当然也可以自己写个主题出来<br>不过这种是大佬们的操作 我这个小白还是先找个主题用吧。。<br>这里放上一些主题：<a href="https://github.com/hexojs/hexo/wiki/Themes" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/hexojs/hexo/wiki/Themes</a> 此外知乎上也有关于hexo主题的讨论</p><h2 id="设置博客主题"><a href="#设置博客主题" class="headerlink" title="设置博客主题"></a>设置博客主题</h2><p><strong> 在文件夹打开终端输入git clone加上所选主题的地址 </strong></p><p>(此处以及后面所说的终端一般都是blog文件夹终端了)</p><p><code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code></p><p><img src="/2018/08/14/blog/5.png" alt=""></p><p><strong> 打开文件夹下的这个文件 官方名叫站点配置文件 </strong></p><p><img src="/2018/08/14/blog/6.png" alt=""></p><p><strong> 然后找到里面的theme并更改 </strong>  </p><p><img src="/2018/08/14/blog/7.png" alt=""></p><p><strong> 回到终端输入 </strong><br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo clean</span></span><br><span class="line"><span class="attribute">hexo g</span></span><br><span class="line"><span class="attribute">hero s</span></span><br></pre></td></tr></table></figure></p><p>点进生成的blog可以看见主题已经换好啦</p><p><img src="/2018/08/14/blog/8.png" alt=""></p><p><strong> 在[themes/next/config.yml]里配置next </strong></p><p>冒号后面是有空格的 后面有些地方也是一样！！！一定要有空格 不然会报很长很长的错！！！</p><p>可以看见备注写了三个方案给你选</p><p><img src="/2018/08/14/blog/9.png" alt=""></p><p>然后重新输入以下代码查看效果   </p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo clean</span></span><br><span class="line"><span class="attribute">hexo g</span></span><br><span class="line"><span class="attribute">hero s</span></span><br></pre></td></tr></table></figure><p><img src="/2018/08/14/blog/10.png" alt=""></p><p>这时候这里出现了一个警告 </p><p><img src="/2018/08/14/blog/11.png" alt=""></p><p><a href="https://github.com/theme-next/hexo-theme-next" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/theme-next/hexo-theme-next</a></p><p>我用的这个next主题已经移动到别的地方了 所以问题不大复制一下然后找到这个主题的新的地址 按照上面步骤改一下就行<br>注意要把之前的主题所在文件夹删了 或者生成的时候自己换个不同的文件夹名字</p><p><img src="/2018/08/14/blog/12.png" alt=""></p><p>上面是Gemini 还蛮好看蛮直男审美的 就这个吧诶嘿</p><p>以上就是在本地建立了一个看得过去的blog了<br>下面要把这个本地blog上传到github</p><h2 id="把博客部署到GitHub上"><a href="#把博客部署到GitHub上" class="headerlink" title="把博客部署到GitHub上"></a>把博客部署到GitHub上</h2><p><strong> 先在GitHub上创建一个新项目 </strong></p><p><img src="/2018/08/14/blog/14.png" alt=""></p><p>项目名必须按如下格式输入 最后一项选上</p><p><img src="/2018/08/14/blog/15.png" alt=""></p><p>创建后点项目的setting 下拉找到github pages</p><p><img src="/2018/08/14/blog/16.png" alt=""></p><p>看不懂就翻译了一下 那么发现啦那个网址就是我们要用的<br>现在还是宇宙洪荒混沌初始的状态</p><p><img src="/2018/08/14/blog/17.png" alt=""></p><p>接下来要把hexo上的内容部署到github上</p><p><strong> 打开之前提到过的站点配置文件 把最后几行改成如下格式 </strong></p><p><img src="/2018/08/14/blog/18.png" alt=""></p><p><strong> 在终端输入如下 装个插件 </strong><br><code>npm install hexo-deployer-git --save</code></p><p><img src="/2018/08/14/blog/19.png" alt=""></p><p>emmmmmm???报了一堆错 没事 照他的提示在mac终端输入<code>npm i -g npm</code>更新一下就好了<br>更新成功的界面如下</p><p><img src="/2018/08/14/blog/20.png" alt=""></p><p>查一下也可以发现变成 6.3.0 版本了。。这不重要</p><p>然后就是最后激动人心的一步了！！！！！<br><strong> 输入hexo d把它部署到github的网站上去 </strong></p><p>然后就走上了漫长的报错之路。。</p><p><img src="/2018/08/14/blog/21.png" alt=""></p><p>然后又经历了一系列艰苦卓绝我也不知道发生了啥的几个小时的查来查去试来试去！<br>最后 终于突然一下的改好了？？！</p><p>emmmmm不废话了先记录下来 大概讲讲我干了些啥</p><p>主要问题还是出在站点配置文件上 因为报错的时候一直说这个找不到那个找不到。。你都找不到我哪找得到啊</p><p>然后去找了一些有关hexo站点配置的教程 其中这份讲的是比较详细的了 照着这个改了最后那一段</p><p><a href="https://blog.csdn.net/xuezhisdc/article/details/53130383" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/xuezhisdc/article/details/53130383</a></p><p><img src="/2018/08/14/blog/22.png" alt=""></p><p>然后输入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-deployer-git <span class="comment">--save </span></span><br><span class="line">sudo hexo clean </span><br><span class="line">sudo hexo g </span><br><span class="line">sudo hexo d</span><br></pre></td></tr></table></figure><p>还原一下我的小白操作。。<br>最后终端的结果没报错了也没说啥奇奇怪怪得话了就说明成功了</p><p><img src="/2018/08/14/blog/23.png" alt=""></p><p>回到github上可以发现 这些东西已经上传到GitHub了</p><p><img src="/2018/08/14/blog/24.png" alt=""></p><p>然后就点开github之前给的那个链接 如图</p><p><img src="/2018/08/14/blog/25.png" alt=""></p><p><strong> 之前的本地网站已经上传了！！撒花！！！！ </strong></p><hr><h3 id="补充一点内容："><a href="#补充一点内容：" class="headerlink" title="补充一点内容："></a>补充一点内容：</h3><p>首先是关于博客美化的问题 这个就看到什么好看的功能就往上使就是了 next主题美化教程还是很多哒 还有一些关于目录标签的功能 都很好上手</p><p>这篇是一个小小小小小汇总：<br><a href="https://leflacon.github.io/2018/08/29/blog2.0/">hexo下各种博客美化和功能插件汇总（内附本博客css样式）</a></p><p>然后就是耍了几天博客会发现一个严重的问题！百度！Google！！竟然查不到我自己的网站 但是吧这个坑已经挖了。。不填怎么行。。网上找一下百度Google递交搜索引擎的教程就好了 </p><blockquote><p>github站点在百度的http认证到是无法通过的，原因写在下面了</p></blockquote><blockquote><p>google的效率倒是相当快操作也很简洁 站点地图也交好了 一觉醒来在google上搜索到自己博客的感觉 还蛮妙2333333</p></blockquote><p>这里在站点地图提交的时候遇到一个问题 <code>此位置的 Sitemap 不允许此网址</code> </p><blockquote><p>是因为之前在站点配置文件里的 <code>url:</code>  那一项没有设置 要改成自己网站的地址 改完后提交站点地图就不会报错了</p></blockquote><hr><h3 id="更新：关于百度http认证无法通过的问题"><a href="#更新：关于百度http认证无法通过的问题" class="headerlink" title="更新：关于百度http认证无法通过的问题"></a><p style="background-color:rgba(219,233,243,0.8)">更新：关于百度http认证无法通过的问题</p></h3><p>有一次用百度蜘蛛爬了一下，然后发现了抓取失败的原因是被拒绝访问了</p><p><img src="/2018/08/14/blog/100.png" alt=""></p><p><a href="http://jerryzou.com/posts/feasibility-of-allowing-baiduSpider-for-Github-Pages/?utm_source=tuicool" rel="external nofollow noopener noreferrer" target="_blank">解决 Github Pages 禁止百度爬虫的方法与可行性分析</a> 这篇是15年的文章，里面有github support部门的回复的原因</p><p><a href="https://www.zhihu.com/question/30898326" rel="external nofollow noopener noreferrer" target="_blank">如何解决百度爬虫无法爬取搭建在Github上的个人博客的问题？</a></p><p>目前的办法可能是要用cdn加速一下0.0，但是去看了一下站点最近的一些指数，索引量抓取频次啥的都有各种数据了，而且百度已经收录了不少博文了，不像刚开始一条直线。。所以暂时先偷个懒吧(/ω＼)</p><hr>]]></content>
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> mac OS </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>1995 三子棋</title>
      <link href="/2018/08/14/1995%20%E4%B8%89%E5%AD%90%E6%A3%8B%20%20/"/>
      <url>/2018/08/14/1995%20%E4%B8%89%E5%AD%90%E6%A3%8B%20%20/</url>
      <content type="html"><![CDATA[<p>题目来源： syu校赛<br>基准时间限制：1 秒 空间限制：131072 KB 分值: 0 难度：基础题 </p><p>小的时候大家一定玩过“井”字棋吧。也就是在九宫格中，只要任意行、列，或者任意连续对角线上面出现三个相同的，就能获胜。现在小明和小花也在玩三子棋，但是他们不是在九宫格里，而是在3×4的格子里面。现在小明先下，但是他知道小花这个人很聪明，他想知道第一步下在哪一个地方最合适，你能帮帮他吗？</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第一行输入一个整数T，表示数据组数（1&lt;T&lt;10000）；<br>第二行输入两个整数x,y,表示3×4格子里面的一个坐标(x,y)（1&lt;=x&lt;=3,1&lt;=y&lt;=4）；    </p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>每组数据输出最后小明输赢的结果，如果小明一定能赢，第一行输出“Win”,第二行输出小明所需要花的最少步数；如果小明跟小花只能打成平手，第一行输出“Equal”，第二行输出数字0；如果小明不能赢也不能跟小花打成平手，第一行输出“Lose”,第二行输出小花赢小明所需要花的最少步数</p><hr><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>抱着作a+b的心态开始刷基础题，结果基础题怎么这么不水呢么。。<br>没想到啥好方法，就自己跟自己下模拟；<br>策略就和一般五子棋差不多，关于最少步数，由于对手也是绝顶聪明的，所以不会让你下在很快赢的地方，其实应该算最多步数的最少步数那个意思。。大概；   </p><p>棋盘是对称的，所以只要看（1，1）（1，2）（2，1）（2，2）四个点就可以；<br>如下表：  </p><table><thead><tr><th>1</th><th>2</th><th>2</th><th>1</th></tr></thead><tbody><tr><td>3</td><td>4</td><td>4</td><td>3</td></tr><tr><td>1</td><td>2</td><td>2</td><td>1</td></tr></tbody></table><p>然后结论是对先手来说（1，1）（1，2）（2，2）必胜，（2，1）平局；  </p><p>（1，1）的最短路是6：<br>先手:11-&gt;12-&gt;31-&gt;23-&gt;32形成“双二”再下一步就赢了<br>后手:21-&gt;13-&gt;21-&gt;34-&gt;   </p><p>（1，2）的最短路是4：<br>先手:12-&gt;23-&gt;32形成“双二”再下一步就赢了<br>后手:13-&gt;34-&gt;   </p><p>（2，2）的最短路是4：<br>先手:22-&gt;13-&gt;11形成“双二”再下一步就赢了<br>后手:23-&gt;31-&gt;   </p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line">using namespace std<span class="comment">;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> a[<span class="number">3</span>][<span class="number">4</span>]=&#123;<span class="number">6</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">6</span>&#125;<span class="comment">;</span></span><br><span class="line"><span class="built_in">int</span> main()&#123;</span><br><span class="line">    <span class="built_in">int</span> t,x,y<span class="comment">;</span></span><br><span class="line">    scanf(<span class="string">"%d"</span>,&amp;t)<span class="comment">;</span></span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y)<span class="comment">;</span></span><br><span class="line">        x--<span class="comment">;</span></span><br><span class="line">        y--<span class="comment">;</span></span><br><span class="line">        <span class="keyword">if</span>(a[x][y]==<span class="number">0</span>)printf(<span class="string">"Equal\n0\n"</span>)<span class="comment">;</span></span><br><span class="line">        <span class="keyword">else</span> printf(<span class="string">"Win\n%d\n"</span>,a[x][y])<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 51nod基础题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hello-world [Topping]</title>
      <link href="/2018/08/11/hello-world/"/>
      <url>/2018/08/11/hello-world/</url>
      <content type="html"><![CDATA[<hr><center>  ❤️ 十月加油 ❤️  </center><p><br></p><center>  </center><hr>]]></content>
      
      <categories>
          
          <category> poi </category>
          
      </categories>
      
      
    </entry>
    
  
  
</search>
